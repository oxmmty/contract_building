{
    "contractName": "Erc20Permit",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "name_",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "symbol_",
                    "type": "string"
                },
                {
                    "internalType": "uint8",
                    "name": "decimals_",
                    "type": "uint8"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "burnAmount",
                    "type": "uint256"
                }
            ],
            "name": "Burn",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "mintAmount",
                    "type": "uint256"
                }
            ],
            "name": "Mint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "PERMIT_TYPEHASH",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "nonces",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "deadline",
                    "type": "uint256"
                },
                {
                    "internalType": "uint8",
                    "name": "v",
                    "type": "uint8"
                },
                {
                    "internalType": "bytes32",
                    "name": "r",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32"
                }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "version",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"details\":\"See https://eips.ethereum.org/EIPS/eip-2612.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\",\"returns\":{\"_0\":\"a boolean value indicating whether the operation succeeded. Requirements: - `spender` cannot be the zero address.\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"This is an alternative to {approve} that can be used as a mitigation for problems described in {Erc20Interface-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"This is an alternative to {approve} that can be used as a mitigation for problems described above. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `amount` as the allowance of `spender` over `owner`'s tokens, assuming the latter's signed approval. IMPORTANT: The same issues Erc20 `approve` has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `owner` cannot be the zero address. - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the Eip712-formatted function arguments. - The signature must use `owner`'s current nonce.\"},\"transfer(address,uint256)\":{\"details\":\"Emits a {Transfer} event.\",\"returns\":{\"_0\":\"a boolean value indicating whether the operation succeeded. Requirements: - `recipient` cannot be the zero address. - The caller must have a balance of at least `amount`.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Emits a {Transfer} event. Emits an {Approval} event indicating the updated allowance. This is not required by the Erc. See the note at the beginning of {Erc20};\",\"returns\":{\"_0\":\"a boolean value indicating whether the operation succeeded. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - The caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"title\":\"Erc20Permit\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"EVENTS\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The Eip712 domain's keccak256 hash.\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"keccak256(\\\"Permit(address owner,address spender,uint256 amount,uint256 nonce,uint256 deadline)\\\");\"},\"allowance(address,address)\":{\"notice\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"notice\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\"},\"balanceOf(address)\":{\"notice\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"notice\":\"Returns the number of decimals used to get its user representation.\"},\"decreaseAllowance(address,uint256)\":{\"notice\":\"Atomically decreases the allowance granted to `spender` by the caller.\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"Atomically increases the allowance granted to `spender` by the caller.\"},\"name()\":{\"notice\":\"Returns the name of the token.\"},\"nonces(address)\":{\"notice\":\"Provides replay protection.\"},\"symbol()\":{\"notice\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"notice\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Moves `amount` tokens from the caller's account to `recipient`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"See Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\"},\"version()\":{\"notice\":\"Eip712 version of this implementation.\"}},\"notice\":\"Extension of Erc20 that allows token holders to use their tokens without sending any transactions by setting the allowance with a signature using the `permit` method, and then spend them via `transferFrom`.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Permit.sol\":\"Erc20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/math/CarefulMath.sol\":{\"keccak256\":\"0x184b6a13107bfa9fca54f696496f5c9730c2d4f3f8257c7a2342cf08643f9a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e7f35e4fec7636a07d89911446686a7fe4331e1fea5993f32e6c42f96d3c92\",\"dweb:/ipfs/QmcUkxqK8xPswfACUZi1Kg2KLmCJCTtMjfKrhVkrHAfqz9\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20.sol\":{\"keccak256\":\"0x6df8aebd11e28a3c16d7006fae20d7f159c2891b5fd13e43b38fb26f1d575a14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb26d0d813ef6d318bd0e16dfe09270f1312a253fae8ca7a5e29b7f2a8ef03aa\",\"dweb:/ipfs/Qmechg2uzMAJufGtkvoEdhieEhJkWoiqr5Tt4UHaYt4bra\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol\":{\"keccak256\":\"0x90bbb8ec12989c4585046314a4c559f938e86f871bd3bf515df99b42251e4334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edaf6824deba1ecd123f6809f694f47fd9a0d88fc8aee008d74705cdcef9864e\",\"dweb:/ipfs/QmPRzhMm3CtfyHBWEmE4qeti5qtmA61uGu1jRJJa5APd5m\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Permit.sol\":{\"keccak256\":\"0xce368ccd74ebcb18dfc005cf1161da08df412b902865aee5706f38df658c8d12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e91b8e2336ad4c5f87641ab0e0762a9bc10ee9e264c6d2cba29bc34a761aec74\",\"dweb:/ipfs/Qmd2o2uu8eVBfHxXfSc8mtBz5BDJG7ve6VhDQTGf9oTxvA\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20PermitInterface.sol\":{\"keccak256\":\"0x65282a8b0471d043317506efca2050e86a21860a93393473ab9e3f0eaec1d4d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02718315f835824767c7fd313684c26729dcc5976584f3d6cb291b62782f1c35\",\"dweb:/ipfs/QmYsvoJf4Tg64SQgu5fuk2txaTdKfE8b1YGQNrqmmfMLQ6\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20PermitStorage.sol\":{\"keccak256\":\"0x558f308ff11c4752a8394f157eee1837e92e038247bfcbdaae645aa58639e929\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b917004d2d1cdf052ab2a5539a34425f86322789badc85d27ccc803ccbb1dde6\",\"dweb:/ipfs/QmTuCe7Dfw6GYNduQLDCH8DjCGH9fMGVr874pqUxccEnUz\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol\":{\"keccak256\":\"0xa8d786f4ee25a2f4c8050e6a594fcb15e414833a59c6f4b9817610f62ad288f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb787ab5826f1dd96be7b270bbaff40218d64588f8abcc1115e04cbb5eda98a\",\"dweb:/ipfs/Qmb8VoZXhP7ExcoSqtnWzx2oNuSAXpRz158JM5uRzYAgBk\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b506040516200125a3803806200125a833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604052602090810151855190935085925084918491620001c0916003919086019062000301565b508151620001d690600490602085019062000301565b506002805460ff191660ff92909216919091178155604051600380544695507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f945090928291849161010060018316150260001901909116048015620002765780601f106200025357610100808354040283529182019162000276565b820191906000526020600020905b81548152906001019060200180831162000261575b505060408051918290038220828201825260018352603160f81b602093840152815180840196909652858201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606086015260808501959095523060a0808601919091528551808603909101815260c09094019094525050805191012060005550620003ad915050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000339576000855562000384565b82601f106200035457805160ff191683800117855562000384565b8280016001018555821562000384579182015b828111156200038457825182559160200191906001019062000367565b506200039292915062000396565b5090565b5b8082111562000392576000815560010162000397565b610e9d80620003bd6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806354fd4d5011610097578063a457c2d711610066578063a457c2d7146102c8578063a9059cbb146102f4578063d505accf14610320578063dd62ed3e1461037357610100565b806354fd4d501461026c57806370a08231146102745780637ecebe001461029a57806395d89b41146102c057610100565b806330adf81f116100d357806330adf81f14610212578063313ce5671461021a5780633644e51514610238578063395093511461024057610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d6103a1565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561042f565b604080519115158252519081900360200190f35b6101ca610445565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b0381358116916020810135909116906040013561044b565b6101ca6104ee565b610222610512565b6040805160ff9092168252519081900360200190f35b6101ca61051b565b6101ae6004803603604081101561025657600080fd5b506001600160a01b038135169060200135610521565b61010d6105b8565b6101ca6004803603602081101561028a57600080fd5b50356001600160a01b03166105d5565b6101ca600480360360208110156102b057600080fd5b50356001600160a01b03166105f0565b61010d610602565b6101ae600480360360408110156102de57600080fd5b506001600160a01b03813516906020013561065d565b6101ae6004803603604081101561030a57600080fd5b506001600160a01b0381351690602001356106de565b610371600480360360e081101561033657600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356106eb565b005b6101ca6004803603604081101561038957600080fd5b506001600160a01b0381358116916020013516610999565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104275780601f106103fc57610100808354040283529160200191610427565b820191906000526020600020905b81548152906001019060200180831161040a57829003601f168201915b505050505081565b600061043c3384846109c4565b50600192915050565b60055481565b6000610458848484610ab0565b6001600160a01b038416600090815260066020908152604080832033845290915281205481906104889085610c56565b9092509050600082600481111561049b57fe5b146104d75760405162461bcd60e51b815260040180806020018281038252602e815260200180610d5e602e913960400191505060405180910390fd5b6104e28633836109c4565b50600195945050505050565b7ffc77c2b9d30fe91687fd39abb7d16fcdfe1472d065740051ab8b13e4bf4a617f81565b60025460ff1681565b60005481565b3360009081526006602090815260408083206001600160a01b0386168452909152812054819081906105539085610c7c565b9092509050600082600481111561056657fe5b146105a25760405162461bcd60e51b8152600401808060200182810382526025815260200180610d8c6025913960400191505060405180910390fd5b6105ad3386836109c4565b506001949350505050565b604051806040016040528060018152602001603160f81b81525081565b6001600160a01b031660009081526007602052604090205490565b60016020526000908152604090205481565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104275780601f106103fc57610100808354040283529160200191610427565b3360009081526006602090815260408083206001600160a01b03861684529091528120548190819061068f9085610c56565b909250905060008260048111156106a257fe5b146105a25760405162461bcd60e51b8152600401808060200182810382526026815260200180610cf36026913960400191505060405180910390fd5b600061043c338484610ab0565b6001600160a01b0387166107305760405162461bcd60e51b8152600401808060200182810382526023815260200180610ca36023913960400191505060405180910390fd5b6001600160a01b0386166107755760405162461bcd60e51b8152600401808060200182810382526025815260200180610db16025913960400191505060405180910390fd5b428410156107ca576040805162461bcd60e51b815260206004820152601860248201527f4552525f45524332305f5045524d49545f455850495245440000000000000000604482015290519081900360640190fd5b6001600160a01b038088166000818152600160208181526040808420805480850190915581517ffc77c2b9d30fe91687fd39abb7d16fcdfe1472d065740051ab8b13e4bf4a617f8185015280830196909652958c166060860152608085018b905260a085019590955260c08085018a90528551808603909101815260e085018652805190820120835461190160f01b61010087015261010286015261012280860182905286518087039091018152610142860180885281519184019190912090859052610162860180885281905260ff8a166101828701526101a286018990526101c2860188905295519095946101e28082019392601f1981019281900390910190855afa1580156108e0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166109325760405162461bcd60e51b815260040180806020018281038252602d815260200180610cc6602d913960400191505060405180910390fd5b896001600160a01b0316816001600160a01b0316146109825760405162461bcd60e51b8152600401808060200182810382526022815260200180610dd66022913960400191505060405180910390fd5b61098d8a8a8a6109c4565b50505050505050505050565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6001600160a01b038316610a095760405162461bcd60e51b8152600401808060200182810382526023815260200180610e456023913960400191505060405180910390fd5b6001600160a01b038216610a4e5760405162461bcd60e51b8152600401808060200182810382526021815260200180610d196021913960400191505060405180910390fd5b6001600160a01b03808416600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610af55760405162461bcd60e51b8152600401808060200182810382526024815260200180610d3a6024913960400191505060405180910390fd5b6001600160a01b038216610b3a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610df86022913960400191505060405180910390fd5b6001600160a01b03831660009081526007602052604081205481908190610b619085610c56565b90935091506000836004811115610b7457fe5b14610bb05760405162461bcd60e51b815260040180806020018281038252602b815260200180610e1a602b913960400191505060405180910390fd5b6001600160a01b0380871660009081526007602052604080822085905591871681522054610bde9085610c7c565b90935090506000836004811115610bf157fe5b14610bf857fe5b6001600160a01b038086166000818152600760209081526040918290208590558151888152915192938a16927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050505050565b600080838311610c6d575060009050818303610c75565b506003905060005b9250929050565b600080838301848110610c9457600092509050610c75565b600260009250925050610c7556fe4552525f45524332305f5045524d49545f4f574e45525f5a45524f5f414444524553534552525f45524332305f5045524d49545f5245434f56455245445f4f574e45525f5a45524f5f414444524553534552525f45524332305f44454352454153455f414c4c4f57414e43455f554e444552464c4f574552525f45524332305f415050524f56455f544f5f5a45524f5f414444524553534552525f45524332305f5452414e534645525f46524f4d5f5a45524f5f414444524553534552525f45524332305f5452414e534645525f46524f4d5f494e53554646494349454e545f414c4c4f57414e43454552525f45524332305f494e4352454153455f414c4c4f57414e43455f4f564552464c4f574552525f45524332305f5045524d49545f5350454e4445525f5a45524f5f414444524553534552525f45524332305f5045524d49545f494e56414c49445f5349474e41545552454552525f45524332305f5452414e534645525f544f5f5a45524f5f414444524553534552525f45524332305f5452414e534645525f53454e4445525f42414c414e43455f554e444552464c4f574552525f45524332305f415050524f56455f46524f4d5f5a45524f5f41444452455353a264697066735822122092c0e26e035a18e99b8e3db0c332b2c40d22b30ef6728b107c62c27fda43327d64736f6c63430007040033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c806354fd4d5011610097578063a457c2d711610066578063a457c2d7146102c8578063a9059cbb146102f4578063d505accf14610320578063dd62ed3e1461037357610100565b806354fd4d501461026c57806370a08231146102745780637ecebe001461029a57806395d89b41146102c057610100565b806330adf81f116100d357806330adf81f14610212578063313ce5671461021a5780633644e51514610238578063395093511461024057610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d6103a1565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561042f565b604080519115158252519081900360200190f35b6101ca610445565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b0381358116916020810135909116906040013561044b565b6101ca6104ee565b610222610512565b6040805160ff9092168252519081900360200190f35b6101ca61051b565b6101ae6004803603604081101561025657600080fd5b506001600160a01b038135169060200135610521565b61010d6105b8565b6101ca6004803603602081101561028a57600080fd5b50356001600160a01b03166105d5565b6101ca600480360360208110156102b057600080fd5b50356001600160a01b03166105f0565b61010d610602565b6101ae600480360360408110156102de57600080fd5b506001600160a01b03813516906020013561065d565b6101ae6004803603604081101561030a57600080fd5b506001600160a01b0381351690602001356106de565b610371600480360360e081101561033657600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356106eb565b005b6101ca6004803603604081101561038957600080fd5b506001600160a01b0381358116916020013516610999565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104275780601f106103fc57610100808354040283529160200191610427565b820191906000526020600020905b81548152906001019060200180831161040a57829003601f168201915b505050505081565b600061043c3384846109c4565b50600192915050565b60055481565b6000610458848484610ab0565b6001600160a01b038416600090815260066020908152604080832033845290915281205481906104889085610c56565b9092509050600082600481111561049b57fe5b146104d75760405162461bcd60e51b815260040180806020018281038252602e815260200180610d5e602e913960400191505060405180910390fd5b6104e28633836109c4565b50600195945050505050565b7ffc77c2b9d30fe91687fd39abb7d16fcdfe1472d065740051ab8b13e4bf4a617f81565b60025460ff1681565b60005481565b3360009081526006602090815260408083206001600160a01b0386168452909152812054819081906105539085610c7c565b9092509050600082600481111561056657fe5b146105a25760405162461bcd60e51b8152600401808060200182810382526025815260200180610d8c6025913960400191505060405180910390fd5b6105ad3386836109c4565b506001949350505050565b604051806040016040528060018152602001603160f81b81525081565b6001600160a01b031660009081526007602052604090205490565b60016020526000908152604090205481565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104275780601f106103fc57610100808354040283529160200191610427565b3360009081526006602090815260408083206001600160a01b03861684529091528120548190819061068f9085610c56565b909250905060008260048111156106a257fe5b146105a25760405162461bcd60e51b8152600401808060200182810382526026815260200180610cf36026913960400191505060405180910390fd5b600061043c338484610ab0565b6001600160a01b0387166107305760405162461bcd60e51b8152600401808060200182810382526023815260200180610ca36023913960400191505060405180910390fd5b6001600160a01b0386166107755760405162461bcd60e51b8152600401808060200182810382526025815260200180610db16025913960400191505060405180910390fd5b428410156107ca576040805162461bcd60e51b815260206004820152601860248201527f4552525f45524332305f5045524d49545f455850495245440000000000000000604482015290519081900360640190fd5b6001600160a01b038088166000818152600160208181526040808420805480850190915581517ffc77c2b9d30fe91687fd39abb7d16fcdfe1472d065740051ab8b13e4bf4a617f8185015280830196909652958c166060860152608085018b905260a085019590955260c08085018a90528551808603909101815260e085018652805190820120835461190160f01b61010087015261010286015261012280860182905286518087039091018152610142860180885281519184019190912090859052610162860180885281905260ff8a166101828701526101a286018990526101c2860188905295519095946101e28082019392601f1981019281900390910190855afa1580156108e0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166109325760405162461bcd60e51b815260040180806020018281038252602d815260200180610cc6602d913960400191505060405180910390fd5b896001600160a01b0316816001600160a01b0316146109825760405162461bcd60e51b8152600401808060200182810382526022815260200180610dd66022913960400191505060405180910390fd5b61098d8a8a8a6109c4565b50505050505050505050565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b6001600160a01b038316610a095760405162461bcd60e51b8152600401808060200182810382526023815260200180610e456023913960400191505060405180910390fd5b6001600160a01b038216610a4e5760405162461bcd60e51b8152600401808060200182810382526021815260200180610d196021913960400191505060405180910390fd5b6001600160a01b03808416600081815260066020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610af55760405162461bcd60e51b8152600401808060200182810382526024815260200180610d3a6024913960400191505060405180910390fd5b6001600160a01b038216610b3a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610df86022913960400191505060405180910390fd5b6001600160a01b03831660009081526007602052604081205481908190610b619085610c56565b90935091506000836004811115610b7457fe5b14610bb05760405162461bcd60e51b815260040180806020018281038252602b815260200180610e1a602b913960400191505060405180910390fd5b6001600160a01b0380871660009081526007602052604080822085905591871681522054610bde9085610c7c565b90935090506000836004811115610bf157fe5b14610bf857fe5b6001600160a01b038086166000818152600760209081526040918290208590558151888152915192938a16927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050505050565b600080838311610c6d575060009050818303610c75565b506003905060005b9250929050565b600080838301848110610c9457600092509050610c75565b600260009250925050610c7556fe4552525f45524332305f5045524d49545f4f574e45525f5a45524f5f414444524553534552525f45524332305f5045524d49545f5245434f56455245445f4f574e45525f5a45524f5f414444524553534552525f45524332305f44454352454153455f414c4c4f57414e43455f554e444552464c4f574552525f45524332305f415050524f56455f544f5f5a45524f5f414444524553534552525f45524332305f5452414e534645525f46524f4d5f5a45524f5f414444524553534552525f45524332305f5452414e534645525f46524f4d5f494e53554646494349454e545f414c4c4f57414e43454552525f45524332305f494e4352454153455f414c4c4f57414e43455f4f564552464c4f574552525f45524332305f5045524d49545f5350454e4445525f5a45524f5f414444524553534552525f45524332305f5045524d49545f494e56414c49445f5349474e41545552454552525f45524332305f5452414e534645525f544f5f5a45524f5f414444524553534552525f45524332305f5452414e534645525f53454e4445525f42414c414e43455f554e444552464c4f574552525f45524332305f415050524f56455f46524f4d5f5a45524f5f41444452455353a264697066735822122092c0e26e035a18e99b8e3db0c332b2c40d22b30ef6728b107c62c27fda43327d64736f6c63430007040033",
    "sourceMap": "455:2469:3:-:0;;;567:627;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;567:627:3;;;;;;;;;;-1:-1:-1;567:627:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;567:627:3;;;;;;;;;;-1:-1:-1;567:627:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;567:627:3;;;;;;;1596:12:1;;567:627:3;;-1:-1:-1;676:5:3;;-1:-1:-1;683:7:3;;567:627;;1596:12:1;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;1618:16:1;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;1644:8:1;:20;;-1:-1:-1;;1644:20:1;;;;;;;;;;;;1042:22:3::1;::::0;1058:4:::1;1042:22:::0;;831:9:::1;::::0;-1:-1:-1;929:95:3::1;::::0;-1:-1:-1;1058:4:3;;1042:22;;1058:4;;1644:20:1;-1:-1:-1;1042:22:3;::::1;;;-1:-1:-1::0;;1042:22:3;;;::::1;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;1042:22:3::1;::::0;;;;;::::1;::::0;;1098:7;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;1098:7:3::1;::::0;;::::1;::::0;901:276;;;;::::1;::::0;;;;;;;;1082:25;901:276;;;;;;;;;;;1158:4:::1;901:276:::0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;878:309:3;;;::::1;::::0;-1:-1:-1;859:328:3;-1:-1:-1;455:2469:3;;-1:-1:-1;;455:2469:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:2469:3;;;-1:-1:-1;455:2469:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "455:2469:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;416:18:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3142:173:1;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3142:173:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;652:26:6;;;:::i;:::-;;;;;;;;;;;;;;;;6325:522:1;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6325:522:1;;;;;;;;;;;;;;;;;:::i;444:108:5:-;;;:::i;326:21:6:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;277:31:5;;;:::i;4636:418:1:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4636:418:1;;;;;;;;:::i;736:36:5:-;;;:::i;2228:124:1:-;;;;;;;;;;;;;;;;-1:-1:-1;2228:124:1;-1:-1:-1;;;;;2228:124:1;;:::i;618:41:5:-;;;;;;;;;;;;;;;;-1:-1:-1;618:41:5;-1:-1:-1;;;;;618:41:5;;:::i;551:20:6:-;;;:::i;3818:429:1:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3818:429:1;;;;;;;;:::i;5428:179::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5428:179:1;;;;;;;;:::i;1868:1054:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1868:1054:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1992:150:1;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1992:150:1;;;;;;;;;;:::i;416:18:6:-;;;;;;;;;;;;;;;-1:-1:-1;;416:18:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3142:173:1:-;3227:4;3243:44;3259:10;3271:7;3280:6;3243:15;:44::i;:::-;-1:-1:-1;3304:4:1;3142:173;;;;:::o;652:26:6:-;;;;:::o;6325:522:1:-;6463:4;6479:43;6496:6;6504:9;6515:6;6479:16;:43::i;:::-;-1:-1:-1;;;;;6623:18:1;;6532:17;6623:18;;;:10;:18;;;;;;;;6642:10;6623:30;;;;;;;;6532:17;;6615:47;;6655:6;6615:7;:47::i;:::-;6589:73;;-1:-1:-1;6589:73:1;-1:-1:-1;6691:18:1;6680:7;:29;;;;;;;;;6672:88;;;;-1:-1:-1;;;6672:88:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6770:49;6786:6;6794:10;6806:12;6770:15;:49::i;:::-;-1:-1:-1;6836:4:1;;6325:522;-1:-1:-1;;;;;6325:522:1:o;444:108:5:-;486:66;444:108;:::o;326:21:6:-;;;;;;:::o;277:31:5:-;;;;:::o;4636:418:1:-;4844:10;4726:4;4833:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;4833:31:1;;;;;;;;;;4726:4;;;;4825:52;;4866:10;4825:7;:52::i;:::-;4799:78;;-1:-1:-1;4799:78:1;-1:-1:-1;4906:18:1;4895:7;:29;;;;;;;;;4887:79;;;;-1:-1:-1;;;4887:79:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4976:50;4992:10;5004:7;5013:12;4976:15;:50::i;:::-;-1:-1:-1;5043:4:1;;4636:418;-1:-1:-1;;;;4636:418:1:o;736:36:5:-;;;;;;;;;;;;;;-1:-1:-1;;;736:36:5;;;;:::o;2228:124:1:-;-1:-1:-1;;;;;2328:17:1;2302:7;2328:17;;;:8;:17;;;;;;;2228:124::o;618:41:5:-;;;;;;;;;;;;;:::o;551:20:6:-;;;;;;;;;;;;;;;-1:-1:-1;;551:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3818:429:1;4031:10;3913:4;4020:22;;;:10;:22;;;;;;;;-1:-1:-1;;;;;4020:31:1;;;;;;;;;;3913:4;;;;4012:57;;4053:15;4012:7;:57::i;:::-;3986:83;;-1:-1:-1;3986:83:1;-1:-1:-1;4098:18:1;4087:7;:29;;;;;;;;;4079:80;;;;-1:-1:-1;;;4079:80:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5428:179;5516:4;5532:47;5549:10;5561:9;5572:6;5532:16;:47::i;1868:1054:3:-;-1:-1:-1;;;;;2079:22:3;;2071:70;;;;-1:-1:-1;;;2071:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2159:24:3;;2151:74;;;;-1:-1:-1;;;2151:74:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2255:15;2243:8;:27;;2235:64;;;;;-1:-1:-1;;;2235:64:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2501:13:3;;;2418:18;2501:13;;;:6;:13;;;;;;;;:15;;;;;;;;2449:78;;486:66:5;2449:78:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2439:89;;;;;;2594:16;;-1:-1:-1;;;2565:58:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2555:69;;;;;;;;;2659:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2439:89;;2555:69;2659:26;;;;;2501:13;-1:-1:-1;;2659:26:3;;;;;;;;;;2501:6;2659:26;;;;;;;;;;;;;;;-1:-1:-1;;2659:26:3;;-1:-1:-1;;2659:26:3;;;-1:-1:-1;;;;;;;2704:31:3;;2696:89;;;;-1:-1:-1;;;2696:89:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2821:5;-1:-1:-1;;;;;2803:23:3;:14;-1:-1:-1;;;;;2803:23:3;;2795:70;;;;-1:-1:-1;;;2795:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2876:39;2892:5;2899:7;2908:6;2876:15;:39::i;:::-;1868:1054;;;;;;;;;;:::o;1992:150:1:-;-1:-1:-1;;;;;2109:17:1;;;2083:7;2109:17;;;:10;:17;;;;;;;;:26;;;;;;;;;;;;;1992:150::o;7323:380::-;-1:-1:-1;;;;;7461:22:1;;7453:70;;;;-1:-1:-1;;;7453:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7541:24:1;;7533:70;;;;-1:-1:-1;;;7533:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7614:17:1;;;;;;;:10;:17;;;;;;;;:26;;;;;;;;;;;;;:35;;;7664:32;;;;;;;;;;;;;;;;;7323:380;;;:::o;10221:838::-;-1:-1:-1;;;;;10363:23:1;;10355:72;;;;-1:-1:-1;;;10355:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10445:26:1;;10437:73;;;;-1:-1:-1;;;10437:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10658:16:1;;10521:17;10658:16;;;:8;:16;;;;;;10521:17;;;;10650:33;;10676:6;10650:7;:33::i;:::-;10620:63;;-1:-1:-1;10620:63:1;-1:-1:-1;10712:18:1;10701:7;:29;;;;;;;;;10693:85;;;;-1:-1:-1;;;10693:85:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10788:16:1;;;;;;;:8;:16;;;;;;:35;;;10875:19;;;;;;;10867:36;;10896:6;10867:7;:36::i;:::-;10834:69;;-1:-1:-1;10834:69:1;-1:-1:-1;10931:18:1;10920:7;:29;;;;;;;;;10913:37;;;;-1:-1:-1;;;;;10960:19:1;;;;;;;:8;:19;;;;;;;;;:41;;;11017:35;;;;;;;10960:19;;11017:35;;;;;;;;;;;;;10221:838;;;;;;:::o;2701:239:0:-;2763:9;2774:7;2802:1;2797;:6;2793:141;;-1:-1:-1;2827:18:0;;-1:-1:-1;2847:5:0;;;2819:34;;2793:141;-1:-1:-1;2892:27:0;;-1:-1:-1;2921:1:0;2793:141;2701:239;;;;;:::o;587:262::-;649:9;;691:5;;;711:6;;;707:136;;741:18;;-1:-1:-1;761:1:0;-1:-1:-1;733:30:0;;707:136;802:26;830:1;794:38;;;;;;",
    "sourcePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Permit.sol",
    "compiler": {
        "name": "solc",
        "version": "0.7.4+commit.3f05b770"
    },
    "ast": {
        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Permit.sol",
        "exportedSymbols": {
            "CarefulMath": [
                221
            ],
            "Erc20": [
                759
            ],
            "Erc20Interface": [
                842
            ],
            "Erc20Permit": [
                1007
            ],
            "Erc20PermitInterface": [
                1032
            ],
            "Erc20PermitStorage": [
                1052
            ],
            "Erc20Storage": [
                1078
            ],
            "MathError": [
                7
            ]
        },
        "id": 1008,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 844,
                "literals": [
                    "solidity",
                    "^",
                    "0.7",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "35:23:3"
            },
            {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20.sol",
                "file": "./Erc20.sol",
                "id": 845,
                "nodeType": "ImportDirective",
                "scope": 1008,
                "sourceUnit": 760,
                "src": "60:21:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20PermitInterface.sol",
                "file": "./Erc20PermitInterface.sol",
                "id": 846,
                "nodeType": "ImportDirective",
                "scope": 1008,
                "sourceUnit": 1033,
                "src": "82:36:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 848,
                            "name": "Erc20PermitInterface",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1032,
                            "src": "483:20:3",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Erc20PermitInterface_$1032",
                                "typeString": "contract Erc20PermitInterface"
                            }
                        },
                        "id": 849,
                        "nodeType": "InheritanceSpecifier",
                        "src": "483:20:3"
                    },
                    {
                        "baseName": {
                            "id": 850,
                            "name": "Erc20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 759,
                            "src": "530:5:3",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Erc20_$759",
                                "typeString": "contract Erc20"
                            }
                        },
                        "id": 851,
                        "nodeType": "InheritanceSpecifier",
                        "src": "530:5:3"
                    }
                ],
                "contractDependencies": [
                    221,
                    759,
                    842,
                    1032,
                    1052,
                    1078
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 847,
                    "nodeType": "StructuredDocumentation",
                    "src": "120:334:3",
                    "text": " @title Erc20Permit\n @author Paul Razvan Berg\n @notice Extension of Erc20 that allows token holders to use their tokens\n without sending any transactions by setting the allowance with a signature\n using the `permit` method, and then spend them via `transferFrom`.\n @dev See https://eips.ethereum.org/EIPS/eip-2612."
                },
                "fullyImplemented": true,
                "id": 1007,
                "linearizedBaseContracts": [
                    1007,
                    759,
                    842,
                    1078,
                    221,
                    1032,
                    1052
                ],
                "name": "Erc20Permit",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 897,
                            "nodeType": "Block",
                            "src": "703:491:3",
                            "statements": [
                                {
                                    "assignments": [
                                        866
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 866,
                                            "mutability": "mutable",
                                            "name": "chainId",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 897,
                                            "src": "713:15:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 865,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "713:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 867,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "713:15:3"
                                },
                                {
                                    "AST": {
                                        "nodeType": "YulBlock",
                                        "src": "806:44:3",
                                        "statements": [
                                            {
                                                "nodeType": "YulAssignment",
                                                "src": "820:20:3",
                                                "value": {
                                                    "arguments": [],
                                                    "functionName": {
                                                        "name": "chainid",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "831:7:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "831:9:3"
                                                },
                                                "variableNames": [
                                                    {
                                                        "name": "chainId",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "820:7:3"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "evmVersion": "istanbul",
                                    "externalReferences": [
                                        {
                                            "declaration": 866,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "820:7:3",
                                            "valueSize": 1
                                        }
                                    ],
                                    "id": 868,
                                    "nodeType": "InlineAssembly",
                                    "src": "797:53:3"
                                },
                                {
                                    "expression": {
                                        "id": 895,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 869,
                                            "name": "DOMAIN_SEPARATOR",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1038,
                                            "src": "859:16:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                                                    "id": 874,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "939:84:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                                                        "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                                                    },
                                                                    "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                                                        "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                                                    }
                                                                ],
                                                                "id": 873,
                                                                "name": "keccak256",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -8,
                                                                "src": "929:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                                }
                                                            },
                                                            "id": 875,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "929:95:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes32",
                                                                "typeString": "bytes32"
                                                            }
                                                        },
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 879,
                                                                            "name": "name",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1061,
                                                                            "src": "1058:4:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_string_storage",
                                                                                "typeString": "string storage ref"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_string_storage",
                                                                                "typeString": "string storage ref"
                                                                            }
                                                                        ],
                                                                        "id": 878,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "ElementaryTypeNameExpression",
                                                                        "src": "1052:5:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                                                            "typeString": "type(bytes storage pointer)"
                                                                        },
                                                                        "typeName": {
                                                                            "id": 877,
                                                                            "name": "bytes",
                                                                            "nodeType": "ElementaryTypeName",
                                                                            "src": "1052:5:3",
                                                                            "typeDescriptions": {}
                                                                        }
                                                                    },
                                                                    "id": 880,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "1052:11:3",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes_storage_ptr",
                                                                        "typeString": "bytes storage pointer"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bytes_storage_ptr",
                                                                        "typeString": "bytes storage pointer"
                                                                    }
                                                                ],
                                                                "id": 876,
                                                                "name": "keccak256",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -8,
                                                                "src": "1042:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                                }
                                                            },
                                                            "id": 881,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1042:22:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes32",
                                                                "typeString": "bytes32"
                                                            }
                                                        },
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 885,
                                                                            "name": "version",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1051,
                                                                            "src": "1098:7:3",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_string_memory_ptr",
                                                                                "typeString": "string memory"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_string_memory_ptr",
                                                                                "typeString": "string memory"
                                                                            }
                                                                        ],
                                                                        "id": 884,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "nodeType": "ElementaryTypeNameExpression",
                                                                        "src": "1092:5:3",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                                                            "typeString": "type(bytes storage pointer)"
                                                                        },
                                                                        "typeName": {
                                                                            "id": 883,
                                                                            "name": "bytes",
                                                                            "nodeType": "ElementaryTypeName",
                                                                            "src": "1092:5:3",
                                                                            "typeDescriptions": {}
                                                                        }
                                                                    },
                                                                    "id": 886,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "typeConversion",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "1092:14:3",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                                        "typeString": "bytes memory"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                                        "typeString": "bytes memory"
                                                                    }
                                                                ],
                                                                "id": 882,
                                                                "name": "keccak256",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -8,
                                                                "src": "1082:9:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                                }
                                                            },
                                                            "id": 887,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1082:25:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes32",
                                                                "typeString": "bytes32"
                                                            }
                                                        },
                                                        {
                                                            "id": 888,
                                                            "name": "chainId",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 866,
                                                            "src": "1125:7:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "id": 891,
                                                                    "name": "this",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": -28,
                                                                    "src": "1158:4:3",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_Erc20Permit_$1007",
                                                                        "typeString": "contract Erc20Permit"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_contract$_Erc20Permit_$1007",
                                                                        "typeString": "contract Erc20Permit"
                                                                    }
                                                                ],
                                                                "id": 890,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "1150:7:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 889,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "1150:7:3",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 892,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1150:13:3",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bytes32",
                                                                "typeString": "bytes32"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_bytes32",
                                                                "typeString": "bytes32"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_bytes32",
                                                                "typeString": "bytes32"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 871,
                                                            "name": "abi",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": -1,
                                                            "src": "901:3:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_abi",
                                                                "typeString": "abi"
                                                            }
                                                        },
                                                        "id": 872,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "memberName": "encode",
                                                        "nodeType": "MemberAccess",
                                                        "src": "901:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                            "typeString": "function () pure returns (bytes memory)"
                                                        }
                                                    },
                                                    "id": 893,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "901:276:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                        "typeString": "bytes memory"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                        "typeString": "bytes memory"
                                                    }
                                                ],
                                                "id": 870,
                                                "name": "keccak256",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -8,
                                                "src": "878:9:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                }
                                            },
                                            "id": 894,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "878:309:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "src": "859:328:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "id": 896,
                                    "nodeType": "ExpressionStatement",
                                    "src": "859:328:3"
                                }
                            ]
                        },
                        "id": 898,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 860,
                                        "name": "name_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 853,
                                        "src": "676:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 861,
                                        "name": "symbol_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 855,
                                        "src": "683:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    {
                                        "id": 862,
                                        "name": "decimals_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 857,
                                        "src": "692:9:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    }
                                ],
                                "id": 863,
                                "modifierName": {
                                    "id": 859,
                                    "name": "Erc20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 759,
                                    "src": "670:5:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Erc20_$759_$",
                                        "typeString": "type(contract Erc20)"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "670:32:3"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 858,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 853,
                                    "mutability": "mutable",
                                    "name": "name_",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 898,
                                    "src": "588:19:3",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 852,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "588:6:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 855,
                                    "mutability": "mutable",
                                    "name": "symbol_",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 898,
                                    "src": "617:21:3",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 854,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "617:6:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 857,
                                    "mutability": "mutable",
                                    "name": "decimals_",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 898,
                                    "src": "648:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    },
                                    "typeName": {
                                        "id": 856,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "648:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "578:91:3"
                        },
                        "returnParameters": {
                            "id": 864,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "703:0:3"
                        },
                        "scope": 1007,
                        "src": "567:627:3",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1031
                        ],
                        "body": {
                            "id": 1005,
                            "nodeType": "Block",
                            "src": "2061:861:3",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 923,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 918,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 901,
                                                    "src": "2079:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30783030",
                                                            "id": 921,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2096:4:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0x00"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 920,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "2088:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 919,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "2088:7:3",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 922,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2088:13:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "2079:22:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4552525f45524332305f5045524d49545f4f574e45525f5a45524f5f41444452455353",
                                                "id": 924,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2103:37:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_0c63b4eef517e062876d432169c39b087bbbca85c3266de9d656ca6439418177",
                                                    "typeString": "literal_string \"ERR_ERC20_PERMIT_OWNER_ZERO_ADDRESS\""
                                                },
                                                "value": "ERR_ERC20_PERMIT_OWNER_ZERO_ADDRESS"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_0c63b4eef517e062876d432169c39b087bbbca85c3266de9d656ca6439418177",
                                                    "typeString": "literal_string \"ERR_ERC20_PERMIT_OWNER_ZERO_ADDRESS\""
                                                }
                                            ],
                                            "id": 917,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "2071:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 925,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2071:70:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 926,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2071:70:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 933,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 928,
                                                    "name": "spender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 903,
                                                    "src": "2159:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30783030",
                                                            "id": 931,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2178:4:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0x00"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 930,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "2170:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 929,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "2170:7:3",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 932,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2170:13:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "2159:24:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4552525f45524332305f5045524d49545f5350454e4445525f5a45524f5f41444452455353",
                                                "id": 934,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2185:39:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_a05bda657f96f2ae18f6580ba3cfe48bf2ab8130648e54a30f365fd31fef9aa1",
                                                    "typeString": "literal_string \"ERR_ERC20_PERMIT_SPENDER_ZERO_ADDRESS\""
                                                },
                                                "value": "ERR_ERC20_PERMIT_SPENDER_ZERO_ADDRESS"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_a05bda657f96f2ae18f6580ba3cfe48bf2ab8130648e54a30f365fd31fef9aa1",
                                                    "typeString": "literal_string \"ERR_ERC20_PERMIT_SPENDER_ZERO_ADDRESS\""
                                                }
                                            ],
                                            "id": 927,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "2151:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 935,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2151:74:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 936,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2151:74:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 941,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 938,
                                                    "name": "deadline",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 907,
                                                    "src": "2243:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 939,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -4,
                                                        "src": "2255:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                        }
                                                    },
                                                    "id": 940,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2255:15:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2243:27:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4552525f45524332305f5045524d49545f45585049524544",
                                                "id": 942,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2272:26:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_03927dbe0c7420a05f562d55ec40bcda6a7a6258c2aad7e4fc6e197fa3fead1c",
                                                    "typeString": "literal_string \"ERR_ERC20_PERMIT_EXPIRED\""
                                                },
                                                "value": "ERR_ERC20_PERMIT_EXPIRED"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_03927dbe0c7420a05f562d55ec40bcda6a7a6258c2aad7e4fc6e197fa3fead1c",
                                                    "typeString": "literal_string \"ERR_ERC20_PERMIT_EXPIRED\""
                                                }
                                            ],
                                            "id": 937,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "2235:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 943,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2235:64:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 944,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2235:64:3"
                                },
                                {
                                    "assignments": [
                                        946
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 946,
                                            "mutability": "mutable",
                                            "name": "hashStruct",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1005,
                                            "src": "2418:18:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            },
                                            "typeName": {
                                                "id": 945,
                                                "name": "bytes32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2418:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 961,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 950,
                                                        "name": "PERMIT_TYPEHASH",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1042,
                                                        "src": "2460:15:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    {
                                                        "id": 951,
                                                        "name": "owner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 901,
                                                        "src": "2477:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 952,
                                                        "name": "spender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 903,
                                                        "src": "2484:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 953,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 905,
                                                        "src": "2493:6:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "id": 957,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "++",
                                                        "prefix": false,
                                                        "src": "2501:15:3",
                                                        "subExpression": {
                                                            "baseExpression": {
                                                                "id": 954,
                                                                "name": "nonces",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1047,
                                                                "src": "2501:6:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                    "typeString": "mapping(address => uint256)"
                                                                }
                                                            },
                                                            "id": 956,
                                                            "indexExpression": {
                                                                "id": 955,
                                                                "name": "owner",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 901,
                                                                "src": "2508:5:3",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": true,
                                                            "nodeType": "IndexAccess",
                                                            "src": "2501:13:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "id": 958,
                                                        "name": "deadline",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 907,
                                                        "src": "2518:8:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 948,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -1,
                                                        "src": "2449:3:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 949,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encode",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2449:10:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 959,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2449:78:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 947,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "2439:9:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                        },
                                        "id": 960,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2439:89:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2418:110:3"
                                },
                                {
                                    "assignments": [
                                        963
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 963,
                                            "mutability": "mutable",
                                            "name": "digest",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1005,
                                            "src": "2538:14:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            },
                                            "typeName": {
                                                "id": 962,
                                                "name": "bytes32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2538:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 972,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "1901",
                                                        "id": 967,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2582:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                                            "typeString": "literal_string hex\"1901\""
                                                        },
                                                        "value": "\u0019\u0001"
                                                    },
                                                    {
                                                        "id": 968,
                                                        "name": "DOMAIN_SEPARATOR",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1038,
                                                        "src": "2594:16:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    {
                                                        "id": 969,
                                                        "name": "hashStruct",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 946,
                                                        "src": "2612:10:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                                            "typeString": "literal_string hex\"1901\""
                                                        },
                                                        {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 965,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -1,
                                                        "src": "2565:3:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 966,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2565:16:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 970,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2565:58:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 964,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "2555:9:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                        },
                                        "id": 971,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2555:69:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2538:86:3"
                                },
                                {
                                    "assignments": [
                                        974
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 974,
                                            "mutability": "mutable",
                                            "name": "recoveredOwner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1005,
                                            "src": "2634:22:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 973,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2634:7:3",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 981,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 976,
                                                "name": "digest",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 963,
                                                "src": "2669:6:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "id": 977,
                                                "name": "v",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 909,
                                                "src": "2677:1:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            {
                                                "id": 978,
                                                "name": "r",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 911,
                                                "src": "2680:1:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "id": 979,
                                                "name": "s",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 913,
                                                "src": "2683:1:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            ],
                                            "id": 975,
                                            "name": "ecrecover",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -6,
                                            "src": "2659:9:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                                                "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                                            }
                                        },
                                        "id": 980,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2659:26:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2634:51:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 988,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 983,
                                                    "name": "recoveredOwner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 974,
                                                    "src": "2704:14:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30783030",
                                                            "id": 986,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2730:4:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0x00"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 985,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "2722:7:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 984,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "2722:7:3",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 987,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2722:13:3",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "2704:31:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4552525f45524332305f5045524d49545f5245434f56455245445f4f574e45525f5a45524f5f41444452455353",
                                                "id": 989,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2737:47:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_25e0be50955d4e70bb5770e7aa70ede7556a7717c5ec423fd91db025aa8c9062",
                                                    "typeString": "literal_string \"ERR_ERC20_PERMIT_RECOVERED_OWNER_ZERO_ADDRESS\""
                                                },
                                                "value": "ERR_ERC20_PERMIT_RECOVERED_OWNER_ZERO_ADDRESS"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_25e0be50955d4e70bb5770e7aa70ede7556a7717c5ec423fd91db025aa8c9062",
                                                    "typeString": "literal_string \"ERR_ERC20_PERMIT_RECOVERED_OWNER_ZERO_ADDRESS\""
                                                }
                                            ],
                                            "id": 982,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "2696:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 990,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2696:89:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 991,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2696:89:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 995,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 993,
                                                    "name": "recoveredOwner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 974,
                                                    "src": "2803:14:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 994,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 901,
                                                    "src": "2821:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "2803:23:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4552525f45524332305f5045524d49545f494e56414c49445f5349474e4154555245",
                                                "id": 996,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2828:36:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_b97e8680c8f62b94b8e8ac19d155cb962144571c19020f50e71f940a262b5eba",
                                                    "typeString": "literal_string \"ERR_ERC20_PERMIT_INVALID_SIGNATURE\""
                                                },
                                                "value": "ERR_ERC20_PERMIT_INVALID_SIGNATURE"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_b97e8680c8f62b94b8e8ac19d155cb962144571c19020f50e71f940a262b5eba",
                                                    "typeString": "literal_string \"ERR_ERC20_PERMIT_INVALID_SIGNATURE\""
                                                }
                                            ],
                                            "id": 992,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "2795:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 997,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2795:70:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 998,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2795:70:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 1000,
                                                "name": "owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 901,
                                                "src": "2892:5:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1001,
                                                "name": "spender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 903,
                                                "src": "2899:7:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1002,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 905,
                                                "src": "2908:6:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 999,
                                            "name": "approveInternal",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 525,
                                            "src": "2876:15:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 1003,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2876:39:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1004,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2876:39:3"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 899,
                            "nodeType": "StructuredDocumentation",
                            "src": "1200:663:3",
                            "text": " @dev Sets `amount` as the allowance of `spender` over `owner`'s tokens,\n assuming the latter's signed approval.\n IMPORTANT: The same issues Erc20 `approve` has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the Eip712-formatted function arguments.\n - The signature must use `owner`'s current nonce."
                        },
                        "functionSelector": "d505accf",
                        "id": 1006,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "permit",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 915,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "2052:8:3"
                        },
                        "parameters": {
                            "id": 914,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 901,
                                    "mutability": "mutable",
                                    "name": "owner",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1006,
                                    "src": "1893:13:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 900,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1893:7:3",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 903,
                                    "mutability": "mutable",
                                    "name": "spender",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1006,
                                    "src": "1916:15:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 902,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1916:7:3",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 905,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1006,
                                    "src": "1941:14:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 904,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1941:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 907,
                                    "mutability": "mutable",
                                    "name": "deadline",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1006,
                                    "src": "1965:16:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 906,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1965:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 909,
                                    "mutability": "mutable",
                                    "name": "v",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1006,
                                    "src": "1991:7:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    },
                                    "typeName": {
                                        "id": 908,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1991:5:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 911,
                                    "mutability": "mutable",
                                    "name": "r",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1006,
                                    "src": "2008:9:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 910,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2008:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 913,
                                    "mutability": "mutable",
                                    "name": "s",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1006,
                                    "src": "2027:9:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 912,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2027:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1883:159:3"
                        },
                        "returnParameters": {
                            "id": 916,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2061:0:3"
                        },
                        "scope": 1007,
                        "src": "1868:1054:3",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 1008,
                "src": "455:2469:3"
            }
        ],
        "src": "35:2890:3"
    },
    "functionHashes": {
        "DOMAIN_SEPARATOR()": "3644e515",
        "PERMIT_TYPEHASH()": "30adf81f",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "name()": "06fdde03",
        "nonces(address)": "7ecebe00",
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "version()": "54fd4d50"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "748200",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "DOMAIN_SEPARATOR()": "1065",
            "PERMIT_TYPEHASH()": "221",
            "allowance(address,address)": "1338",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "1187",
            "decimals()": "1058",
            "decreaseAllowance(address,uint256)": "infinite",
            "increaseAllowance(address,uint256)": "infinite",
            "name()": "infinite",
            "nonces(address)": "1191",
            "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "1066",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "version()": "infinite"
        }
    }
}
{
    "contracts": {
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/Admin.sol": {
            "Admin": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "oldAdmin",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "TransferAdmin",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "_renounceAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "_transferAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "admin",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "author": "Paul Razvan Berg",
                    "details": "Forked from OpenZeppelin https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.1.0/contracts/access/Ownable.sol",
                    "kind": "dev",
                    "methods": {
                        "_transferAdmin(address)": {
                            "params": {
                                "newAdmin": "The acount of the new admin."
                            }
                        }
                    },
                    "title": "Admin",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "_renounceAdmin()": "bfa25308",
                        "_transferAdmin(address)": "e6abb5ae",
                        "admin()": "f851a440"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdmin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"_transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"details\":\"Forked from OpenZeppelin https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.1.0/contracts/access/Ownable.sol\",\"kind\":\"dev\",\"methods\":{\"_transferAdmin(address)\":{\"params\":{\"newAdmin\":\"The acount of the new admin.\"}}},\"title\":\"Admin\",\"version\":1},\"userdoc\":{\"events\":{\"TransferAdmin(address,address)\":{\"notice\":\"EVENTS\"}},\"kind\":\"user\",\"methods\":{\"_renounceAdmin()\":{\"notice\":\"Leaves the contract without admin, so it will not be possible to call `onlyAdmin` functions anymore. Requirements: - The caller must be the administrator. WARNING: Doing this will leave the contract without an admin, thereby removing any functionality that is only available to the admin.\"},\"_transferAdmin(address)\":{\"notice\":\"Transfers the admin of the contract to a new account (`newAdmin`). Can only be called by the current admin.\"},\"admin()\":{\"notice\":\"The address of the administrator account or contract.\"},\"constructor\":{\"notice\":\"Initializes the contract setting the deployer as the initial admin.\"}},\"notice\":\"Contract module which provides a basic access control mechanism, where there is an account (an admin) that can be granted exclusive access to specific functions. By default, the admin account will be the one that deploys the contract. This can later be changed with {transferAdmin}. This module is used through inheritance. It will make available the modifier `onlyAdmin`, which can be applied to your functions to restrict their use to the admin.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/Admin.sol\":\"Admin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/Admin.sol\":{\"keccak256\":\"0x92120d6ffe0c8779c552ea97a68a89e3b8e3ab5105f27fb2a3fecfe02da0547b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac6948de292d5a8e6fe4f7e576e88c5c2d82175135e66fe7df7996905baa67ef\",\"dweb:/ipfs/QmX6tERWFfnyXRhXbcZMA9JZv7zqU82qtmSo4codbc2psr\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminInterface.sol\":{\"keccak256\":\"0x688f0b526031686926441348994bdbb4416e98ed440e71032257469934f7b15d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f51ab8b826ef1e282fc1d29ad4fb0b6aef7d60b928937b42f8ba05088f6857a\",\"dweb:/ipfs/QmfWh2Rz9gLW8baN7bFtXtdjHEwXRc5fPiPSbj21nZbSC4\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminStorage.sol\":{\"keccak256\":\"0x2f37d4b64e75cf8c7267ec4d70d48fea30fb2396c1eeabac276ee6b84c722c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbbfa562e31a776c1f9f16e986ed82239e4c82e86382a0268254e9eb5183f931\",\"dweb:/ipfs/QmRK8fsK71HdfB3kKFZdfEnKiVdskhR6CxRA59jjQuNLY1\"]}},\"version\":1}",
                "userdoc": {
                    "events": {
                        "TransferAdmin(address,address)": {
                            "notice": "EVENTS"
                        }
                    },
                    "kind": "user",
                    "methods": {
                        "_renounceAdmin()": {
                            "notice": "Leaves the contract without admin, so it will not be possible to call `onlyAdmin` functions anymore. Requirements: - The caller must be the administrator. WARNING: Doing this will leave the contract without an admin, thereby removing any functionality that is only available to the admin."
                        },
                        "_transferAdmin(address)": {
                            "notice": "Transfers the admin of the contract to a new account (`newAdmin`). Can only be called by the current admin."
                        },
                        "admin()": {
                            "notice": "The address of the administrator account or contract."
                        },
                        "constructor": {
                            "notice": "Initializes the contract setting the deployer as the initial admin."
                        }
                    },
                    "notice": "Contract module which provides a basic access control mechanism, where there is an account (an admin) that can be granted exclusive access to specific functions. By default, the admin account will be the one that deploys the contract. This can later be changed with {transferAdmin}. This module is used through inheritance. It will make available the modifier `onlyAdmin`, which can be applied to your functions to restrict their use to the admin.",
                    "version": 1
                }
            }
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminInterface.sol": {
            "AdminInterface": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "oldAdmin",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "TransferAdmin",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "_renounceAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "_transferAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "admin",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "author": "Paul Razvan Berg",
                    "kind": "dev",
                    "methods": {},
                    "title": "AdminInterface",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "_renounceAdmin()": "bfa25308",
                        "_transferAdmin(address)": "e6abb5ae",
                        "admin()": "f851a440"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdmin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"_transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{},\"title\":\"AdminInterface\",\"version\":1},\"userdoc\":{\"events\":{\"TransferAdmin(address,address)\":{\"notice\":\"EVENTS\"}},\"kind\":\"user\",\"methods\":{\"_renounceAdmin()\":{\"notice\":\"NON-CONSTANT FUNCTIONS\"},\"admin()\":{\"notice\":\"The address of the administrator account or contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminInterface.sol\":\"AdminInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminInterface.sol\":{\"keccak256\":\"0x688f0b526031686926441348994bdbb4416e98ed440e71032257469934f7b15d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f51ab8b826ef1e282fc1d29ad4fb0b6aef7d60b928937b42f8ba05088f6857a\",\"dweb:/ipfs/QmfWh2Rz9gLW8baN7bFtXtdjHEwXRc5fPiPSbj21nZbSC4\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminStorage.sol\":{\"keccak256\":\"0x2f37d4b64e75cf8c7267ec4d70d48fea30fb2396c1eeabac276ee6b84c722c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbbfa562e31a776c1f9f16e986ed82239e4c82e86382a0268254e9eb5183f931\",\"dweb:/ipfs/QmRK8fsK71HdfB3kKFZdfEnKiVdskhR6CxRA59jjQuNLY1\"]}},\"version\":1}",
                "userdoc": {
                    "events": {
                        "TransferAdmin(address,address)": {
                            "notice": "EVENTS"
                        }
                    },
                    "kind": "user",
                    "methods": {
                        "_renounceAdmin()": {
                            "notice": "NON-CONSTANT FUNCTIONS"
                        },
                        "admin()": {
                            "notice": "The address of the administrator account or contract."
                        }
                    },
                    "version": 1
                }
            }
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminStorage.sol": {
            "AdminStorage": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "admin",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "admin()": "f851a440"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"The address of the administrator account or contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminStorage.sol\":\"AdminStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminStorage.sol\":{\"keccak256\":\"0x2f37d4b64e75cf8c7267ec4d70d48fea30fb2396c1eeabac276ee6b84c722c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbbfa562e31a776c1f9f16e986ed82239e4c82e86382a0268254e9eb5183f931\",\"dweb:/ipfs/QmRK8fsK71HdfB3kKFZdfEnKiVdskhR6CxRA59jjQuNLY1\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "admin()": {
                            "notice": "The address of the administrator account or contract."
                        }
                    },
                    "version": 1
                }
            }
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/test/GodModeErc20Recover.sol": {
            "GodModeErc20Recover": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "contract Erc20Interface",
                                "name": "token",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "recoverAmount",
                                "type": "uint256"
                            }
                        ],
                        "name": "Recover",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "contract Erc20Interface[]",
                                "name": "nonRecoverableTokens",
                                "type": "address[]"
                            }
                        ],
                        "name": "SetNonRecoverableTokens",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "oldAdmin",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "TransferAdmin",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "__godMode_getIsRecoverInitialized",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "bool",
                                "name": "state",
                                "type": "bool"
                            }
                        ],
                        "name": "__godMode_setIsRecoverInitialized",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "contract Erc20Interface",
                                "name": "token",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "recoverAmount",
                                "type": "uint256"
                            }
                        ],
                        "name": "_recover",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "_renounceAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "contract Erc20Interface[]",
                                "name": "tokens",
                                "type": "address[]"
                            }
                        ],
                        "name": "_setNonRecoverableTokens",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "_transferAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "admin",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "nonRecoverableTokens",
                        "outputs": [
                            {
                                "internalType": "contract Erc20Interface",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "author": "Paul Razvan Berg",
                    "details": "Strictly for test purposes. Do not use in production.",
                    "kind": "dev",
                    "methods": {
                        "_recover(address,uint256)": {
                            "details": "Emits a {RecoverToken} event. Requirements: - The caller must be the administrator. - The contract must be initialized. - The amount to recover cannot be zero. - The token to recover cannot be among the non-recoverable tokens.",
                            "params": {
                                "recoverAmount": "The uint256 amount to recover, specified in the token's decimal system.",
                                "token": "The token to make the recover for."
                            }
                        },
                        "_setNonRecoverableTokens(address[])": {
                            "details": "Emits a {SetNonRecoverableTokens} event. Requirements: - The caller must be the administrator. - The contract must be non-initialized. - The array of given tokens cannot be empty.",
                            "params": {
                                "tokens": "The array of tokens to set as non-recoverable."
                            }
                        },
                        "_transferAdmin(address)": {
                            "params": {
                                "newAdmin": "The acount of the new admin."
                            }
                        }
                    },
                    "title": "GodModeErc20Recover",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b5060018054610100600160a81b0319163361010081029190911790915560405181906000907fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf80908290a350610e718061006a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063cbacc9611161005b578063cbacc9611461011b578063dde4bec014610137578063e6abb5ae146101a5578063f851a440146101cb57610088565b806308b038a91461008d5780631c2872aa146100ae5780639e6ae5a0146100da578063bfa2530814610113575b600080fd5b6100ac600480360360208110156100a357600080fd5b503515156101d3565b005b6100ac600480360360408110156100c457600080fd5b506001600160a01b0381351690602001356101e6565b6100f7600480360360208110156100f057600080fd5b5035610647565b604080516001600160a01b039092168252519081900360200190f35b6100ac610671565b610123610715565b604080519115158252519081900360200190f35b6100ac6004803603602081101561014d57600080fd5b810190602081018135600160201b81111561016757600080fd5b82018360208201111561017957600080fd5b803590602001918460208302840111600160201b8311171561019a57600080fd5b50909250905061071e565b6100ac600480360360208110156101bb57600080fd5b50356001600160a01b03166109e2565b6100f7610af8565b6001805460ff1916911515919091179055565b60015461010090046001600160a01b0316331461023a576040805162461bcd60e51b815260206004820152600d60248201526c22a9292fa727aa2fa0a226a4a760991b604482015290519081900360640190fd5b6001805460ff1615151461028a576040805162461bcd60e51b815260206004820152601260248201527111549497d393d517d253925510531256915160721b604482015290519081900360640190fd5b600081116102d2576040805162461bcd60e51b815260206004820152601060248201526f4552525f5245434f5645525f5a45524f60801b604482015290519081900360640190fd5b6000826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561030d57600080fd5b505afa158015610321573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561034a57600080fd5b8101908080516040519392919084600160201b82111561036957600080fd5b90830190602082018581111561037e57600080fd5b8251600160201b81118282018810171561039757600080fd5b82525081516020918201929091019080838360005b838110156103c45781810151838201526020016103ac565b50505050905090810190601f1680156103f15780820380516001836020036101000a031916815260200191505b5060405250505080519060200120905060008080549050905060005b818110156105d1576000818154811061042257fe5b6000918252602090912001546001600160a01b0386811691161480159061058e57506000818154811061045157fe5b6000918252602082200154604080516395d89b4160e01b815290516001600160a01b03909216926395d89b4192600480840193829003018186803b15801561049857600080fd5b505afa1580156104ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156104d557600080fd5b8101908080516040519392919084600160201b8211156104f457600080fd5b90830190602082018581111561050957600080fd5b8251600160201b81118282018810171561052257600080fd5b82525081516020918201929091019080838360005b8381101561054f578181015183820152602001610537565b50505050905090810190601f16801561057c5780820380516001836020036101000a031916815260200191505b50604052505050805190602001208314155b6105c95760405162461bcd60e51b8152600401808060200182810382526021815260200180610df86021913960400191505060405180910390fd5b60010161040d565b506001546105f1906001600160a01b038681169161010090041685610b0c565b600154604080516001600160a01b03878116825260208201879052825161010090940416927ff6891c84a6c6af32a6d052172a8acc4c631b1d5057ffa2bc1da268b6938ea2da929181900390910190a250505050565b6000818154811061065757600080fd5b6000918252602090912001546001600160a01b0316905081565b60015461010090046001600160a01b031633146106c5576040805162461bcd60e51b815260206004820152600d60248201526c22a9292fa727aa2fa0a226a4a760991b604482015290519081900360640190fd5b60015460405160009161010090046001600160a01b0316907fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf80908390a360018054610100600160a81b0319169055565b60015460ff1690565b60015461010090046001600160a01b03163314610772576040805162461bcd60e51b815260206004820152600d60248201526c22a9292fa727aa2fa0a226a4a760991b604482015290519081900360640190fd5b60015460ff16156107bb576040805162461bcd60e51b815260206004820152600e60248201526d11549497d253925510531256915160921b604482015290519081900360640190fd5b8060005b81811015610958578383828181106107d357fe5b905060200201356001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561081b57600080fd5b505afa15801561082f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561085857600080fd5b8101908080516040519392919084600160201b82111561087757600080fd5b90830190602082018581111561088c57600080fd5b8251600160201b8111828201881017156108a557600080fd5b82525081516020918201929091019080838360005b838110156108d25781810151838201526020016108ba565b50505050905090810190601f1680156108ff5780820380516001836020036101000a031916815260200191505b5060405250505050600084848381811061091557fe5b835460018181018655600095865260209586902090910180546001600160a01b0319166001600160a01b03969093029490940135949094161790915550016107bf565b506001805460ff19168117908190556040805160208082528082018690526101009093046001600160a01b0316927fd877543bef27da9036243421e623413c8fdd78d7d183cc93d8f3cddbd657a2ed928792879290918291908201908590850280828437600083820152604051601f909101601f19169092018290039550909350505050a2505050565b60015461010090046001600160a01b03163314610a36576040805162461bcd60e51b815260206004820152600d60248201526c22a9292fa727aa2fa0a226a4a760991b604482015290519081900360640190fd5b6001600160a01b038116610a91576040805162461bcd60e51b815260206004820152601a60248201527f4552525f5345545f41444d494e5f5a45524f5f41444452455353000000000000604482015290519081900360640190fd5b6001546040516001600160a01b0380841692610100900416907fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf8090600090a3600180546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60015461010090046001600160a01b031681565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610b5e908490610b63565b505050565b6060610ba583836040518060400160405280601d81526020017f4552525f534146455f45524332305f4c4f575f4c4556454c5f43414c4c000000815250610c17565b805190915015610b5e57808060200190516020811015610bc457600080fd5b5051610b5e576040805162461bcd60e51b815260206004820152601e60248201527f4552525f534146455f45524332305f45524332305f4f5045524154494f4e0000604482015290519081900360640190fd5b6060610c2b846001600160a01b0316610dbb565b610c665760405162461bcd60e51b8152600401808060200182810382526023815260200180610e196023913960400191505060405180910390fd5b60006060856001600160a01b0316856040518082805190602001908083835b60208310610ca45780518252601f199092019160209182019101610c85565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610d06576040519150601f19603f3d011682016040523d82523d6000602084013e610d0b565b606091505b50915091508115610d1f579150610db49050565b805115610d2f5780518082602001fd5b8360405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d79578181015183820152602001610d61565b50505050905090810190601f168015610da65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610def57508115155b94935050505056fe4552525f5245434f5645525f4e4f4e5f5245434f56455241424c455f544f4b454e4552525f534146455f45524332305f43414c4c5f544f5f4e4f4e5f434f4e5452414354a2646970667358221220c5f18210e18e683eeeeec486b300380f5ae1305efc6d9f90999600a994a6483564736f6c63430007040033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xBDD36143EE09DE60BDEFCA70680E0F71189B2ED7ACEE364B53917AD433FDAF80 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0xE71 DUP1 PUSH2 0x6A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBACC961 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xCBACC961 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xDDE4BEC0 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xE6ABB5AE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1CB JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x8B038A9 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x1C2872AA EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x9E6AE5A0 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xBFA25308 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH2 0x671 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x715 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x71E JUMP JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x23A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x22A9292FA727AA2FA0A226A4A7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x28A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11549497D393D517D2539255105312569151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F5245434F5645525F5A45524F PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3AC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3F1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x422 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x58E JUMPI POP PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x451 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x95D89B41 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x54F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x537 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x57C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 EQ ISZERO JUMPDEST PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDF8 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x40D JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x5F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP6 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 PUSH32 0xF6891C84A6C6AF32A6D052172A8ACC4C631B1D5057FFA2BC1DA268B6938EA2DA SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6C5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x22A9292FA727AA2FA0A226A4A7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xBDD36143EE09DE60BDEFCA70680E0F71189B2ED7ACEE364B53917AD433FDAF80 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x772 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x22A9292FA727AA2FA0A226A4A7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x11549497D2539255105312569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x958 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x7D3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8D2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8BA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x8FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP POP PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x915 JUMPI INVALID JUMPDEST DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP4 MUL SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 SWAP1 SWAP5 AND OR SWAP1 SWAP2 SSTORE POP ADD PUSH2 0x7BF JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH2 0x100 SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH32 0xD877543BEF27DA9036243421E623413C8FDD78D7D183CC93D8F3CDDBD657A2ED SWAP3 DUP8 SWAP3 DUP8 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP3 ADD SWAP1 DUP6 SWAP1 DUP6 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP6 POP SWAP1 SWAP4 POP POP POP POP LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA36 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x22A9292FA727AA2FA0A226A4A7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA91 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F5345545F41444D494E5F5A45524F5F41444452455353000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0xBDD36143EE09DE60BDEFCA70680E0F71189B2ED7ACEE364B53917AD433FDAF80 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xB5E SWAP1 DUP5 SWAP1 PUSH2 0xB63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBA5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4552525F534146455F45524332305F4C4F575F4C4556454C5F43414C4C000000 DUP2 MSTORE POP PUSH2 0xC17 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB5E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xB5E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F534146455F45524332305F45524332305F4F5045524154494F4E0000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xC2B DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDBB JUMP JUMPDEST PUSH2 0xC66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE19 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xCA4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0xD1F JUMPI SWAP2 POP PUSH2 0xDB4 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xD2F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD79 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD61 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDA6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xDEF JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID GASLIMIT MSTORE MSTORE 0x5F MSTORE GASLIMIT NUMBER 0x4F JUMP GASLIMIT MSTORE 0x5F 0x4E 0x4F 0x4E 0x5F MSTORE GASLIMIT NUMBER 0x4F JUMP GASLIMIT MSTORE COINBASE TIMESTAMP 0x4C GASLIMIT 0x5F SLOAD 0x4F 0x4B GASLIMIT 0x4E GASLIMIT MSTORE MSTORE 0x5F MSTORE8 COINBASE CHAINID GASLIMIT 0x5F GASLIMIT MSTORE NUMBER ORIGIN ADDRESS 0x5F NUMBER COINBASE 0x4C 0x4C 0x5F SLOAD 0x4F 0x5F 0x4E 0x4F 0x4E 0x5F NUMBER 0x4F 0x4E SLOAD MSTORE COINBASE NUMBER SLOAD LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 CALL DUP3 LT 0xE1 DUP15 PUSH9 0x3EEEEEC486B300380F GAS 0xE1 ADDRESS 0x5E 0xFC PUSH14 0x9F90999600A994A6483564736F6C PUSH4 0x43000704 STOP CALLER ",
                        "sourceMap": "273:286:3:-:0;;;;;;;;;;;;-1:-1:-1;1155:5:0;:17;;-1:-1:-1;;;;;;1155:17:0;1135:10;1155:17;;;;;;;;;;1187:39;;1135:10;;-1:-1:-1;;1187:39:0;;-1:-1:-1;;1187:39:0;1091:142;273:286:3;;;;;;"
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063cbacc9611161005b578063cbacc9611461011b578063dde4bec014610137578063e6abb5ae146101a5578063f851a440146101cb57610088565b806308b038a91461008d5780631c2872aa146100ae5780639e6ae5a0146100da578063bfa2530814610113575b600080fd5b6100ac600480360360208110156100a357600080fd5b503515156101d3565b005b6100ac600480360360408110156100c457600080fd5b506001600160a01b0381351690602001356101e6565b6100f7600480360360208110156100f057600080fd5b5035610647565b604080516001600160a01b039092168252519081900360200190f35b6100ac610671565b610123610715565b604080519115158252519081900360200190f35b6100ac6004803603602081101561014d57600080fd5b810190602081018135600160201b81111561016757600080fd5b82018360208201111561017957600080fd5b803590602001918460208302840111600160201b8311171561019a57600080fd5b50909250905061071e565b6100ac600480360360208110156101bb57600080fd5b50356001600160a01b03166109e2565b6100f7610af8565b6001805460ff1916911515919091179055565b60015461010090046001600160a01b0316331461023a576040805162461bcd60e51b815260206004820152600d60248201526c22a9292fa727aa2fa0a226a4a760991b604482015290519081900360640190fd5b6001805460ff1615151461028a576040805162461bcd60e51b815260206004820152601260248201527111549497d393d517d253925510531256915160721b604482015290519081900360640190fd5b600081116102d2576040805162461bcd60e51b815260206004820152601060248201526f4552525f5245434f5645525f5a45524f60801b604482015290519081900360640190fd5b6000826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561030d57600080fd5b505afa158015610321573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561034a57600080fd5b8101908080516040519392919084600160201b82111561036957600080fd5b90830190602082018581111561037e57600080fd5b8251600160201b81118282018810171561039757600080fd5b82525081516020918201929091019080838360005b838110156103c45781810151838201526020016103ac565b50505050905090810190601f1680156103f15780820380516001836020036101000a031916815260200191505b5060405250505080519060200120905060008080549050905060005b818110156105d1576000818154811061042257fe5b6000918252602090912001546001600160a01b0386811691161480159061058e57506000818154811061045157fe5b6000918252602082200154604080516395d89b4160e01b815290516001600160a01b03909216926395d89b4192600480840193829003018186803b15801561049857600080fd5b505afa1580156104ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156104d557600080fd5b8101908080516040519392919084600160201b8211156104f457600080fd5b90830190602082018581111561050957600080fd5b8251600160201b81118282018810171561052257600080fd5b82525081516020918201929091019080838360005b8381101561054f578181015183820152602001610537565b50505050905090810190601f16801561057c5780820380516001836020036101000a031916815260200191505b50604052505050805190602001208314155b6105c95760405162461bcd60e51b8152600401808060200182810382526021815260200180610df86021913960400191505060405180910390fd5b60010161040d565b506001546105f1906001600160a01b038681169161010090041685610b0c565b600154604080516001600160a01b03878116825260208201879052825161010090940416927ff6891c84a6c6af32a6d052172a8acc4c631b1d5057ffa2bc1da268b6938ea2da929181900390910190a250505050565b6000818154811061065757600080fd5b6000918252602090912001546001600160a01b0316905081565b60015461010090046001600160a01b031633146106c5576040805162461bcd60e51b815260206004820152600d60248201526c22a9292fa727aa2fa0a226a4a760991b604482015290519081900360640190fd5b60015460405160009161010090046001600160a01b0316907fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf80908390a360018054610100600160a81b0319169055565b60015460ff1690565b60015461010090046001600160a01b03163314610772576040805162461bcd60e51b815260206004820152600d60248201526c22a9292fa727aa2fa0a226a4a760991b604482015290519081900360640190fd5b60015460ff16156107bb576040805162461bcd60e51b815260206004820152600e60248201526d11549497d253925510531256915160921b604482015290519081900360640190fd5b8060005b81811015610958578383828181106107d357fe5b905060200201356001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561081b57600080fd5b505afa15801561082f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561085857600080fd5b8101908080516040519392919084600160201b82111561087757600080fd5b90830190602082018581111561088c57600080fd5b8251600160201b8111828201881017156108a557600080fd5b82525081516020918201929091019080838360005b838110156108d25781810151838201526020016108ba565b50505050905090810190601f1680156108ff5780820380516001836020036101000a031916815260200191505b5060405250505050600084848381811061091557fe5b835460018181018655600095865260209586902090910180546001600160a01b0319166001600160a01b03969093029490940135949094161790915550016107bf565b506001805460ff19168117908190556040805160208082528082018690526101009093046001600160a01b0316927fd877543bef27da9036243421e623413c8fdd78d7d183cc93d8f3cddbd657a2ed928792879290918291908201908590850280828437600083820152604051601f909101601f19169092018290039550909350505050a2505050565b60015461010090046001600160a01b03163314610a36576040805162461bcd60e51b815260206004820152600d60248201526c22a9292fa727aa2fa0a226a4a760991b604482015290519081900360640190fd5b6001600160a01b038116610a91576040805162461bcd60e51b815260206004820152601a60248201527f4552525f5345545f41444d494e5f5a45524f5f41444452455353000000000000604482015290519081900360640190fd5b6001546040516001600160a01b0380841692610100900416907fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf8090600090a3600180546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60015461010090046001600160a01b031681565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610b5e908490610b63565b505050565b6060610ba583836040518060400160405280601d81526020017f4552525f534146455f45524332305f4c4f575f4c4556454c5f43414c4c000000815250610c17565b805190915015610b5e57808060200190516020811015610bc457600080fd5b5051610b5e576040805162461bcd60e51b815260206004820152601e60248201527f4552525f534146455f45524332305f45524332305f4f5045524154494f4e0000604482015290519081900360640190fd5b6060610c2b846001600160a01b0316610dbb565b610c665760405162461bcd60e51b8152600401808060200182810382526023815260200180610e196023913960400191505060405180910390fd5b60006060856001600160a01b0316856040518082805190602001908083835b60208310610ca45780518252601f199092019160209182019101610c85565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610d06576040519150601f19603f3d011682016040523d82523d6000602084013e610d0b565b606091505b50915091508115610d1f579150610db49050565b805115610d2f5780518082602001fd5b8360405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d79578181015183820152602001610d61565b50505050905090810190601f168015610da65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610def57508115155b94935050505056fe4552525f5245434f5645525f4e4f4e5f5245434f56455241424c455f544f4b454e4552525f534146455f45524332305f43414c4c5f544f5f4e4f4e5f434f4e5452414354a2646970667358221220c5f18210e18e683eeeeec486b300380f5ae1305efc6d9f90999600a994a6483564736f6c63430007040033",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCBACC961 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xCBACC961 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xDDE4BEC0 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xE6ABB5AE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x1CB JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x8B038A9 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x1C2872AA EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x9E6AE5A0 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xBFA25308 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH2 0x671 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x715 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x71E JUMP JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9E2 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0xAF8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x23A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x22A9292FA727AA2FA0A226A4A7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x28A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x11549497D393D517D2539255105312569151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4552525F5245434F5645525F5A45524F PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3AC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3F1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x422 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x58E JUMPI POP PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x451 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x95D89B41 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x54F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x537 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x57C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 EQ ISZERO JUMPDEST PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDF8 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x40D JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x5F1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP6 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE DUP3 MLOAD PUSH2 0x100 SWAP1 SWAP5 DIV AND SWAP3 PUSH32 0xF6891C84A6C6AF32A6D052172A8ACC4C631B1D5057FFA2BC1DA268B6938EA2DA SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6C5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x22A9292FA727AA2FA0A226A4A7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xBDD36143EE09DE60BDEFCA70680E0F71189B2ED7ACEE364B53917AD433FDAF80 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x772 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x22A9292FA727AA2FA0A226A4A7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x11549497D2539255105312569151 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x958 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x7D3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95D89B41 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x88C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8D2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8BA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x8FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP POP PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x915 JUMPI INVALID JUMPDEST DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP4 MUL SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 SWAP1 SWAP5 AND OR SWAP1 SWAP2 SSTORE POP ADD PUSH2 0x7BF JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH2 0x100 SWAP1 SWAP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH32 0xD877543BEF27DA9036243421E623413C8FDD78D7D183CC93D8F3CDDBD657A2ED SWAP3 DUP8 SWAP3 DUP8 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP3 ADD SWAP1 DUP6 SWAP1 DUP6 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP6 POP SWAP1 SWAP4 POP POP POP POP LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA36 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x22A9292FA727AA2FA0A226A4A7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA91 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F5345545F41444D494E5F5A45524F5F41444452455353000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0xBDD36143EE09DE60BDEFCA70680E0F71189B2ED7ACEE364B53917AD433FDAF80 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xB5E SWAP1 DUP5 SWAP1 PUSH2 0xB63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xBA5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4552525F534146455F45524332305F4C4F575F4C4556454C5F43414C4C000000 DUP2 MSTORE POP PUSH2 0xC17 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB5E JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xB5E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552525F534146455F45524332305F45524332305F4F5045524154494F4E0000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0xC2B DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDBB JUMP JUMPDEST PUSH2 0xC66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE19 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xCA4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD06 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0xD1F JUMPI SWAP2 POP PUSH2 0xDB4 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xD2F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD79 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD61 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xDA6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xDEF JUMPI POP DUP2 ISZERO ISZERO JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID GASLIMIT MSTORE MSTORE 0x5F MSTORE GASLIMIT NUMBER 0x4F JUMP GASLIMIT MSTORE 0x5F 0x4E 0x4F 0x4E 0x5F MSTORE GASLIMIT NUMBER 0x4F JUMP GASLIMIT MSTORE COINBASE TIMESTAMP 0x4C GASLIMIT 0x5F SLOAD 0x4F 0x4B GASLIMIT 0x4E GASLIMIT MSTORE MSTORE 0x5F MSTORE8 COINBASE CHAINID GASLIMIT 0x5F GASLIMIT MSTORE NUMBER ORIGIN ADDRESS 0x5F NUMBER COINBASE 0x4C 0x4C 0x5F SLOAD 0x4F 0x5F 0x4E 0x4F 0x4E 0x5F NUMBER 0x4F 0x4E SLOAD MSTORE COINBASE NUMBER SLOAD LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 CALL DUP3 LT 0xE1 DUP15 PUSH9 0x3EEEEEC486B300380F GAS 0xE1 ADDRESS 0x5E 0xFC PUSH14 0x9F90999600A994A6483564736F6C PUSH4 0x43000704 STOP CALLER ",
                        "sourceMap": "273:286:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:109;;;;;;;;;;;;;;;;-1:-1:-1;448:109:3;;;;:::i;:::-;;2128:1196:5;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2128:1196:5;;;;;;;;:::i;227:44:7:-;;;;;;;;;;;;;;;;-1:-1:-1;227:44:7;;:::i;:::-;;;;-1:-1:-1;;;;;227:44:7;;;;;;;;;;;;;;1615:150:0;;;:::i;324:118:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;945:625:5;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;945:625:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;945:625:5;;;;;;;;;;-1:-1:-1;945:625:5;;-1:-1:-1;945:625:5;-1:-1:-1;945:625:5;:::i;1969:230:0:-;;;;;;;;;;;;;;;;-1:-1:-1;1969:230:0;-1:-1:-1;;;;;1969:230:0;;:::i;182:20:2:-;;;:::i;448:109:3:-;522:20;:28;;-1:-1:-1;;522:28:3;;;;;;;;;;448:109::o;2128:1196:5:-;931:5:0;;;;;-1:-1:-1;;;;;931:5:0;940:10;931:19;923:45;;;;;-1:-1:-1;;;923:45:0;;;;;;;;;;;;-1:-1:-1;;;923:45:0;;;;;;;;;;;;;;;2258:20:5::1;::::0;;::::1;;:28;;;2250:59;;;::::0;;-1:-1:-1;;;2250:59:5;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2250:59:5;;;;;;;;;;;;;::::1;;2343:1;2327:13;:17;2319:46;;;::::0;;-1:-1:-1;;;2319:46:5;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2319:46:5;;;;;;;;;;;;;::::1;;2376:23;2418:5;-1:-1:-1::0;;;;;2418:12:5::1;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2418:14:5::1;::::0;::::1;;::::0;::::1;::::0;::::1;;;;;::::0;::::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;2418:14:5::1;;;;;;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;;;;;::::0;::::1;;::::0;;-1:-1:-1;;;2418:14:5;::::1;::::0;;::::1;::::0;-1:-1:-1;2418:14:5::1;;;;;::::0;::::1;;::::0;;-1:-1:-1;2418:14:5;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;2402:32;;;;;;2376:58;;2444:14;2461:20:::0;:27:::1;;;;2444:44;;2893:9;2888:300;2912:6;2908:1;:10;2888:300;;;2993:20;3014:1;2993:23;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;2967:50:5;;::::1;2993:23:::0;::::1;2967:50;::::0;::::1;::::0;:143:::1;;;3076:20;3097:1;3076:23;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;:32:::1;::::0;;-1:-1:-1;;;3076:32:5;;;;-1:-1:-1;;;;;3076:23:5;;::::1;::::0;:30:::1;::::0;:32:::1;::::0;;::::1;::::0;;;;;;:23;:32;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;3076:32:5::1;::::0;::::1;;::::0;::::1;::::0;::::1;;;;;::::0;::::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;3076:32:5::1;;;;;;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;;;;;::::0;::::1;;::::0;;-1:-1:-1;;;3076:32:5;::::1;::::0;;::::1;::::0;-1:-1:-1;3076:32:5::1;;;;;::::0;::::1;;::::0;;-1:-1:-1;3076:32:5;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;3060:50;;;;;;3041:15;:69;;2967:143;2942:235;;;;-1:-1:-1::0;;;2942:235:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2925:1;2920:6;2888:300;;;-1:-1:-1::0;3244:5:5::1;::::0;3225:40:::1;::::0;-1:-1:-1;;;;;3225:18:5;;::::1;::::0;3244:5:::1;::::0;::::1;;3251:13:::0;3225:18:::1;:40::i;:::-;3289:5;::::0;3281:36:::1;::::0;;-1:-1:-1;;;;;3281:36:5;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;3289:5:::1;::::0;;::::1;;::::0;3281:36:::1;::::0;;;;;;;;;::::1;978:1:0;;2128:1196:5::0;;:::o;227:44:7:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;227:44:7;;-1:-1:-1;227:44:7;:::o;1615:150:0:-;931:5;;;;;-1:-1:-1;;;;;931:5:0;940:10;931:19;923:45;;;;;-1:-1:-1;;;923:45:0;;;;;;;;;;;;-1:-1:-1;;;923:45:0;;;;;;;;;;;;;;;1706:5:::1;::::0;1692:35:::1;::::0;1721:4:::1;::::0;1706:5:::1;::::0;::::1;-1:-1:-1::0;;;;;1706:5:0::1;::::0;1692:35:::1;::::0;1721:4;;1692:35:::1;1737:5;:21:::0;;-1:-1:-1;;;;;;1737:21:0::1;::::0;;1615:150::o;324:118:3:-;415:20;;;;324:118;:::o;945:625:5:-;931:5:0;;;;;-1:-1:-1;;;;;931:5:0;940:10;931:19;923:45;;;;;-1:-1:-1;;;923:45:0;;;;;;;;;;;;-1:-1:-1;;;923:45:0;;;;;;;;;;;;;;;1080:20:5::1;::::0;::::1;;:29;1072:56;;;::::0;;-1:-1:-1;;;1072:56:5;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1072:56:5;;;;;;;;;;;;;::::1;;1241:6:::0;1224:14:::1;1264:133;1288:6;1284:1;:10;1264:133;;;1318:6;;1325:1;1318:9;;;;;;;;;;;;;-1:-1:-1::0;;;;;1318:9:5::1;-1:-1:-1::0;;;;;1318:16:5::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1318:18:5::1;::::0;::::1;;::::0;::::1;::::0;::::1;;;;;::::0;::::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;1318:18:5::1;;;;;;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;;;;;::::0;::::1;;::::0;;-1:-1:-1;;;1318:18:5;::::1;::::0;;::::1;::::0;-1:-1:-1;1318:18:5::1;;;;;::::0;::::1;;::::0;;-1:-1:-1;1318:18:5;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1350:20;1376:6;;1383:1;1376:9;;;;;;;1350:36:::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;1350:36:5;;;1376:9:::1;1350:36:::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;1350:36:5::1;-1:-1:-1::0;;;;;1376:9:5;;;::::1;::::0;;;::::1;;::::0;;;::::1;1350:36;::::0;;;-1:-1:-1;1296:6:5::1;1264:133;;;-1:-1:-1::0;1505:4:5::1;1482:27:::0;;-1:-1:-1;;1482:27:5::1;::::0;::::1;::::0;;;;1525:38:::1;::::0;;::::1;::::0;;;;;::::1;::::0;;;1482:27:::1;1549:5:::0;;::::1;-1:-1:-1::0;;;;;1549:5:5::1;::::0;1525:38:::1;::::0;1556:6;;1525:38;;;;;;;;;;1556:6;;1525:38;::::1;::::0;1556:6;1525:38;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;1525:38:5::1;::::0;;::::1;::::0;;::::1;::::0;-1:-1:-1;1525:38:5;;-1:-1:-1;;;;1525:38:5::1;978:1:0;945:625:5::0;;:::o;1969:230:0:-;931:5;;;;;-1:-1:-1;;;;;931:5:0;940:10;931:19;923:45;;;;;-1:-1:-1;;;923:45:0;;;;;;;;;;;;-1:-1:-1;;;923:45:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;2065:25:0;::::1;2057:64;;;::::0;;-1:-1:-1;;;2057:64:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2150:5;::::0;2136:30:::1;::::0;-1:-1:-1;;;;;2136:30:0;;::::1;::::0;2150:5:::1;::::0;::::1;;::::0;2136:30:::1;::::0;;;::::1;2176:5;:16:::0;;-1:-1:-1;;;;;2176:16:0;;::::1;;;-1:-1:-1::0;;;;;;2176:16:0;;::::1;::::0;;;::::1;::::0;;1969:230::o;182:20:2:-;;;;;;-1:-1:-1;;;;;182:20:2;;:::o;867:212:9:-;1013:58;;;-1:-1:-1;;;;;1013:58:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1013:58:9;-1:-1:-1;;;1013:58:9;;;987:85;;1006:5;;987:18;:85::i;:::-;867:212;;;:::o;1756:711::-;2181:23;2207:76;2237:5;2245:4;2207:76;;;;;;;;;;;;;;;;;:21;:76::i;:::-;2297:17;;2181:102;;-1:-1:-1;2297:21:9;2293:168;;2396:10;2385:30;;;;;;;;;;;;;;;-1:-1:-1;2385:30:9;2377:73;;;;;-1:-1:-1;;;2377:73:9;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:970;2614:12;2646:19;:6;-1:-1:-1;;;;;2646:17:9;;:19::i;:::-;2638:67;;;;-1:-1:-1;;;2638:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2779:12;2793:23;2820:6;-1:-1:-1;;;;;2820:11:9;2832:4;2820:17;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2820:17:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:59;;;;2851:7;2847:590;;;2881:10;-1:-1:-1;2874:17:9;;-1:-1:-1;2874:17:9;2847:590;2995:17;;:21;2991:436;;3260:10;3254:17;3320:15;3307:10;3303:2;3299:19;3292:44;3209:145;3399:12;3392:20;;-1:-1:-1;;;3392:20:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:970;;;;;;:::o;911:634:10:-;971:4;1448:20;;1278:66;1495:23;;;;;;:42;;-1:-1:-1;1522:15:10;;;1495:42;1487:51;911:634;-1:-1:-1;;;;911:634:10:o"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "739400",
                            "executionCost": "23163",
                            "totalCost": "762563"
                        },
                        "external": {
                            "__godMode_getIsRecoverInitialized()": "1010",
                            "__godMode_setIsRecoverInitialized(bool)": "21032",
                            "_recover(address,uint256)": "infinite",
                            "_renounceAdmin()": "24251",
                            "_setNonRecoverableTokens(address[])": "infinite",
                            "_transferAdmin(address)": "24379",
                            "admin()": "1114",
                            "nonRecoverableTokens(uint256)": "2015"
                        }
                    },
                    "methodIdentifiers": {
                        "__godMode_getIsRecoverInitialized()": "cbacc961",
                        "__godMode_setIsRecoverInitialized(bool)": "08b038a9",
                        "_recover(address,uint256)": "1c2872aa",
                        "_renounceAdmin()": "bfa25308",
                        "_setNonRecoverableTokens(address[])": "dde4bec0",
                        "_transferAdmin(address)": "e6abb5ae",
                        "admin()": "f851a440",
                        "nonRecoverableTokens(uint256)": "9e6ae5a0"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract Erc20Interface\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recoverAmount\",\"type\":\"uint256\"}],\"name\":\"Recover\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract Erc20Interface[]\",\"name\":\"nonRecoverableTokens\",\"type\":\"address[]\"}],\"name\":\"SetNonRecoverableTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdmin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"__godMode_getIsRecoverInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"__godMode_setIsRecoverInitialized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Erc20Interface\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"recoverAmount\",\"type\":\"uint256\"}],\"name\":\"_recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Erc20Interface[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"_setNonRecoverableTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"_transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonRecoverableTokens\",\"outputs\":[{\"internalType\":\"contract Erc20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"details\":\"Strictly for test purposes. Do not use in production.\",\"kind\":\"dev\",\"methods\":{\"_recover(address,uint256)\":{\"details\":\"Emits a {RecoverToken} event. Requirements: - The caller must be the administrator. - The contract must be initialized. - The amount to recover cannot be zero. - The token to recover cannot be among the non-recoverable tokens.\",\"params\":{\"recoverAmount\":\"The uint256 amount to recover, specified in the token's decimal system.\",\"token\":\"The token to make the recover for.\"}},\"_setNonRecoverableTokens(address[])\":{\"details\":\"Emits a {SetNonRecoverableTokens} event. Requirements: - The caller must be the administrator. - The contract must be non-initialized. - The array of given tokens cannot be empty.\",\"params\":{\"tokens\":\"The array of tokens to set as non-recoverable.\"}},\"_transferAdmin(address)\":{\"params\":{\"newAdmin\":\"The acount of the new admin.\"}}},\"title\":\"GodModeErc20Recover\",\"version\":1},\"userdoc\":{\"events\":{\"Recover(address,address,uint256)\":{\"notice\":\"EVENTS\"},\"TransferAdmin(address,address)\":{\"notice\":\"EVENTS\"}},\"kind\":\"user\",\"methods\":{\"_recover(address,uint256)\":{\"notice\":\"Recover Erc20 tokens sent to this contract (by accident or otherwise).\"},\"_renounceAdmin()\":{\"notice\":\"Leaves the contract without admin, so it will not be possible to call `onlyAdmin` functions anymore. Requirements: - The caller must be the administrator. WARNING: Doing this will leave the contract without an admin, thereby removing any functionality that is only available to the admin.\"},\"_setNonRecoverableTokens(address[])\":{\"notice\":\"Sets the tokens that this contract cannot recover.\"},\"_transferAdmin(address)\":{\"notice\":\"Transfers the admin of the contract to a new account (`newAdmin`). Can only be called by the current admin.\"},\"admin()\":{\"notice\":\"The address of the administrator account or contract.\"},\"nonRecoverableTokens(uint256)\":{\"notice\":\"The tokens that can be recovered cannot be in this mapping.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/test/GodModeErc20Recover.sol\":\"GodModeErc20Recover\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/Admin.sol\":{\"keccak256\":\"0x92120d6ffe0c8779c552ea97a68a89e3b8e3ab5105f27fb2a3fecfe02da0547b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac6948de292d5a8e6fe4f7e576e88c5c2d82175135e66fe7df7996905baa67ef\",\"dweb:/ipfs/QmX6tERWFfnyXRhXbcZMA9JZv7zqU82qtmSo4codbc2psr\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminInterface.sol\":{\"keccak256\":\"0x688f0b526031686926441348994bdbb4416e98ed440e71032257469934f7b15d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f51ab8b826ef1e282fc1d29ad4fb0b6aef7d60b928937b42f8ba05088f6857a\",\"dweb:/ipfs/QmfWh2Rz9gLW8baN7bFtXtdjHEwXRc5fPiPSbj21nZbSC4\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminStorage.sol\":{\"keccak256\":\"0x2f37d4b64e75cf8c7267ec4d70d48fea30fb2396c1eeabac276ee6b84c722c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbbfa562e31a776c1f9f16e986ed82239e4c82e86382a0268254e9eb5183f931\",\"dweb:/ipfs/QmRK8fsK71HdfB3kKFZdfEnKiVdskhR6CxRA59jjQuNLY1\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/test/GodModeErc20Recover.sol\":{\"keccak256\":\"0xc6190da404c7e0ed346a51c63bb8bde15ffda47a4650aa8cf56779ff149c3df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d241fceaed85361c6b64b8a9e83377b1f469ce04058568d5e03f883cf8cf837f\",\"dweb:/ipfs/QmRzhmW16RSPar8HEvm6du4iCGk9LjmvDsdYaAdmHsfCZU\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol\":{\"keccak256\":\"0x90bbb8ec12989c4585046314a4c559f938e86f871bd3bf515df99b42251e4334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edaf6824deba1ecd123f6809f694f47fd9a0d88fc8aee008d74705cdcef9864e\",\"dweb:/ipfs/QmPRzhMm3CtfyHBWEmE4qeti5qtmA61uGu1jRJJa5APd5m\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Recover.sol\":{\"keccak256\":\"0x86fd3ae4c9f186bc1bc6af7b7c687461350a02e526641ae0f493444699ceedea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://183b4142d8e62d143a78236cc3026afc31511d0fff8b8bbc6c6312a0ad3a32b8\",\"dweb:/ipfs/QmVKaZA11VpeJ6ZvntRwZi1GDakuXFHYPgcaGiyPPbJP9v\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverInterface.sol\":{\"keccak256\":\"0x59e7447f3236bdbaa68d95a7967018c4dd1903d404cfdb50f1b44beae4783586\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://790374d52e394571a777095b67443c2bb567efeb8834708f328f201841cfe90e\",\"dweb:/ipfs/QmdqQtuhQUDPncdUkRDbq42T7S1zAMMNX994pxXB8LYStK\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverStorage.sol\":{\"keccak256\":\"0xaf9b2db70948e20c90fa203434e71c15eadb52bae45a12c521383f3d867d99e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f5e422e422fe1df2f0d6ac04bb0a102c54074793e5c6aad498be501e549899c\",\"dweb:/ipfs/QmZKAAwJEUrxyh8te1Qy6AkqW3nkSP5HkD1Pf2MLbTXsec\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol\":{\"keccak256\":\"0xa8d786f4ee25a2f4c8050e6a594fcb15e414833a59c6f4b9817610f62ad288f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb787ab5826f1dd96be7b270bbaff40218d64588f8abcc1115e04cbb5eda98a\",\"dweb:/ipfs/Qmb8VoZXhP7ExcoSqtnWzx2oNuSAXpRz158JM5uRzYAgBk\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/SafeErc20.sol\":{\"keccak256\":\"0xadcd837d4d0a4e9074a05681b8830ce4f99a686d8131d6940529a8147b4b5ccc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b6cb6c4a6d05cf9a0498225c04e342418b24258cfffd666a2bdbf76613854c\",\"dweb:/ipfs/Qmd28B8euKp8zNjsoEPgGzBry5aWouc9LU7BLanjfc29nu\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x735f4556918185e54b22b5e9c707fef046e8bd0077d9c2763a72b6d4131f36f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ef53e864e5d81b7131be85019dd9ac7aebd0ca814d23f706ae3a3ca2cd10521\",\"dweb:/ipfs/QmccWVbBLVcfes8aiT5fjzmYLKQNbKtnwdYDVP1LJ2EB7y\"]}},\"version\":1}",
                "userdoc": {
                    "events": {
                        "Recover(address,address,uint256)": {
                            "notice": "EVENTS"
                        },
                        "TransferAdmin(address,address)": {
                            "notice": "EVENTS"
                        }
                    },
                    "kind": "user",
                    "methods": {
                        "_recover(address,uint256)": {
                            "notice": "Recover Erc20 tokens sent to this contract (by accident or otherwise)."
                        },
                        "_renounceAdmin()": {
                            "notice": "Leaves the contract without admin, so it will not be possible to call `onlyAdmin` functions anymore. Requirements: - The caller must be the administrator. WARNING: Doing this will leave the contract without an admin, thereby removing any functionality that is only available to the admin."
                        },
                        "_setNonRecoverableTokens(address[])": {
                            "notice": "Sets the tokens that this contract cannot recover."
                        },
                        "_transferAdmin(address)": {
                            "notice": "Transfers the admin of the contract to a new account (`newAdmin`). Can only be called by the current admin."
                        },
                        "admin()": {
                            "notice": "The address of the administrator account or contract."
                        },
                        "nonRecoverableTokens(uint256)": {
                            "notice": "The tokens that can be recovered cannot be in this mapping."
                        }
                    },
                    "version": 1
                }
            }
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol": {
            "Erc20Interface": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Approval",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "account",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "burnAmount",
                                "type": "uint256"
                            }
                        ],
                        "name": "Burn",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "account",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "mintAmount",
                                "type": "uint256"
                            }
                        ],
                        "name": "Mint",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Transfer",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            }
                        ],
                        "name": "allowance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "spender",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "approve",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "account",
                                "type": "address"
                            }
                        ],
                        "name": "balanceOf",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "decimals",
                        "outputs": [
                            {
                                "internalType": "uint8",
                                "name": "",
                                "type": "uint8"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "name",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "symbol",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalSupply",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transfer",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "sender",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferFrom",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "author": "Paul Razvan Berg",
                    "details": "Forked from OpenZeppelin https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC20/IERC20.sol",
                    "kind": "dev",
                    "methods": {},
                    "title": "Erc20Interface",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "allowance(address,address)": "dd62ed3e",
                        "approve(address,uint256)": "095ea7b3",
                        "balanceOf(address)": "70a08231",
                        "decimals()": "313ce567",
                        "name()": "06fdde03",
                        "symbol()": "95d89b41",
                        "totalSupply()": "18160ddd",
                        "transfer(address,uint256)": "a9059cbb",
                        "transferFrom(address,address,uint256)": "23b872dd"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"details\":\"Forked from OpenZeppelin https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC20/IERC20.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Erc20Interface\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"EVENTS\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"CONSTANT FUNCTIONS\"},\"approve(address,uint256)\":{\"notice\":\"NON-CONSTANT FUNCTIONS\"},\"decimals()\":{\"notice\":\"Returns the number of decimals used to get its user representation.\"},\"name()\":{\"notice\":\"Returns the name of the token.\"},\"symbol()\":{\"notice\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"notice\":\"Returns the amount of tokens in existence.\"}},\"notice\":\"Interface of the Erc20 standard\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol\":\"Erc20Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol\":{\"keccak256\":\"0x90bbb8ec12989c4585046314a4c559f938e86f871bd3bf515df99b42251e4334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edaf6824deba1ecd123f6809f694f47fd9a0d88fc8aee008d74705cdcef9864e\",\"dweb:/ipfs/QmPRzhMm3CtfyHBWEmE4qeti5qtmA61uGu1jRJJa5APd5m\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol\":{\"keccak256\":\"0xa8d786f4ee25a2f4c8050e6a594fcb15e414833a59c6f4b9817610f62ad288f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb787ab5826f1dd96be7b270bbaff40218d64588f8abcc1115e04cbb5eda98a\",\"dweb:/ipfs/Qmb8VoZXhP7ExcoSqtnWzx2oNuSAXpRz158JM5uRzYAgBk\"]}},\"version\":1}",
                "userdoc": {
                    "events": {
                        "Approval(address,address,uint256)": {
                            "notice": "EVENTS"
                        }
                    },
                    "kind": "user",
                    "methods": {
                        "allowance(address,address)": {
                            "notice": "CONSTANT FUNCTIONS"
                        },
                        "approve(address,uint256)": {
                            "notice": "NON-CONSTANT FUNCTIONS"
                        },
                        "decimals()": {
                            "notice": "Returns the number of decimals used to get its user representation."
                        },
                        "name()": {
                            "notice": "Returns the name of the token."
                        },
                        "symbol()": {
                            "notice": "Returns the symbol of the token, usually a shorter version of the name."
                        },
                        "totalSupply()": {
                            "notice": "Returns the amount of tokens in existence."
                        }
                    },
                    "notice": "Interface of the Erc20 standard",
                    "version": 1
                }
            }
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Recover.sol": {
            "Erc20Recover": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "contract Erc20Interface",
                                "name": "token",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "recoverAmount",
                                "type": "uint256"
                            }
                        ],
                        "name": "Recover",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "contract Erc20Interface[]",
                                "name": "nonRecoverableTokens",
                                "type": "address[]"
                            }
                        ],
                        "name": "SetNonRecoverableTokens",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "oldAdmin",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "TransferAdmin",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "contract Erc20Interface",
                                "name": "token",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "recoverAmount",
                                "type": "uint256"
                            }
                        ],
                        "name": "_recover",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "_renounceAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "contract Erc20Interface[]",
                                "name": "tokens",
                                "type": "address[]"
                            }
                        ],
                        "name": "_setNonRecoverableTokens",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "_transferAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "admin",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "nonRecoverableTokens",
                        "outputs": [
                            {
                                "internalType": "contract Erc20Interface",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "author": "Paul Razvan Berg",
                    "kind": "dev",
                    "methods": {
                        "_recover(address,uint256)": {
                            "details": "Emits a {RecoverToken} event. Requirements: - The caller must be the administrator. - The contract must be initialized. - The amount to recover cannot be zero. - The token to recover cannot be among the non-recoverable tokens.",
                            "params": {
                                "recoverAmount": "The uint256 amount to recover, specified in the token's decimal system.",
                                "token": "The token to make the recover for."
                            }
                        },
                        "_setNonRecoverableTokens(address[])": {
                            "details": "Emits a {SetNonRecoverableTokens} event. Requirements: - The caller must be the administrator. - The contract must be non-initialized. - The array of given tokens cannot be empty.",
                            "params": {
                                "tokens": "The array of tokens to set as non-recoverable."
                            }
                        },
                        "_transferAdmin(address)": {
                            "params": {
                                "newAdmin": "The acount of the new admin."
                            }
                        }
                    },
                    "title": "Erc20Recover",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "_recover(address,uint256)": "1c2872aa",
                        "_renounceAdmin()": "bfa25308",
                        "_setNonRecoverableTokens(address[])": "dde4bec0",
                        "_transferAdmin(address)": "e6abb5ae",
                        "admin()": "f851a440",
                        "nonRecoverableTokens(uint256)": "9e6ae5a0"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract Erc20Interface\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recoverAmount\",\"type\":\"uint256\"}],\"name\":\"Recover\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract Erc20Interface[]\",\"name\":\"nonRecoverableTokens\",\"type\":\"address[]\"}],\"name\":\"SetNonRecoverableTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract Erc20Interface\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"recoverAmount\",\"type\":\"uint256\"}],\"name\":\"_recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_renounceAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Erc20Interface[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"_setNonRecoverableTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"_transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonRecoverableTokens\",\"outputs\":[{\"internalType\":\"contract Erc20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{\"_recover(address,uint256)\":{\"details\":\"Emits a {RecoverToken} event. Requirements: - The caller must be the administrator. - The contract must be initialized. - The amount to recover cannot be zero. - The token to recover cannot be among the non-recoverable tokens.\",\"params\":{\"recoverAmount\":\"The uint256 amount to recover, specified in the token's decimal system.\",\"token\":\"The token to make the recover for.\"}},\"_setNonRecoverableTokens(address[])\":{\"details\":\"Emits a {SetNonRecoverableTokens} event. Requirements: - The caller must be the administrator. - The contract must be non-initialized. - The array of given tokens cannot be empty.\",\"params\":{\"tokens\":\"The array of tokens to set as non-recoverable.\"}},\"_transferAdmin(address)\":{\"params\":{\"newAdmin\":\"The acount of the new admin.\"}}},\"title\":\"Erc20Recover\",\"version\":1},\"userdoc\":{\"events\":{\"Recover(address,address,uint256)\":{\"notice\":\"EVENTS\"},\"TransferAdmin(address,address)\":{\"notice\":\"EVENTS\"}},\"kind\":\"user\",\"methods\":{\"_recover(address,uint256)\":{\"notice\":\"Recover Erc20 tokens sent to this contract (by accident or otherwise).\"},\"_renounceAdmin()\":{\"notice\":\"Leaves the contract without admin, so it will not be possible to call `onlyAdmin` functions anymore. Requirements: - The caller must be the administrator. WARNING: Doing this will leave the contract without an admin, thereby removing any functionality that is only available to the admin.\"},\"_setNonRecoverableTokens(address[])\":{\"notice\":\"Sets the tokens that this contract cannot recover.\"},\"_transferAdmin(address)\":{\"notice\":\"Transfers the admin of the contract to a new account (`newAdmin`). Can only be called by the current admin.\"},\"admin()\":{\"notice\":\"The address of the administrator account or contract.\"},\"nonRecoverableTokens(uint256)\":{\"notice\":\"The tokens that can be recovered cannot be in this mapping.\"}},\"notice\":\"Gives the administrator the ability to recover the Erc20 tokens that had been sent (accidentally, or not) to the contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Recover.sol\":\"Erc20Recover\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/Admin.sol\":{\"keccak256\":\"0x92120d6ffe0c8779c552ea97a68a89e3b8e3ab5105f27fb2a3fecfe02da0547b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac6948de292d5a8e6fe4f7e576e88c5c2d82175135e66fe7df7996905baa67ef\",\"dweb:/ipfs/QmX6tERWFfnyXRhXbcZMA9JZv7zqU82qtmSo4codbc2psr\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminInterface.sol\":{\"keccak256\":\"0x688f0b526031686926441348994bdbb4416e98ed440e71032257469934f7b15d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f51ab8b826ef1e282fc1d29ad4fb0b6aef7d60b928937b42f8ba05088f6857a\",\"dweb:/ipfs/QmfWh2Rz9gLW8baN7bFtXtdjHEwXRc5fPiPSbj21nZbSC4\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminStorage.sol\":{\"keccak256\":\"0x2f37d4b64e75cf8c7267ec4d70d48fea30fb2396c1eeabac276ee6b84c722c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbbfa562e31a776c1f9f16e986ed82239e4c82e86382a0268254e9eb5183f931\",\"dweb:/ipfs/QmRK8fsK71HdfB3kKFZdfEnKiVdskhR6CxRA59jjQuNLY1\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol\":{\"keccak256\":\"0x90bbb8ec12989c4585046314a4c559f938e86f871bd3bf515df99b42251e4334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edaf6824deba1ecd123f6809f694f47fd9a0d88fc8aee008d74705cdcef9864e\",\"dweb:/ipfs/QmPRzhMm3CtfyHBWEmE4qeti5qtmA61uGu1jRJJa5APd5m\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Recover.sol\":{\"keccak256\":\"0x86fd3ae4c9f186bc1bc6af7b7c687461350a02e526641ae0f493444699ceedea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://183b4142d8e62d143a78236cc3026afc31511d0fff8b8bbc6c6312a0ad3a32b8\",\"dweb:/ipfs/QmVKaZA11VpeJ6ZvntRwZi1GDakuXFHYPgcaGiyPPbJP9v\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverInterface.sol\":{\"keccak256\":\"0x59e7447f3236bdbaa68d95a7967018c4dd1903d404cfdb50f1b44beae4783586\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://790374d52e394571a777095b67443c2bb567efeb8834708f328f201841cfe90e\",\"dweb:/ipfs/QmdqQtuhQUDPncdUkRDbq42T7S1zAMMNX994pxXB8LYStK\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverStorage.sol\":{\"keccak256\":\"0xaf9b2db70948e20c90fa203434e71c15eadb52bae45a12c521383f3d867d99e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f5e422e422fe1df2f0d6ac04bb0a102c54074793e5c6aad498be501e549899c\",\"dweb:/ipfs/QmZKAAwJEUrxyh8te1Qy6AkqW3nkSP5HkD1Pf2MLbTXsec\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol\":{\"keccak256\":\"0xa8d786f4ee25a2f4c8050e6a594fcb15e414833a59c6f4b9817610f62ad288f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb787ab5826f1dd96be7b270bbaff40218d64588f8abcc1115e04cbb5eda98a\",\"dweb:/ipfs/Qmb8VoZXhP7ExcoSqtnWzx2oNuSAXpRz158JM5uRzYAgBk\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/SafeErc20.sol\":{\"keccak256\":\"0xadcd837d4d0a4e9074a05681b8830ce4f99a686d8131d6940529a8147b4b5ccc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b6cb6c4a6d05cf9a0498225c04e342418b24258cfffd666a2bdbf76613854c\",\"dweb:/ipfs/Qmd28B8euKp8zNjsoEPgGzBry5aWouc9LU7BLanjfc29nu\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x735f4556918185e54b22b5e9c707fef046e8bd0077d9c2763a72b6d4131f36f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ef53e864e5d81b7131be85019dd9ac7aebd0ca814d23f706ae3a3ca2cd10521\",\"dweb:/ipfs/QmccWVbBLVcfes8aiT5fjzmYLKQNbKtnwdYDVP1LJ2EB7y\"]}},\"version\":1}",
                "userdoc": {
                    "events": {
                        "Recover(address,address,uint256)": {
                            "notice": "EVENTS"
                        },
                        "TransferAdmin(address,address)": {
                            "notice": "EVENTS"
                        }
                    },
                    "kind": "user",
                    "methods": {
                        "_recover(address,uint256)": {
                            "notice": "Recover Erc20 tokens sent to this contract (by accident or otherwise)."
                        },
                        "_renounceAdmin()": {
                            "notice": "Leaves the contract without admin, so it will not be possible to call `onlyAdmin` functions anymore. Requirements: - The caller must be the administrator. WARNING: Doing this will leave the contract without an admin, thereby removing any functionality that is only available to the admin."
                        },
                        "_setNonRecoverableTokens(address[])": {
                            "notice": "Sets the tokens that this contract cannot recover."
                        },
                        "_transferAdmin(address)": {
                            "notice": "Transfers the admin of the contract to a new account (`newAdmin`). Can only be called by the current admin."
                        },
                        "admin()": {
                            "notice": "The address of the administrator account or contract."
                        },
                        "nonRecoverableTokens(uint256)": {
                            "notice": "The tokens that can be recovered cannot be in this mapping."
                        }
                    },
                    "notice": "Gives the administrator the ability to recover the Erc20 tokens that had been sent (accidentally, or not) to the contract.",
                    "version": 1
                }
            }
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverInterface.sol": {
            "Erc20RecoverInterface": {
                "abi": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "contract Erc20Interface",
                                "name": "token",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "recoverAmount",
                                "type": "uint256"
                            }
                        ],
                        "name": "Recover",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "contract Erc20Interface[]",
                                "name": "nonRecoverableTokens",
                                "type": "address[]"
                            }
                        ],
                        "name": "SetNonRecoverableTokens",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "contract Erc20Interface",
                                "name": "token",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "recoverAmount",
                                "type": "uint256"
                            }
                        ],
                        "name": "_recover",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "contract Erc20Interface[]",
                                "name": "tokens",
                                "type": "address[]"
                            }
                        ],
                        "name": "_setNonRecoverableTokens",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "nonRecoverableTokens",
                        "outputs": [
                            {
                                "internalType": "contract Erc20Interface",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "_recover(address,uint256)": "1c2872aa",
                        "_setNonRecoverableTokens(address[])": "dde4bec0",
                        "nonRecoverableTokens(uint256)": "9e6ae5a0"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract Erc20Interface\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recoverAmount\",\"type\":\"uint256\"}],\"name\":\"Recover\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract Erc20Interface[]\",\"name\":\"nonRecoverableTokens\",\"type\":\"address[]\"}],\"name\":\"SetNonRecoverableTokens\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract Erc20Interface\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"recoverAmount\",\"type\":\"uint256\"}],\"name\":\"_recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Erc20Interface[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"_setNonRecoverableTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonRecoverableTokens\",\"outputs\":[{\"internalType\":\"contract Erc20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Recover(address,address,uint256)\":{\"notice\":\"EVENTS\"}},\"kind\":\"user\",\"methods\":{\"_recover(address,uint256)\":{\"notice\":\"NON-CONSTANT FUNCTIONS\"},\"nonRecoverableTokens(uint256)\":{\"notice\":\"The tokens that can be recovered cannot be in this mapping.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverInterface.sol\":\"Erc20RecoverInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol\":{\"keccak256\":\"0x90bbb8ec12989c4585046314a4c559f938e86f871bd3bf515df99b42251e4334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edaf6824deba1ecd123f6809f694f47fd9a0d88fc8aee008d74705cdcef9864e\",\"dweb:/ipfs/QmPRzhMm3CtfyHBWEmE4qeti5qtmA61uGu1jRJJa5APd5m\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverInterface.sol\":{\"keccak256\":\"0x59e7447f3236bdbaa68d95a7967018c4dd1903d404cfdb50f1b44beae4783586\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://790374d52e394571a777095b67443c2bb567efeb8834708f328f201841cfe90e\",\"dweb:/ipfs/QmdqQtuhQUDPncdUkRDbq42T7S1zAMMNX994pxXB8LYStK\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverStorage.sol\":{\"keccak256\":\"0xaf9b2db70948e20c90fa203434e71c15eadb52bae45a12c521383f3d867d99e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f5e422e422fe1df2f0d6ac04bb0a102c54074793e5c6aad498be501e549899c\",\"dweb:/ipfs/QmZKAAwJEUrxyh8te1Qy6AkqW3nkSP5HkD1Pf2MLbTXsec\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol\":{\"keccak256\":\"0xa8d786f4ee25a2f4c8050e6a594fcb15e414833a59c6f4b9817610f62ad288f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb787ab5826f1dd96be7b270bbaff40218d64588f8abcc1115e04cbb5eda98a\",\"dweb:/ipfs/Qmb8VoZXhP7ExcoSqtnWzx2oNuSAXpRz158JM5uRzYAgBk\"]}},\"version\":1}",
                "userdoc": {
                    "events": {
                        "Recover(address,address,uint256)": {
                            "notice": "EVENTS"
                        }
                    },
                    "kind": "user",
                    "methods": {
                        "_recover(address,uint256)": {
                            "notice": "NON-CONSTANT FUNCTIONS"
                        },
                        "nonRecoverableTokens(uint256)": {
                            "notice": "The tokens that can be recovered cannot be in this mapping."
                        }
                    },
                    "version": 1
                }
            }
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverStorage.sol": {
            "Erc20RecoverStorage": {
                "abi": [
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "nonRecoverableTokens",
                        "outputs": [
                            {
                                "internalType": "contract Erc20Interface",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "stateVariables": {
                        "isRecoverInitialized": {
                            "details": "A flag that signals whether the the non-recoverable tokens were set or not."
                        }
                    },
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "nonRecoverableTokens(uint256)": "9e6ae5a0"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonRecoverableTokens\",\"outputs\":[{\"internalType\":\"contract Erc20Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"isRecoverInitialized\":{\"details\":\"A flag that signals whether the the non-recoverable tokens were set or not.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"nonRecoverableTokens(uint256)\":{\"notice\":\"The tokens that can be recovered cannot be in this mapping.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverStorage.sol\":\"Erc20RecoverStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol\":{\"keccak256\":\"0x90bbb8ec12989c4585046314a4c559f938e86f871bd3bf515df99b42251e4334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edaf6824deba1ecd123f6809f694f47fd9a0d88fc8aee008d74705cdcef9864e\",\"dweb:/ipfs/QmPRzhMm3CtfyHBWEmE4qeti5qtmA61uGu1jRJJa5APd5m\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverStorage.sol\":{\"keccak256\":\"0xaf9b2db70948e20c90fa203434e71c15eadb52bae45a12c521383f3d867d99e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f5e422e422fe1df2f0d6ac04bb0a102c54074793e5c6aad498be501e549899c\",\"dweb:/ipfs/QmZKAAwJEUrxyh8te1Qy6AkqW3nkSP5HkD1Pf2MLbTXsec\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol\":{\"keccak256\":\"0xa8d786f4ee25a2f4c8050e6a594fcb15e414833a59c6f4b9817610f62ad288f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb787ab5826f1dd96be7b270bbaff40218d64588f8abcc1115e04cbb5eda98a\",\"dweb:/ipfs/Qmb8VoZXhP7ExcoSqtnWzx2oNuSAXpRz158JM5uRzYAgBk\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "nonRecoverableTokens(uint256)": {
                            "notice": "The tokens that can be recovered cannot be in this mapping."
                        }
                    },
                    "version": 1
                }
            }
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol": {
            "Erc20Storage": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "decimals",
                        "outputs": [
                            {
                                "internalType": "uint8",
                                "name": "",
                                "type": "uint8"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "name",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "symbol",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalSupply",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "author": "Paul Razvan Berg",
                    "kind": "dev",
                    "methods": {},
                    "title": "ExponentialStorage",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "",
                        "opcodes": "",
                        "sourceMap": ""
                    },
                    "gasEstimates": null,
                    "methodIdentifiers": {
                        "decimals()": "313ce567",
                        "name()": "06fdde03",
                        "symbol()": "95d89b41",
                        "totalSupply()": "18160ddd"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ExponentialStorage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decimals()\":{\"notice\":\"Returns the number of decimals used to get its user representation.\"},\"name()\":{\"notice\":\"Returns the name of the token.\"},\"symbol()\":{\"notice\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"notice\":\"Returns the amount of tokens in existence.\"}},\"notice\":\"The storage interface ancillary to an Erc20 contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol\":\"Erc20Storage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol\":{\"keccak256\":\"0xa8d786f4ee25a2f4c8050e6a594fcb15e414833a59c6f4b9817610f62ad288f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb787ab5826f1dd96be7b270bbaff40218d64588f8abcc1115e04cbb5eda98a\",\"dweb:/ipfs/Qmb8VoZXhP7ExcoSqtnWzx2oNuSAXpRz158JM5uRzYAgBk\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "decimals()": {
                            "notice": "Returns the number of decimals used to get its user representation."
                        },
                        "name()": {
                            "notice": "Returns the name of the token."
                        },
                        "symbol()": {
                            "notice": "Returns the symbol of the token, usually a shorter version of the name."
                        },
                        "totalSupply()": {
                            "notice": "Returns the amount of tokens in existence."
                        }
                    },
                    "notice": "The storage interface ancillary to an Erc20 contract.",
                    "version": 1
                }
            }
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/SafeErc20.sol": {
            "SafeErc20": {
                "abi": [],
                "devdoc": {
                    "author": "Paul Razvan Berg",
                    "details": "Forked from OpenZeppelin https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v3.1.0/contracts/utils/Address.sol",
                    "kind": "dev",
                    "methods": {},
                    "title": "SafeErc20.sol",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c394c692948de3c5063d098c70602718d0afc4de640c6bcfeff065d852ab4a6264736f6c63430007040033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP5 0xC6 SWAP3 SWAP5 DUP14 0xE3 0xC5 MOD RETURNDATASIZE MULMOD DUP13 PUSH17 0x602718D0AFC4DE640C6BCFEFF065D852AB 0x4A PUSH3 0x64736F PUSH13 0x63430007040033000000000000 ",
                        "sourceMap": "768:2677:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c394c692948de3c5063d098c70602718d0afc4de640c6bcfeff065d852ab4a6264736f6c63430007040033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP5 0xC6 SWAP3 SWAP5 DUP14 0xE3 0xC5 MOD RETURNDATASIZE MULMOD DUP13 PUSH17 0x602718D0AFC4DE640C6BCFEFF065D852AB 0x4A PUSH3 0x64736F PUSH13 0x63430007040033000000000000 ",
                        "sourceMap": "768:2677:9:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "97",
                            "totalCost": "17297"
                        },
                        "internal": {
                            "callOptionalReturn(contract Erc20Interface,bytes memory)": "infinite",
                            "functionCallWithValue(address,bytes memory,string memory)": "infinite",
                            "safeTransfer(contract Erc20Interface,address,uint256)": "infinite",
                            "safeTransferFrom(contract Erc20Interface,address,address,uint256)": "infinite"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"details\":\"Forked from OpenZeppelin https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v3.1.0/contracts/utils/Address.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeErc20.sol\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Wraps around Erc20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeErc20 for Erc20Interface;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/SafeErc20.sol\":\"SafeErc20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol\":{\"keccak256\":\"0x90bbb8ec12989c4585046314a4c559f938e86f871bd3bf515df99b42251e4334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edaf6824deba1ecd123f6809f694f47fd9a0d88fc8aee008d74705cdcef9864e\",\"dweb:/ipfs/QmPRzhMm3CtfyHBWEmE4qeti5qtmA61uGu1jRJJa5APd5m\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol\":{\"keccak256\":\"0xa8d786f4ee25a2f4c8050e6a594fcb15e414833a59c6f4b9817610f62ad288f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efb787ab5826f1dd96be7b270bbaff40218d64588f8abcc1115e04cbb5eda98a\",\"dweb:/ipfs/Qmb8VoZXhP7ExcoSqtnWzx2oNuSAXpRz158JM5uRzYAgBk\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/SafeErc20.sol\":{\"keccak256\":\"0xadcd837d4d0a4e9074a05681b8830ce4f99a686d8131d6940529a8147b4b5ccc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b6cb6c4a6d05cf9a0498225c04e342418b24258cfffd666a2bdbf76613854c\",\"dweb:/ipfs/Qmd28B8euKp8zNjsoEPgGzBry5aWouc9LU7BLanjfc29nu\"]},\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x735f4556918185e54b22b5e9c707fef046e8bd0077d9c2763a72b6d4131f36f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ef53e864e5d81b7131be85019dd9ac7aebd0ca814d23f706ae3a3ca2cd10521\",\"dweb:/ipfs/QmccWVbBLVcfes8aiT5fjzmYLKQNbKtnwdYDVP1LJ2EB7y\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Wraps around Erc20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeErc20 for Erc20Interface;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
                    "version": 1
                }
            }
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/utils/Address.sol": {
            "Address": {
                "abi": [],
                "devdoc": {
                    "author": "Paul Razvan Berg",
                    "details": "Forked from OpenZeppelin https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v3.1.0/contracts/utils/Address.sol",
                    "kind": "dev",
                    "methods": {},
                    "title": "Address",
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044998558a1f27140116c4b8261d58a680d5058b0ff8458d428c1836300ccb82264736f6c63430007040033",
                        "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY SWAP10 DUP6 PC LOG1 CALLCODE PUSH18 0x40116C4B8261D58A680D5058B0FF8458D428 0xC1 DUP4 PUSH4 0xCCB822 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
                        "sourceMap": "319:1228:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044998558a1f27140116c4b8261d58a680d5058b0ff8458d428c1836300ccb82264736f6c63430007040033",
                        "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIFFICULTY SWAP10 DUP6 PC LOG1 CALLCODE PUSH18 0x40116C4B8261D58A680D5058B0FF8458D428 0xC1 DUP4 PUSH4 0xCCB822 PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
                        "sourceMap": "319:1228:10:-:0;;;;;;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "17200",
                            "executionCost": "97",
                            "totalCost": "17297"
                        },
                        "internal": {
                            "isContract(address)": "infinite"
                        }
                    },
                    "methodIdentifiers": {}
                },
                "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"details\":\"Forked from OpenZeppelin https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v3.1.0/contracts/utils/Address.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Address\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Collection of functions related to the address type.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x735f4556918185e54b22b5e9c707fef046e8bd0077d9c2763a72b6d4131f36f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ef53e864e5d81b7131be85019dd9ac7aebd0ca814d23f706ae3a3ca2cd10521\",\"dweb:/ipfs/QmccWVbBLVcfes8aiT5fjzmYLKQNbKtnwdYDVP1LJ2EB7y\"]}},\"version\":1}",
                "userdoc": {
                    "kind": "user",
                    "methods": {},
                    "notice": "Collection of functions related to the address type.",
                    "version": 1
                }
            }
        }
    },
    "sources": {
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/Admin.sol": {
            "ast": {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/Admin.sol",
                "exportedSymbols": {
                    "Admin": [
                        93
                    ],
                    "AdminInterface": [
                        116
                    ],
                    "AdminStorage": [
                        122
                    ]
                },
                "id": 94,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            "^",
                            "0.7",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "35:23:0"
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminInterface.sol",
                        "file": "./AdminInterface.sol",
                        "id": 2,
                        "nodeType": "ImportDirective",
                        "scope": 94,
                        "sourceUnit": 117,
                        "src": "60:30:0",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": true,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 4,
                                    "name": "AdminInterface",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 116,
                                    "src": "786:14:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AdminInterface_$116",
                                        "typeString": "contract AdminInterface"
                                    }
                                },
                                "id": 5,
                                "nodeType": "InheritanceSpecifier",
                                "src": "786:14:0"
                            }
                        ],
                        "contractDependencies": [
                            116,
                            122
                        ],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 3,
                            "nodeType": "StructuredDocumentation",
                            "src": "92:666:0",
                            "text": " @title Admin\n @author Paul Razvan Berg\n @notice Contract module which provides a basic access control mechanism, where there is\n an account (an admin) that can be granted exclusive access to specific functions.\n By default, the admin account will be the one that deploys the contract. This can later\n be changed with {transferAdmin}.\n This module is used through inheritance. It will make available the modifier `onlyAdmin`,\n which can be applied to your functions to restrict their use to the admin.\n @dev Forked from OpenZeppelin\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.1.0/contracts/access/Ownable.sol"
                        },
                        "fullyImplemented": true,
                        "id": 93,
                        "linearizedBaseContracts": [
                            93,
                            116,
                            122
                        ],
                        "name": "Admin",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "body": {
                                    "id": 17,
                                    "nodeType": "Block",
                                    "src": "913:73:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 12,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 9,
                                                            "name": "admin",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 121,
                                                            "src": "931:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "expression": {
                                                                "id": 10,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -15,
                                                                "src": "940:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 11,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "940:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "931:19:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4552525f4e4f545f41444d494e",
                                                        "id": 13,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "952:15:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_8ceaadd113c63af0202decb34b435d950851670b84771f9a118ed497625aed9a",
                                                            "typeString": "literal_string \"ERR_NOT_ADMIN\""
                                                        },
                                                        "value": "ERR_NOT_ADMIN"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_8ceaadd113c63af0202decb34b435d950851670b84771f9a118ed497625aed9a",
                                                            "typeString": "literal_string \"ERR_NOT_ADMIN\""
                                                        }
                                                    ],
                                                    "id": 8,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "923:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 14,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "923:45:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 15,
                                            "nodeType": "ExpressionStatement",
                                            "src": "923:45:0"
                                        },
                                        {
                                            "id": 16,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "978:1:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 6,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "807:80:0",
                                    "text": " @notice Throws if called by any account other than the admin."
                                },
                                "id": 18,
                                "name": "onlyAdmin",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 7,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "910:2:0"
                                },
                                "src": "892:94:0",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 39,
                                    "nodeType": "Block",
                                    "src": "1105:128:0",
                                    "statements": [
                                        {
                                            "assignments": [
                                                23
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 23,
                                                    "mutability": "mutable",
                                                    "name": "msgSender",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 39,
                                                    "src": "1115:17:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "typeName": {
                                                        "id": 22,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1115:7:0",
                                                        "stateMutability": "nonpayable",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 26,
                                            "initialValue": {
                                                "expression": {
                                                    "id": 24,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "1135:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 25,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1135:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "1115:30:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 29,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 27,
                                                    "name": "admin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 121,
                                                    "src": "1155:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 28,
                                                    "name": "msgSender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 23,
                                                    "src": "1163:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1155:17:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 30,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1155:17:0"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "hexValue": "30783030",
                                                                "id": 34,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "1209:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0x00"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                }
                                                            ],
                                                            "id": 33,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1201:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 32,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "1201:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 35,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1201:13:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    {
                                                        "id": 36,
                                                        "name": "msgSender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 23,
                                                        "src": "1216:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 31,
                                                    "name": "TransferAdmin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 115,
                                                    "src": "1187:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address)"
                                                    }
                                                },
                                                "id": 37,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1187:39:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 38,
                                            "nodeType": "EmitStatement",
                                            "src": "1182:44:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 19,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "992:94:0",
                                    "text": " @notice Initializes the contract setting the deployer as the initial admin."
                                },
                                "id": 40,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 20,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1102:2:0"
                                },
                                "returnParameters": {
                                    "id": 21,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1105:0:0"
                                },
                                "scope": 93,
                                "src": "1091:142:0",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "baseFunctions": [
                                    103
                                ],
                                "body": {
                                    "id": 62,
                                    "nodeType": "Block",
                                    "src": "1677:88:0",
                                    "statements": [
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 48,
                                                        "name": "admin",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 121,
                                                        "src": "1706:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "hexValue": "30783030",
                                                                "id": 51,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "1721:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0x00"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                }
                                                            ],
                                                            "id": 50,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1713:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 49,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "1713:7:0",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 52,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1713:13:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "id": 47,
                                                    "name": "TransferAdmin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 115,
                                                    "src": "1692:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address)"
                                                    }
                                                },
                                                "id": 53,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1692:35:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 54,
                                            "nodeType": "EmitStatement",
                                            "src": "1687:40:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 60,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 55,
                                                    "name": "admin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 121,
                                                    "src": "1737:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30783030",
                                                            "id": 58,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1753:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0x00"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 57,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1745:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 56,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1745:7:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 59,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1745:13:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "1737:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 61,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1737:21:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 41,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1239:371:0",
                                    "text": " @notice Leaves the contract without admin, so it will not be possible to call\n `onlyAdmin` functions anymore.\n Requirements:\n - The caller must be the administrator.\n WARNING: Doing this will leave the contract without an admin,\n thereby removing any functionality that is only available to the admin."
                                },
                                "functionSelector": "bfa25308",
                                "id": 63,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 45,
                                        "modifierName": {
                                            "id": 44,
                                            "name": "onlyAdmin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 18,
                                            "src": "1667:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1667:9:0"
                                    }
                                ],
                                "name": "_renounceAdmin",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 43,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "1658:8:0"
                                },
                                "parameters": {
                                    "id": 42,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1638:2:0"
                                },
                                "returnParameters": {
                                    "id": 46,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1677:0:0"
                                },
                                "scope": 93,
                                "src": "1615:150:0",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    108
                                ],
                                "body": {
                                    "id": 91,
                                    "nodeType": "Block",
                                    "src": "2047:152:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 78,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 73,
                                                            "name": "newAdmin",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 66,
                                                            "src": "2065:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "!=",
                                                        "rightExpression": {
                                                            "arguments": [
                                                                {
                                                                    "hexValue": "30783030",
                                                                    "id": 76,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "2085:4:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    },
                                                                    "value": "0x00"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_rational_0_by_1",
                                                                        "typeString": "int_const 0"
                                                                    }
                                                                ],
                                                                "id": 75,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "2077:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 74,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "2077:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 77,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "2077:13:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "src": "2065:25:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4552525f5345545f41444d494e5f5a45524f5f41444452455353",
                                                        "id": 79,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2092:28:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_a1eccbc5fd259c278113a6a84afc9ca47a04c0444b7ecf194b8be643b4c054ae",
                                                            "typeString": "literal_string \"ERR_SET_ADMIN_ZERO_ADDRESS\""
                                                        },
                                                        "value": "ERR_SET_ADMIN_ZERO_ADDRESS"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_a1eccbc5fd259c278113a6a84afc9ca47a04c0444b7ecf194b8be643b4c054ae",
                                                            "typeString": "literal_string \"ERR_SET_ADMIN_ZERO_ADDRESS\""
                                                        }
                                                    ],
                                                    "id": 72,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "2057:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 80,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2057:64:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 81,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2057:64:0"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 83,
                                                        "name": "admin",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 121,
                                                        "src": "2150:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 84,
                                                        "name": "newAdmin",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 66,
                                                        "src": "2157:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 82,
                                                    "name": "TransferAdmin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 115,
                                                    "src": "2136:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                                                        "typeString": "function (address,address)"
                                                    }
                                                },
                                                "id": 85,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2136:30:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 86,
                                            "nodeType": "EmitStatement",
                                            "src": "2131:35:0"
                                        },
                                        {
                                            "expression": {
                                                "id": 89,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 87,
                                                    "name": "admin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 121,
                                                    "src": "2176:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 88,
                                                    "name": "newAdmin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 66,
                                                    "src": "2184:8:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "2176:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 90,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2176:16:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 64,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1771:193:0",
                                    "text": " @notice Transfers the admin of the contract to a new account (`newAdmin`).\n Can only be called by the current admin.\n @param newAdmin The acount of the new admin."
                                },
                                "functionSelector": "e6abb5ae",
                                "id": 92,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 70,
                                        "modifierName": {
                                            "id": 69,
                                            "name": "onlyAdmin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 18,
                                            "src": "2037:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2037:9:0"
                                    }
                                ],
                                "name": "_transferAdmin",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 68,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "2028:8:0"
                                },
                                "parameters": {
                                    "id": 67,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 66,
                                            "mutability": "mutable",
                                            "name": "newAdmin",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 92,
                                            "src": "1993:16:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 65,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1993:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1992:18:0"
                                },
                                "returnParameters": {
                                    "id": 71,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2047:0:0"
                                },
                                "scope": 93,
                                "src": "1969:230:0",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "external"
                            }
                        ],
                        "scope": 94,
                        "src": "759:1442:0"
                    }
                ],
                "src": "35:2167:0"
            },
            "id": 0
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminInterface.sol": {
            "ast": {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminInterface.sol",
                "exportedSymbols": {
                    "AdminInterface": [
                        116
                    ],
                    "AdminStorage": [
                        122
                    ]
                },
                "id": 117,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 95,
                        "literals": [
                            "solidity",
                            "^",
                            "0.7",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "35:23:1"
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminStorage.sol",
                        "file": "./AdminStorage.sol",
                        "id": 96,
                        "nodeType": "ImportDirective",
                        "scope": 117,
                        "sourceUnit": 123,
                        "src": "60:28:1",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": true,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 98,
                                    "name": "AdminStorage",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 122,
                                    "src": "187:12:1",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AdminStorage_$122",
                                        "typeString": "contract AdminStorage"
                                    }
                                },
                                "id": 99,
                                "nodeType": "InheritanceSpecifier",
                                "src": "187:12:1"
                            }
                        ],
                        "contractDependencies": [
                            122
                        ],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 97,
                            "nodeType": "StructuredDocumentation",
                            "src": "90:60:1",
                            "text": " @title AdminInterface\n @author Paul Razvan Berg"
                        },
                        "fullyImplemented": false,
                        "id": 116,
                        "linearizedBaseContracts": [
                            116,
                            122
                        ],
                        "name": "AdminInterface",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "documentation": {
                                    "id": 100,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "206:41:1",
                                    "text": " NON-CONSTANT FUNCTIONS"
                                },
                                "functionSelector": "bfa25308",
                                "id": 103,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_renounceAdmin",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 101,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "275:2:1"
                                },
                                "returnParameters": {
                                    "id": 102,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "294:0:1"
                                },
                                "scope": 116,
                                "src": "252:43:1",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "e6abb5ae",
                                "id": 108,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_transferAdmin",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 106,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 105,
                                            "mutability": "mutable",
                                            "name": "newAdmin",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 108,
                                            "src": "325:16:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 104,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "325:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "324:18:1"
                                },
                                "returnParameters": {
                                    "id": 107,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "359:0:1"
                                },
                                "scope": 116,
                                "src": "301:59:1",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "external"
                            },
                            {
                                "anonymous": false,
                                "documentation": {
                                    "id": 109,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "366:25:1",
                                    "text": " EVENTS"
                                },
                                "id": 115,
                                "name": "TransferAdmin",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 114,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 111,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "oldAdmin",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 115,
                                            "src": "416:24:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 110,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "416:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 113,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "newAdmin",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 115,
                                            "src": "442:24:1",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 112,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "442:7:1",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "415:52:1"
                                },
                                "src": "396:72:1"
                            }
                        ],
                        "scope": 117,
                        "src": "151:319:1"
                    }
                ],
                "src": "35:436:1"
            },
            "id": 1
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminStorage.sol": {
            "ast": {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/AdminStorage.sol",
                "exportedSymbols": {
                    "AdminStorage": [
                        122
                    ]
                },
                "id": 123,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 118,
                        "literals": [
                            "solidity",
                            "^",
                            "0.7",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "35:23:2"
                    },
                    {
                        "abstract": true,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 122,
                        "linearizedBaseContracts": [
                            122
                        ],
                        "name": "AdminStorage",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "documentation": {
                                    "id": 119,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "97:80:2",
                                    "text": " @notice The address of the administrator account or contract."
                                },
                                "functionSelector": "f851a440",
                                "id": 121,
                                "mutability": "mutable",
                                "name": "admin",
                                "nodeType": "VariableDeclaration",
                                "scope": 122,
                                "src": "182:20:2",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 120,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "182:7:2",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "public"
                            }
                        ],
                        "scope": 123,
                        "src": "60:145:2"
                    }
                ],
                "src": "35:171:2"
            },
            "id": 2
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/test/GodModeErc20Recover.sol": {
            "ast": {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/test/GodModeErc20Recover.sol",
                "exportedSymbols": {
                    "Address": [
                        644
                    ],
                    "Admin": [
                        93
                    ],
                    "AdminInterface": [
                        116
                    ],
                    "AdminStorage": [
                        122
                    ],
                    "Erc20Interface": [
                        230
                    ],
                    "Erc20Recover": [
                        400
                    ],
                    "Erc20RecoverInterface": [
                        437
                    ],
                    "Erc20RecoverStorage": [
                        448
                    ],
                    "Erc20Storage": [
                        474
                    ],
                    "GodModeErc20Recover": [
                        147
                    ],
                    "SafeErc20": [
                        614
                    ]
                },
                "id": 148,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 124,
                        "literals": [
                            "solidity",
                            "^",
                            "0.7",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "77:23:3"
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Recover.sol",
                        "file": "../token/erc20/Erc20Recover.sol",
                        "id": 125,
                        "nodeType": "ImportDirective",
                        "scope": 148,
                        "sourceUnit": 401,
                        "src": "102:41:3",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 127,
                                    "name": "Erc20Recover",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 400,
                                    "src": "305:12:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Erc20Recover_$400",
                                        "typeString": "contract Erc20Recover"
                                    }
                                },
                                "id": 128,
                                "nodeType": "InheritanceSpecifier",
                                "src": "305:12:3"
                            }
                        ],
                        "contractDependencies": [
                            93,
                            116,
                            122,
                            400,
                            437,
                            448
                        ],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 126,
                            "nodeType": "StructuredDocumentation",
                            "src": "145:127:3",
                            "text": " @title GodModeErc20Recover\n @author Paul Razvan Berg\n @dev Strictly for test purposes. Do not use in production."
                        },
                        "fullyImplemented": true,
                        "id": 147,
                        "linearizedBaseContracts": [
                            147,
                            400,
                            93,
                            116,
                            122,
                            437,
                            448
                        ],
                        "name": "GodModeErc20Recover",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "body": {
                                    "id": 135,
                                    "nodeType": "Block",
                                    "src": "398:44:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 133,
                                                "name": "isRecoverInitialized",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 447,
                                                "src": "415:20:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 132,
                                            "id": 134,
                                            "nodeType": "Return",
                                            "src": "408:27:3"
                                        }
                                    ]
                                },
                                "functionSelector": "cbacc961",
                                "id": 136,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "__godMode_getIsRecoverInitialized",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 129,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "366:2:3"
                                },
                                "returnParameters": {
                                    "id": 132,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 131,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 136,
                                            "src": "392:4:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 130,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "392:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "391:6:3"
                                },
                                "scope": 147,
                                "src": "324:118:3",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "body": {
                                    "id": 145,
                                    "nodeType": "Block",
                                    "src": "512:45:3",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 143,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 141,
                                                    "name": "isRecoverInitialized",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 447,
                                                    "src": "522:20:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "id": 142,
                                                    "name": "state",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 138,
                                                    "src": "545:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "522:28:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 144,
                                            "nodeType": "ExpressionStatement",
                                            "src": "522:28:3"
                                        }
                                    ]
                                },
                                "functionSelector": "08b038a9",
                                "id": 146,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "__godMode_setIsRecoverInitialized",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 139,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 138,
                                            "mutability": "mutable",
                                            "name": "state",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 146,
                                            "src": "491:10:3",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 137,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "491:4:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "490:12:3"
                                },
                                "returnParameters": {
                                    "id": 140,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "512:0:3"
                                },
                                "scope": 147,
                                "src": "448:109:3",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 148,
                        "src": "273:286:3"
                    }
                ],
                "src": "77:483:3"
            },
            "id": 3
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol": {
            "ast": {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol",
                "exportedSymbols": {
                    "Erc20Interface": [
                        230
                    ],
                    "Erc20Storage": [
                        474
                    ]
                },
                "id": 231,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 149,
                        "literals": [
                            "solidity",
                            "^",
                            "0.7",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "35:23:4"
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol",
                        "file": "./Erc20Storage.sol",
                        "id": 150,
                        "nodeType": "ImportDirective",
                        "scope": 231,
                        "sourceUnit": 475,
                        "src": "60:28:4",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": true,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 152,
                                    "name": "Erc20Storage",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 474,
                                    "src": "366:12:4",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Erc20Storage_$474",
                                        "typeString": "contract Erc20Storage"
                                    }
                                },
                                "id": 153,
                                "nodeType": "InheritanceSpecifier",
                                "src": "366:12:4"
                            }
                        ],
                        "contractDependencies": [
                            474
                        ],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 151,
                            "nodeType": "StructuredDocumentation",
                            "src": "90:239:4",
                            "text": " @title Erc20Interface\n @author Paul Razvan Berg\n @notice Interface of the Erc20 standard\n @dev Forked from OpenZeppelin\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.2.0/contracts/token/ERC20/IERC20.sol"
                        },
                        "fullyImplemented": false,
                        "id": 230,
                        "linearizedBaseContracts": [
                            230,
                            474
                        ],
                        "name": "Erc20Interface",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "documentation": {
                                    "id": 154,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "385:37:4",
                                    "text": " CONSTANT FUNCTIONS"
                                },
                                "functionSelector": "dd62ed3e",
                                "id": 163,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "allowance",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 159,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 156,
                                            "mutability": "mutable",
                                            "name": "owner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 163,
                                            "src": "446:13:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 155,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "446:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 158,
                                            "mutability": "mutable",
                                            "name": "spender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 163,
                                            "src": "461:15:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 157,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "461:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "445:32:4"
                                },
                                "returnParameters": {
                                    "id": 162,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 161,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 163,
                                            "src": "509:7:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 160,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "509:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "508:9:4"
                                },
                                "scope": 230,
                                "src": "427:91:4",
                                "stateMutability": "view",
                                "virtual": true,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "70a08231",
                                "id": 170,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "balanceOf",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 166,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 165,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 170,
                                            "src": "543:15:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 164,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "543:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "542:17:4"
                                },
                                "returnParameters": {
                                    "id": 169,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 168,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 170,
                                            "src": "591:7:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 167,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "591:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "590:9:4"
                                },
                                "scope": 230,
                                "src": "524:76:4",
                                "stateMutability": "view",
                                "virtual": true,
                                "visibility": "external"
                            },
                            {
                                "documentation": {
                                    "id": 171,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "606:41:4",
                                    "text": " NON-CONSTANT FUNCTIONS"
                                },
                                "functionSelector": "095ea7b3",
                                "id": 180,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "approve",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 176,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 173,
                                            "mutability": "mutable",
                                            "name": "spender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 180,
                                            "src": "669:15:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 172,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "669:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 175,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 180,
                                            "src": "686:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 174,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "686:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "668:33:4"
                                },
                                "returnParameters": {
                                    "id": 179,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 178,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 180,
                                            "src": "728:4:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 177,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "728:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "727:6:4"
                                },
                                "scope": 230,
                                "src": "652:82:4",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "a9059cbb",
                                "id": 189,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transfer",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 185,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 182,
                                            "mutability": "mutable",
                                            "name": "recipient",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 189,
                                            "src": "758:17:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 181,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "758:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 184,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 189,
                                            "src": "777:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 183,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "777:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "757:35:4"
                                },
                                "returnParameters": {
                                    "id": 188,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 187,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 189,
                                            "src": "819:4:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 186,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "819:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "818:6:4"
                                },
                                "scope": 230,
                                "src": "740:85:4",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "23b872dd",
                                "id": 200,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "transferFrom",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 196,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 191,
                                            "mutability": "mutable",
                                            "name": "sender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 200,
                                            "src": "862:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 190,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "862:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 193,
                                            "mutability": "mutable",
                                            "name": "recipient",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 200,
                                            "src": "886:17:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 192,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "886:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 195,
                                            "mutability": "mutable",
                                            "name": "amount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 200,
                                            "src": "913:14:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 194,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "913:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "852:81:4"
                                },
                                "returnParameters": {
                                    "id": 199,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 198,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 200,
                                            "src": "960:4:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 197,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "960:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "959:6:4"
                                },
                                "scope": 230,
                                "src": "831:135:4",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "external"
                            },
                            {
                                "anonymous": false,
                                "documentation": {
                                    "id": 201,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "972:25:4",
                                    "text": " EVENTS"
                                },
                                "id": 209,
                                "name": "Approval",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 208,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 203,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "owner",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 209,
                                            "src": "1017:21:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 202,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1017:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 205,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "spender",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 209,
                                            "src": "1040:23:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 204,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1040:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 207,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 209,
                                            "src": "1065:13:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 206,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1065:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1016:63:4"
                                },
                                "src": "1002:78:4"
                            },
                            {
                                "anonymous": false,
                                "id": 215,
                                "name": "Burn",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 214,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 211,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 215,
                                            "src": "1097:23:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 210,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1097:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 213,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "burnAmount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 215,
                                            "src": "1122:18:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 212,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1122:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1096:45:4"
                                },
                                "src": "1086:56:4"
                            },
                            {
                                "anonymous": false,
                                "id": 221,
                                "name": "Mint",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 220,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 217,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 221,
                                            "src": "1159:23:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 216,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1159:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 219,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "mintAmount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 221,
                                            "src": "1184:18:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 218,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1184:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1158:45:4"
                                },
                                "src": "1148:56:4"
                            },
                            {
                                "anonymous": false,
                                "id": 229,
                                "name": "Transfer",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 228,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 223,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "from",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 229,
                                            "src": "1225:20:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 222,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1225:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 225,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 229,
                                            "src": "1247:18:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 224,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1247:7:4",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 227,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 229,
                                            "src": "1267:13:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 226,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1267:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1224:57:4"
                                },
                                "src": "1210:72:4"
                            }
                        ],
                        "scope": 231,
                        "src": "330:954:4"
                    }
                ],
                "src": "35:1250:4"
            },
            "id": 4
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Recover.sol": {
            "ast": {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Recover.sol",
                "exportedSymbols": {
                    "Address": [
                        644
                    ],
                    "Admin": [
                        93
                    ],
                    "AdminInterface": [
                        116
                    ],
                    "AdminStorage": [
                        122
                    ],
                    "Erc20Interface": [
                        230
                    ],
                    "Erc20Recover": [
                        400
                    ],
                    "Erc20RecoverInterface": [
                        437
                    ],
                    "Erc20RecoverStorage": [
                        448
                    ],
                    "Erc20Storage": [
                        474
                    ],
                    "SafeErc20": [
                        614
                    ]
                },
                "id": 401,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 232,
                        "literals": [
                            "solidity",
                            "^",
                            "0.7",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "35:23:5"
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/access/Admin.sol",
                        "file": "../../access/Admin.sol",
                        "id": 233,
                        "nodeType": "ImportDirective",
                        "scope": 401,
                        "sourceUnit": 94,
                        "src": "60:32:5",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol",
                        "file": "./Erc20Interface.sol",
                        "id": 234,
                        "nodeType": "ImportDirective",
                        "scope": 401,
                        "sourceUnit": 231,
                        "src": "93:30:5",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverInterface.sol",
                        "file": "./Erc20RecoverInterface.sol",
                        "id": 235,
                        "nodeType": "ImportDirective",
                        "scope": 401,
                        "sourceUnit": 438,
                        "src": "124:37:5",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/SafeErc20.sol",
                        "file": "./SafeErc20.sol",
                        "id": 236,
                        "nodeType": "ImportDirective",
                        "scope": 401,
                        "sourceUnit": 615,
                        "src": "162:25:5",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": true,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 238,
                                    "name": "Erc20RecoverInterface",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 437,
                                    "src": "423:21:5",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Erc20RecoverInterface_$437",
                                        "typeString": "contract Erc20RecoverInterface"
                                    }
                                },
                                "id": 239,
                                "nodeType": "InheritanceSpecifier",
                                "src": "423:21:5"
                            },
                            {
                                "baseName": {
                                    "id": 240,
                                    "name": "Admin",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 93,
                                    "src": "471:5:5",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Admin_$93",
                                        "typeString": "contract Admin"
                                    }
                                },
                                "id": 241,
                                "nodeType": "InheritanceSpecifier",
                                "src": "471:5:5"
                            }
                        ],
                        "contractDependencies": [
                            93,
                            116,
                            122,
                            437,
                            448
                        ],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 237,
                            "nodeType": "StructuredDocumentation",
                            "src": "189:195:5",
                            "text": " @title Erc20Recover\n @author Paul Razvan Berg\n @notice Gives the administrator the ability to recover the Erc20 tokens that\n had been sent (accidentally, or not) to the contract."
                        },
                        "fullyImplemented": true,
                        "id": 400,
                        "linearizedBaseContracts": [
                            400,
                            93,
                            116,
                            122,
                            437,
                            448
                        ],
                        "name": "Erc20Recover",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "id": 244,
                                "libraryName": {
                                    "id": 242,
                                    "name": "SafeErc20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 614,
                                    "src": "512:9:5",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeErc20_$614",
                                        "typeString": "library SafeErc20"
                                    }
                                },
                                "nodeType": "UsingForDirective",
                                "src": "506:35:5",
                                "typeName": {
                                    "id": 243,
                                    "name": "Erc20Interface",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 230,
                                    "src": "526:14:5",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                        "typeString": "contract Erc20Interface"
                                    }
                                }
                            },
                            {
                                "baseFunctions": [
                                    420
                                ],
                                "body": {
                                    "id": 302,
                                    "nodeType": "Block",
                                    "src": "1041:529:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 257,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 255,
                                                            "name": "isRecoverInitialized",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 447,
                                                            "src": "1080:20:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "66616c7365",
                                                            "id": 256,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1104:5:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "false"
                                                        },
                                                        "src": "1080:29:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4552525f494e4954414c495a4544",
                                                        "id": 258,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1111:16:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_597664ba809e186c455271e1dbb0513037c56f289886545361bf4dc6f8eb0d55",
                                                            "typeString": "literal_string \"ERR_INITALIZED\""
                                                        },
                                                        "value": "ERR_INITALIZED"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_597664ba809e186c455271e1dbb0513037c56f289886545361bf4dc6f8eb0d55",
                                                            "typeString": "literal_string \"ERR_INITALIZED\""
                                                        }
                                                    ],
                                                    "id": 254,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "1072:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 259,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1072:56:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 260,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1072:56:5"
                                        },
                                        {
                                            "assignments": [
                                                262
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 262,
                                                    "mutability": "mutable",
                                                    "name": "length",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 302,
                                                    "src": "1224:14:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 261,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1224:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 265,
                                            "initialValue": {
                                                "expression": {
                                                    "id": 263,
                                                    "name": "tokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 248,
                                                    "src": "1241:6:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_calldata_ptr",
                                                        "typeString": "contract Erc20Interface[] calldata"
                                                    }
                                                },
                                                "id": 264,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "length",
                                                "nodeType": "MemberAccess",
                                                "src": "1241:13:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "1224:30:5"
                                        },
                                        {
                                            "body": {
                                                "id": 291,
                                                "nodeType": "Block",
                                                "src": "1304:93:5",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "expression": {
                                                                    "baseExpression": {
                                                                        "id": 277,
                                                                        "name": "tokens",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 248,
                                                                        "src": "1318:6:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_calldata_ptr",
                                                                            "typeString": "contract Erc20Interface[] calldata"
                                                                        }
                                                                    },
                                                                    "id": 279,
                                                                    "indexExpression": {
                                                                        "id": 278,
                                                                        "name": "i",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 267,
                                                                        "src": "1325:1:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "1318:9:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                        "typeString": "contract Erc20Interface"
                                                                    }
                                                                },
                                                                "id": 280,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "symbol",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 460,
                                                                "src": "1318:16:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                                    "typeString": "function () view external returns (string memory)"
                                                                }
                                                            },
                                                            "id": 281,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1318:18:5",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_string_memory_ptr",
                                                                "typeString": "string memory"
                                                            }
                                                        },
                                                        "id": 282,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "1318:18:5"
                                                    },
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "baseExpression": {
                                                                        "id": 286,
                                                                        "name": "tokens",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 248,
                                                                        "src": "1376:6:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_calldata_ptr",
                                                                            "typeString": "contract Erc20Interface[] calldata"
                                                                        }
                                                                    },
                                                                    "id": 288,
                                                                    "indexExpression": {
                                                                        "id": 287,
                                                                        "name": "i",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 267,
                                                                        "src": "1383:1:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "1376:9:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                        "typeString": "contract Erc20Interface"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                        "typeString": "contract Erc20Interface"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 283,
                                                                    "name": "nonRecoverableTokens",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 444,
                                                                    "src": "1350:20:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_storage",
                                                                        "typeString": "contract Erc20Interface[] storage ref"
                                                                    }
                                                                },
                                                                "id": 285,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "push",
                                                                "nodeType": "MemberAccess",
                                                                "src": "1350:25:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Erc20Interface_$230_$returns$__$",
                                                                    "typeString": "function (contract Erc20Interface)"
                                                                }
                                                            },
                                                            "id": 289,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1350:36:5",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 290,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "1350:36:5"
                                                    }
                                                ]
                                            },
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 272,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 270,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 267,
                                                    "src": "1284:1:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "id": 271,
                                                    "name": "length",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 262,
                                                    "src": "1288:6:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "1284:10:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 292,
                                            "initializationExpression": {
                                                "assignments": [
                                                    267
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 267,
                                                        "mutability": "mutable",
                                                        "name": "i",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 292,
                                                        "src": "1269:9:5",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 266,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1269:7:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 269,
                                                "initialValue": {
                                                    "hexValue": "30",
                                                    "id": 268,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1281:1:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "1269:13:5"
                                            },
                                            "loopExpression": {
                                                "expression": {
                                                    "id": 275,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 273,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 267,
                                                        "src": "1296:1:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "+=",
                                                    "rightHandSide": {
                                                        "hexValue": "31",
                                                        "id": 274,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1301:1:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1_by_1",
                                                            "typeString": "int_const 1"
                                                        },
                                                        "value": "1"
                                                    },
                                                    "src": "1296:6:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 276,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1296:6:5"
                                            },
                                            "nodeType": "ForStatement",
                                            "src": "1264:133:5"
                                        },
                                        {
                                            "expression": {
                                                "id": 295,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 293,
                                                    "name": "isRecoverInitialized",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 447,
                                                    "src": "1482:20:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "hexValue": "74727565",
                                                    "id": 294,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1505:4:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "1482:27:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 296,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1482:27:5"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 298,
                                                        "name": "admin",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 121,
                                                        "src": "1549:5:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 299,
                                                        "name": "tokens",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 248,
                                                        "src": "1556:6:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_calldata_ptr",
                                                            "typeString": "contract Erc20Interface[] calldata"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_calldata_ptr",
                                                            "typeString": "contract Erc20Interface[] calldata"
                                                        }
                                                    ],
                                                    "id": 297,
                                                    "name": "SetNonRecoverableTokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 436,
                                                    "src": "1525:23:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_contract$_Erc20Interface_$230_$dyn_memory_ptr_$returns$__$",
                                                        "typeString": "function (address,contract Erc20Interface[] memory)"
                                                    }
                                                },
                                                "id": 300,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1525:38:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 301,
                                            "nodeType": "EmitStatement",
                                            "src": "1520:43:5"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 245,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "547:393:5",
                                    "text": " @notice Sets the tokens that this contract cannot recover.\n @dev Emits a {SetNonRecoverableTokens} event.\n Requirements:\n - The caller must be the administrator.\n - The contract must be non-initialized.\n - The array of given tokens cannot be empty.\n @param tokens The array of tokens to set as non-recoverable."
                                },
                                "functionSelector": "dde4bec0",
                                "id": 303,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 252,
                                        "modifierName": {
                                            "id": 251,
                                            "name": "onlyAdmin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 18,
                                            "src": "1031:9:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1031:9:5"
                                    }
                                ],
                                "name": "_setNonRecoverableTokens",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 250,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "1022:8:5"
                                },
                                "parameters": {
                                    "id": 249,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 248,
                                            "mutability": "mutable",
                                            "name": "tokens",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 303,
                                            "src": "979:32:5",
                                            "stateVariable": false,
                                            "storageLocation": "calldata",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_calldata_ptr",
                                                "typeString": "contract Erc20Interface[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 246,
                                                    "name": "Erc20Interface",
                                                    "nodeType": "UserDefinedTypeName",
                                                    "referencedDeclaration": 230,
                                                    "src": "979:14:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                        "typeString": "contract Erc20Interface"
                                                    }
                                                },
                                                "id": 247,
                                                "nodeType": "ArrayTypeName",
                                                "src": "979:16:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_storage_ptr",
                                                    "typeString": "contract Erc20Interface[]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "978:34:5"
                                },
                                "returnParameters": {
                                    "id": 253,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1041:0:5"
                                },
                                "scope": 400,
                                "src": "945:625:5",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            },
                            {
                                "baseFunctions": [
                                    414
                                ],
                                "body": {
                                    "id": 398,
                                    "nodeType": "Block",
                                    "src": "2219:1105:5",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 317,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 315,
                                                            "name": "isRecoverInitialized",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 447,
                                                            "src": "2258:20:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "hexValue": "74727565",
                                                            "id": 316,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2282:4:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        "src": "2258:28:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4552525f4e4f545f494e4954414c495a4544",
                                                        "id": 318,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2288:20:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_175c2f457fd7e37fe7f6919fd530c19a8b4b0551a75ca9f3ad6c1572f87d001c",
                                                            "typeString": "literal_string \"ERR_NOT_INITALIZED\""
                                                        },
                                                        "value": "ERR_NOT_INITALIZED"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_175c2f457fd7e37fe7f6919fd530c19a8b4b0551a75ca9f3ad6c1572f87d001c",
                                                            "typeString": "literal_string \"ERR_NOT_INITALIZED\""
                                                        }
                                                    ],
                                                    "id": 314,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "2250:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 319,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2250:59:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 320,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2250:59:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 324,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "id": 322,
                                                            "name": "recoverAmount",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 308,
                                                            "src": "2327:13:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">",
                                                        "rightExpression": {
                                                            "hexValue": "30",
                                                            "id": 323,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2343:1:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        },
                                                        "src": "2327:17:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4552525f5245434f5645525f5a45524f",
                                                        "id": 325,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2346:18:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_0882e5ee0745f1a0a88bfbadbfee0a1469432c254d302187cf3b757452461e1f",
                                                            "typeString": "literal_string \"ERR_RECOVER_ZERO\""
                                                        },
                                                        "value": "ERR_RECOVER_ZERO"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_0882e5ee0745f1a0a88bfbadbfee0a1469432c254d302187cf3b757452461e1f",
                                                            "typeString": "literal_string \"ERR_RECOVER_ZERO\""
                                                        }
                                                    ],
                                                    "id": 321,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "2319:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 326,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2319:46:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 327,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2319:46:5"
                                        },
                                        {
                                            "assignments": [
                                                329
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 329,
                                                    "mutability": "mutable",
                                                    "name": "tokenSymbolHash",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 398,
                                                    "src": "2376:23:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    },
                                                    "typeName": {
                                                        "id": 328,
                                                        "name": "bytes32",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2376:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 338,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "arguments": [],
                                                                "expression": {
                                                                    "argumentTypes": [],
                                                                    "expression": {
                                                                        "id": 333,
                                                                        "name": "token",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 306,
                                                                        "src": "2418:5:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                            "typeString": "contract Erc20Interface"
                                                                        }
                                                                    },
                                                                    "id": 334,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "symbol",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 460,
                                                                    "src": "2418:12:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                                        "typeString": "function () view external returns (string memory)"
                                                                    }
                                                                },
                                                                "id": 335,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "2418:14:5",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                }
                                                            ],
                                                            "id": 332,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "2412:5:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                                                "typeString": "type(bytes storage pointer)"
                                                            },
                                                            "typeName": {
                                                                "id": 331,
                                                                "name": "bytes",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "2412:5:5",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 336,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2412:21:5",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "id": 330,
                                                    "name": "keccak256",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -8,
                                                    "src": "2402:9:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 337,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2402:32:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "2376:58:5"
                                        },
                                        {
                                            "assignments": [
                                                340
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 340,
                                                    "mutability": "mutable",
                                                    "name": "length",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 398,
                                                    "src": "2444:14:5",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "typeName": {
                                                        "id": 339,
                                                        "name": "uint256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2444:7:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 343,
                                            "initialValue": {
                                                "expression": {
                                                    "id": 341,
                                                    "name": "nonRecoverableTokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 444,
                                                    "src": "2461:20:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_storage",
                                                        "typeString": "contract Erc20Interface[] storage ref"
                                                    }
                                                },
                                                "id": 342,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "length",
                                                "nodeType": "MemberAccess",
                                                "src": "2461:27:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "2444:44:5"
                                        },
                                        {
                                            "body": {
                                                "id": 383,
                                                "nodeType": "Block",
                                                "src": "2928:260:5",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    "id": 379,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        },
                                                                        "id": 366,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "arguments": [
                                                                                {
                                                                                    "id": 358,
                                                                                    "name": "token",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 306,
                                                                                    "src": "2975:5:5",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                                        "typeString": "contract Erc20Interface"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                                        "typeString": "contract Erc20Interface"
                                                                                    }
                                                                                ],
                                                                                "id": 357,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                                "src": "2967:7:5",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                                    "typeString": "type(address)"
                                                                                },
                                                                                "typeName": {
                                                                                    "id": 356,
                                                                                    "name": "address",
                                                                                    "nodeType": "ElementaryTypeName",
                                                                                    "src": "2967:7:5",
                                                                                    "typeDescriptions": {}
                                                                                }
                                                                            },
                                                                            "id": 359,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "typeConversion",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "2967:14:5",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "!=",
                                                                        "rightExpression": {
                                                                            "arguments": [
                                                                                {
                                                                                    "baseExpression": {
                                                                                        "id": 362,
                                                                                        "name": "nonRecoverableTokens",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 444,
                                                                                        "src": "2993:20:5",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_storage",
                                                                                            "typeString": "contract Erc20Interface[] storage ref"
                                                                                        }
                                                                                    },
                                                                                    "id": 364,
                                                                                    "indexExpression": {
                                                                                        "id": 363,
                                                                                        "name": "i",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 345,
                                                                                        "src": "3014:1:5",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_uint256",
                                                                                            "typeString": "uint256"
                                                                                        }
                                                                                    },
                                                                                    "isConstant": false,
                                                                                    "isLValue": true,
                                                                                    "isPure": false,
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "IndexAccess",
                                                                                    "src": "2993:23:5",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                                        "typeString": "contract Erc20Interface"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                                        "typeString": "contract Erc20Interface"
                                                                                    }
                                                                                ],
                                                                                "id": 361,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "lValueRequested": false,
                                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                                "src": "2985:7:5",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                                    "typeString": "type(address)"
                                                                                },
                                                                                "typeName": {
                                                                                    "id": 360,
                                                                                    "name": "address",
                                                                                    "nodeType": "ElementaryTypeName",
                                                                                    "src": "2985:7:5",
                                                                                    "typeDescriptions": {}
                                                                                }
                                                                            },
                                                                            "id": 365,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "typeConversion",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "2985:32:5",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        },
                                                                        "src": "2967:50:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "&&",
                                                                    "rightExpression": {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_bytes32",
                                                                            "typeString": "bytes32"
                                                                        },
                                                                        "id": 378,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "id": 367,
                                                                            "name": "tokenSymbolHash",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 329,
                                                                            "src": "3041:15:5",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_bytes32",
                                                                                "typeString": "bytes32"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "!=",
                                                                        "rightExpression": {
                                                                            "arguments": [
                                                                                {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [],
                                                                                            "expression": {
                                                                                                "argumentTypes": [],
                                                                                                "expression": {
                                                                                                    "baseExpression": {
                                                                                                        "id": 371,
                                                                                                        "name": "nonRecoverableTokens",
                                                                                                        "nodeType": "Identifier",
                                                                                                        "overloadedDeclarations": [],
                                                                                                        "referencedDeclaration": 444,
                                                                                                        "src": "3076:20:5",
                                                                                                        "typeDescriptions": {
                                                                                                            "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_storage",
                                                                                                            "typeString": "contract Erc20Interface[] storage ref"
                                                                                                        }
                                                                                                    },
                                                                                                    "id": 373,
                                                                                                    "indexExpression": {
                                                                                                        "id": 372,
                                                                                                        "name": "i",
                                                                                                        "nodeType": "Identifier",
                                                                                                        "overloadedDeclarations": [],
                                                                                                        "referencedDeclaration": 345,
                                                                                                        "src": "3097:1:5",
                                                                                                        "typeDescriptions": {
                                                                                                            "typeIdentifier": "t_uint256",
                                                                                                            "typeString": "uint256"
                                                                                                        }
                                                                                                    },
                                                                                                    "isConstant": false,
                                                                                                    "isLValue": true,
                                                                                                    "isPure": false,
                                                                                                    "lValueRequested": false,
                                                                                                    "nodeType": "IndexAccess",
                                                                                                    "src": "3076:23:5",
                                                                                                    "typeDescriptions": {
                                                                                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                                                        "typeString": "contract Erc20Interface"
                                                                                                    }
                                                                                                },
                                                                                                "id": 374,
                                                                                                "isConstant": false,
                                                                                                "isLValue": false,
                                                                                                "isPure": false,
                                                                                                "lValueRequested": false,
                                                                                                "memberName": "symbol",
                                                                                                "nodeType": "MemberAccess",
                                                                                                "referencedDeclaration": 460,
                                                                                                "src": "3076:30:5",
                                                                                                "typeDescriptions": {
                                                                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                                                                    "typeString": "function () view external returns (string memory)"
                                                                                                }
                                                                                            },
                                                                                            "id": 375,
                                                                                            "isConstant": false,
                                                                                            "isLValue": false,
                                                                                            "isPure": false,
                                                                                            "kind": "functionCall",
                                                                                            "lValueRequested": false,
                                                                                            "names": [],
                                                                                            "nodeType": "FunctionCall",
                                                                                            "src": "3076:32:5",
                                                                                            "tryCall": false,
                                                                                            "typeDescriptions": {
                                                                                                "typeIdentifier": "t_string_memory_ptr",
                                                                                                "typeString": "string memory"
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "expression": {
                                                                                        "argumentTypes": [
                                                                                            {
                                                                                                "typeIdentifier": "t_string_memory_ptr",
                                                                                                "typeString": "string memory"
                                                                                            }
                                                                                        ],
                                                                                        "id": 370,
                                                                                        "isConstant": false,
                                                                                        "isLValue": false,
                                                                                        "isPure": true,
                                                                                        "lValueRequested": false,
                                                                                        "nodeType": "ElementaryTypeNameExpression",
                                                                                        "src": "3070:5:5",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                                                                            "typeString": "type(bytes storage pointer)"
                                                                                        },
                                                                                        "typeName": {
                                                                                            "id": 369,
                                                                                            "name": "bytes",
                                                                                            "nodeType": "ElementaryTypeName",
                                                                                            "src": "3070:5:5",
                                                                                            "typeDescriptions": {}
                                                                                        }
                                                                                    },
                                                                                    "id": 376,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "kind": "typeConversion",
                                                                                    "lValueRequested": false,
                                                                                    "names": [],
                                                                                    "nodeType": "FunctionCall",
                                                                                    "src": "3070:39:5",
                                                                                    "tryCall": false,
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                                                        "typeString": "bytes memory"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                                                        "typeString": "bytes memory"
                                                                                    }
                                                                                ],
                                                                                "id": 368,
                                                                                "name": "keccak256",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": -8,
                                                                                "src": "3060:9:5",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                                                }
                                                                            },
                                                                            "id": 377,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "functionCall",
                                                                            "lValueRequested": false,
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "3060:50:5",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_bytes32",
                                                                                "typeString": "bytes32"
                                                                            }
                                                                        },
                                                                        "src": "3041:69:5",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                        }
                                                                    },
                                                                    "src": "2967:143:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "4552525f5245434f5645525f4e4f4e5f5245434f56455241424c455f544f4b454e",
                                                                    "id": 380,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "3128:35:5",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_3ec466e9504fa25c1590832cd8b8bb4943c712ecc00e1d193b83421a87c38323",
                                                                        "typeString": "literal_string \"ERR_RECOVER_NON_RECOVERABLE_TOKEN\""
                                                                    },
                                                                    "value": "ERR_RECOVER_NON_RECOVERABLE_TOKEN"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_3ec466e9504fa25c1590832cd8b8bb4943c712ecc00e1d193b83421a87c38323",
                                                                        "typeString": "literal_string \"ERR_RECOVER_NON_RECOVERABLE_TOKEN\""
                                                                    }
                                                                ],
                                                                "id": 355,
                                                                "name": "require",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    -18,
                                                                    -18
                                                                ],
                                                                "referencedDeclaration": -18,
                                                                "src": "2942:7:5",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (bool,string memory) pure"
                                                                }
                                                            },
                                                            "id": 381,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "2942:235:5",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 382,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2942:235:5"
                                                    }
                                                ]
                                            },
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 350,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 348,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 345,
                                                    "src": "2908:1:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "id": 349,
                                                    "name": "length",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 340,
                                                    "src": "2912:6:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2908:10:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 384,
                                            "initializationExpression": {
                                                "assignments": [
                                                    345
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 345,
                                                        "mutability": "mutable",
                                                        "name": "i",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 384,
                                                        "src": "2893:9:5",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 344,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "2893:7:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 347,
                                                "initialValue": {
                                                    "hexValue": "30",
                                                    "id": 346,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2905:1:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "2893:13:5"
                                            },
                                            "loopExpression": {
                                                "expression": {
                                                    "id": 353,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 351,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 345,
                                                        "src": "2920:1:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "+=",
                                                    "rightHandSide": {
                                                        "hexValue": "31",
                                                        "id": 352,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2925:1:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1_by_1",
                                                            "typeString": "int_const 1"
                                                        },
                                                        "value": "1"
                                                    },
                                                    "src": "2920:6:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 354,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2920:6:5"
                                            },
                                            "nodeType": "ForStatement",
                                            "src": "2888:300:5"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 388,
                                                        "name": "admin",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 121,
                                                        "src": "3244:5:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 389,
                                                        "name": "recoverAmount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 308,
                                                        "src": "3251:13:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 385,
                                                        "name": "token",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 306,
                                                        "src": "3225:5:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                            "typeString": "contract Erc20Interface"
                                                        }
                                                    },
                                                    "id": 387,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "safeTransfer",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 505,
                                                    "src": "3225:18:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Erc20Interface_$230_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_Erc20Interface_$230_$",
                                                        "typeString": "function (contract Erc20Interface,address,uint256)"
                                                    }
                                                },
                                                "id": 390,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3225:40:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 391,
                                            "nodeType": "ExpressionStatement",
                                            "src": "3225:40:5"
                                        },
                                        {
                                            "eventCall": {
                                                "arguments": [
                                                    {
                                                        "id": 393,
                                                        "name": "admin",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 121,
                                                        "src": "3289:5:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 394,
                                                        "name": "token",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 306,
                                                        "src": "3296:5:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                            "typeString": "contract Erc20Interface"
                                                        }
                                                    },
                                                    {
                                                        "id": 395,
                                                        "name": "recoverAmount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 308,
                                                        "src": "3303:13:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                            "typeString": "contract Erc20Interface"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 392,
                                                    "name": "Recover",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 429,
                                                    "src": "3281:7:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Erc20Interface_$230_$_t_uint256_$returns$__$",
                                                        "typeString": "function (address,contract Erc20Interface,uint256)"
                                                    }
                                                },
                                                "id": 396,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3281:36:5",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 397,
                                            "nodeType": "EmitStatement",
                                            "src": "3276:41:5"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 304,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1576:547:5",
                                    "text": " @notice Recover Erc20 tokens sent to this contract (by accident or otherwise).\n @dev Emits a {RecoverToken} event.\n Requirements:\n - The caller must be the administrator.\n - The contract must be initialized.\n - The amount to recover cannot be zero.\n - The token to recover cannot be among the non-recoverable tokens.\n @param token The token to make the recover for.\n @param recoverAmount The uint256 amount to recover, specified in the token's decimal system."
                                },
                                "functionSelector": "1c2872aa",
                                "id": 399,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "id": 312,
                                        "modifierName": {
                                            "id": 311,
                                            "name": "onlyAdmin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 18,
                                            "src": "2209:9:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2209:9:5"
                                    }
                                ],
                                "name": "_recover",
                                "nodeType": "FunctionDefinition",
                                "overrides": {
                                    "id": 310,
                                    "nodeType": "OverrideSpecifier",
                                    "overrides": [],
                                    "src": "2200:8:5"
                                },
                                "parameters": {
                                    "id": 309,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 306,
                                            "mutability": "mutable",
                                            "name": "token",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 399,
                                            "src": "2146:20:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                "typeString": "contract Erc20Interface"
                                            },
                                            "typeName": {
                                                "id": 305,
                                                "name": "Erc20Interface",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 230,
                                                "src": "2146:14:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                    "typeString": "contract Erc20Interface"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 308,
                                            "mutability": "mutable",
                                            "name": "recoverAmount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 399,
                                            "src": "2168:21:5",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 307,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2168:7:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2145:45:5"
                                },
                                "returnParameters": {
                                    "id": 313,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2219:0:5"
                                },
                                "scope": 400,
                                "src": "2128:1196:5",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "external"
                            }
                        ],
                        "scope": 401,
                        "src": "385:2941:5"
                    }
                ],
                "src": "35:3292:5"
            },
            "id": 5
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverInterface.sol": {
            "ast": {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverInterface.sol",
                "exportedSymbols": {
                    "Erc20Interface": [
                        230
                    ],
                    "Erc20RecoverInterface": [
                        437
                    ],
                    "Erc20RecoverStorage": [
                        448
                    ],
                    "Erc20Storage": [
                        474
                    ]
                },
                "id": 438,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 402,
                        "literals": [
                            "solidity",
                            "^",
                            "0.7",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "35:23:6"
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol",
                        "file": "./Erc20Interface.sol",
                        "id": 403,
                        "nodeType": "ImportDirective",
                        "scope": 438,
                        "sourceUnit": 231,
                        "src": "60:30:6",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverStorage.sol",
                        "file": "./Erc20RecoverStorage.sol",
                        "id": 404,
                        "nodeType": "ImportDirective",
                        "scope": 438,
                        "sourceUnit": 449,
                        "src": "91:35:6",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": true,
                        "baseContracts": [
                            {
                                "baseName": {
                                    "id": 405,
                                    "name": "Erc20RecoverStorage",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 448,
                                    "src": "171:19:6",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Erc20RecoverStorage_$448",
                                        "typeString": "contract Erc20RecoverStorage"
                                    }
                                },
                                "id": 406,
                                "nodeType": "InheritanceSpecifier",
                                "src": "171:19:6"
                            }
                        ],
                        "contractDependencies": [
                            448
                        ],
                        "contractKind": "contract",
                        "fullyImplemented": false,
                        "id": 437,
                        "linearizedBaseContracts": [
                            437,
                            448
                        ],
                        "name": "Erc20RecoverInterface",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "documentation": {
                                    "id": 407,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "197:41:6",
                                    "text": " NON-CONSTANT FUNCTIONS"
                                },
                                "functionSelector": "1c2872aa",
                                "id": 414,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_recover",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 412,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 409,
                                            "mutability": "mutable",
                                            "name": "token",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 414,
                                            "src": "261:20:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                "typeString": "contract Erc20Interface"
                                            },
                                            "typeName": {
                                                "id": 408,
                                                "name": "Erc20Interface",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 230,
                                                "src": "261:14:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                    "typeString": "contract Erc20Interface"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 411,
                                            "mutability": "mutable",
                                            "name": "recoverAmount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 414,
                                            "src": "283:21:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 410,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "283:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "260:45:6"
                                },
                                "returnParameters": {
                                    "id": 413,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "322:0:6"
                                },
                                "scope": 437,
                                "src": "243:80:6",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "external"
                            },
                            {
                                "functionSelector": "dde4bec0",
                                "id": 420,
                                "implemented": false,
                                "kind": "function",
                                "modifiers": [],
                                "name": "_setNonRecoverableTokens",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 418,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 417,
                                            "mutability": "mutable",
                                            "name": "tokens",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 420,
                                            "src": "363:32:6",
                                            "stateVariable": false,
                                            "storageLocation": "calldata",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_calldata_ptr",
                                                "typeString": "contract Erc20Interface[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 415,
                                                    "name": "Erc20Interface",
                                                    "nodeType": "UserDefinedTypeName",
                                                    "referencedDeclaration": 230,
                                                    "src": "363:14:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                        "typeString": "contract Erc20Interface"
                                                    }
                                                },
                                                "id": 416,
                                                "nodeType": "ArrayTypeName",
                                                "src": "363:16:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_storage_ptr",
                                                    "typeString": "contract Erc20Interface[]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "362:34:6"
                                },
                                "returnParameters": {
                                    "id": 419,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "413:0:6"
                                },
                                "scope": 437,
                                "src": "329:85:6",
                                "stateMutability": "nonpayable",
                                "virtual": true,
                                "visibility": "external"
                            },
                            {
                                "anonymous": false,
                                "documentation": {
                                    "id": 421,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "420:25:6",
                                    "text": " EVENTS"
                                },
                                "id": 429,
                                "name": "Recover",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 428,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 423,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "admin",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 429,
                                            "src": "464:21:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 422,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "464:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 425,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "token",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 429,
                                            "src": "487:20:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                "typeString": "contract Erc20Interface"
                                            },
                                            "typeName": {
                                                "id": 424,
                                                "name": "Erc20Interface",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 230,
                                                "src": "487:14:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                    "typeString": "contract Erc20Interface"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 427,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "recoverAmount",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 429,
                                            "src": "509:21:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 426,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "509:7:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "463:68:6"
                                },
                                "src": "450:82:6"
                            },
                            {
                                "anonymous": false,
                                "id": 436,
                                "name": "SetNonRecoverableTokens",
                                "nodeType": "EventDefinition",
                                "parameters": {
                                    "id": 435,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 431,
                                            "indexed": true,
                                            "mutability": "mutable",
                                            "name": "admin",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 436,
                                            "src": "567:21:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 430,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "567:7:6",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 434,
                                            "indexed": false,
                                            "mutability": "mutable",
                                            "name": "nonRecoverableTokens",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 436,
                                            "src": "590:37:6",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_memory_ptr",
                                                "typeString": "contract Erc20Interface[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 432,
                                                    "name": "Erc20Interface",
                                                    "nodeType": "UserDefinedTypeName",
                                                    "referencedDeclaration": 230,
                                                    "src": "590:14:6",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                        "typeString": "contract Erc20Interface"
                                                    }
                                                },
                                                "id": 433,
                                                "nodeType": "ArrayTypeName",
                                                "src": "590:16:6",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_storage_ptr",
                                                    "typeString": "contract Erc20Interface[]"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "566:62:6"
                                },
                                "src": "537:92:6"
                            }
                        ],
                        "scope": 438,
                        "src": "128:503:6"
                    }
                ],
                "src": "35:597:6"
            },
            "id": 6
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverStorage.sol": {
            "ast": {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20RecoverStorage.sol",
                "exportedSymbols": {
                    "Erc20Interface": [
                        230
                    ],
                    "Erc20RecoverStorage": [
                        448
                    ],
                    "Erc20Storage": [
                        474
                    ]
                },
                "id": 449,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 439,
                        "literals": [
                            "solidity",
                            "^",
                            "0.7",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "35:23:7"
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol",
                        "file": "./Erc20Interface.sol",
                        "id": 440,
                        "nodeType": "ImportDirective",
                        "scope": 449,
                        "sourceUnit": 231,
                        "src": "60:30:7",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": true,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "fullyImplemented": true,
                        "id": 448,
                        "linearizedBaseContracts": [
                            448
                        ],
                        "name": "Erc20RecoverStorage",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "documentation": {
                                    "id": 441,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "136:86:7",
                                    "text": " @notice The tokens that can be recovered cannot be in this mapping."
                                },
                                "functionSelector": "9e6ae5a0",
                                "id": 444,
                                "mutability": "mutable",
                                "name": "nonRecoverableTokens",
                                "nodeType": "VariableDeclaration",
                                "scope": 448,
                                "src": "227:44:7",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_storage",
                                    "typeString": "contract Erc20Interface[]"
                                },
                                "typeName": {
                                    "baseType": {
                                        "id": 442,
                                        "name": "Erc20Interface",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 230,
                                        "src": "227:14:7",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                            "typeString": "contract Erc20Interface"
                                        }
                                    },
                                    "id": 443,
                                    "nodeType": "ArrayTypeName",
                                    "src": "227:16:7",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_Erc20Interface_$230_$dyn_storage_ptr",
                                        "typeString": "contract Erc20Interface[]"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "documentation": {
                                    "id": 445,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "278:99:7",
                                    "text": " @dev A flag that signals whether the the non-recoverable tokens were set or not."
                                },
                                "id": 447,
                                "mutability": "mutable",
                                "name": "isRecoverInitialized",
                                "nodeType": "VariableDeclaration",
                                "scope": 448,
                                "src": "382:34:7",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                },
                                "typeName": {
                                    "id": 446,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "382:4:7",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "scope": 449,
                        "src": "92:327:7"
                    }
                ],
                "src": "35:385:7"
            },
            "id": 7
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol": {
            "ast": {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Storage.sol",
                "exportedSymbols": {
                    "Erc20Storage": [
                        474
                    ]
                },
                "id": 475,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 450,
                        "literals": [
                            "solidity",
                            "^",
                            "0.7",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "35:23:8"
                    },
                    {
                        "abstract": true,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 451,
                            "nodeType": "StructuredDocumentation",
                            "src": "60:129:8",
                            "text": " @title ExponentialStorage\n @author Paul Razvan Berg\n @notice The storage interface ancillary to an Erc20 contract."
                        },
                        "fullyImplemented": true,
                        "id": 474,
                        "linearizedBaseContracts": [
                            474
                        ],
                        "name": "Erc20Storage",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "documentation": {
                                    "id": 452,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "227:94:8",
                                    "text": " @notice Returns the number of decimals used to get its user representation."
                                },
                                "functionSelector": "313ce567",
                                "id": 454,
                                "mutability": "mutable",
                                "name": "decimals",
                                "nodeType": "VariableDeclaration",
                                "scope": 474,
                                "src": "326:21:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                },
                                "typeName": {
                                    "id": 453,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "326:5:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "documentation": {
                                    "id": 455,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "354:57:8",
                                    "text": " @notice Returns the name of the token."
                                },
                                "functionSelector": "06fdde03",
                                "id": 457,
                                "mutability": "mutable",
                                "name": "name",
                                "nodeType": "VariableDeclaration",
                                "scope": 474,
                                "src": "416:18:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 456,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "416:6:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "documentation": {
                                    "id": 458,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "441:105:8",
                                    "text": " @notice Returns the symbol of the token, usually a shorter version of\n the name."
                                },
                                "functionSelector": "95d89b41",
                                "id": 460,
                                "mutability": "mutable",
                                "name": "symbol",
                                "nodeType": "VariableDeclaration",
                                "scope": 474,
                                "src": "551:20:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string"
                                },
                                "typeName": {
                                    "id": 459,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "551:6:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "documentation": {
                                    "id": 461,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "578:69:8",
                                    "text": " @notice Returns the amount of tokens in existence."
                                },
                                "functionSelector": "18160ddd",
                                "id": 463,
                                "mutability": "mutable",
                                "name": "totalSupply",
                                "nodeType": "VariableDeclaration",
                                "scope": 474,
                                "src": "652:26:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 462,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "652:7:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 469,
                                "mutability": "mutable",
                                "name": "allowances",
                                "nodeType": "VariableDeclaration",
                                "scope": 474,
                                "src": "685:67:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                },
                                "typeName": {
                                    "id": 468,
                                    "keyType": {
                                        "id": 464,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "693:7:8",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "685:47:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(address => uint256))"
                                    },
                                    "valueType": {
                                        "id": 467,
                                        "keyType": {
                                            "id": 465,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "712:7:8",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Mapping",
                                        "src": "704:27:8",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                        },
                                        "valueType": {
                                            "id": 466,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "723:7:8",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        }
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 473,
                                "mutability": "mutable",
                                "name": "balances",
                                "nodeType": "VariableDeclaration",
                                "scope": 474,
                                "src": "759:45:8",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                },
                                "typeName": {
                                    "id": 472,
                                    "keyType": {
                                        "id": 470,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "767:7:8",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "759:27:8",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                    },
                                    "valueType": {
                                        "id": 471,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "778:7:8",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "scope": 475,
                        "src": "190:617:8"
                    }
                ],
                "src": "35:773:8"
            },
            "id": 8
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/SafeErc20.sol": {
            "ast": {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/SafeErc20.sol",
                "exportedSymbols": {
                    "Address": [
                        644
                    ],
                    "Erc20Interface": [
                        230
                    ],
                    "Erc20Storage": [
                        474
                    ],
                    "SafeErc20": [
                        614
                    ]
                },
                "id": 615,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 476,
                        "literals": [
                            "solidity",
                            "^",
                            "0.7",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "35:23:9"
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/token/erc20/Erc20Interface.sol",
                        "file": "./Erc20Interface.sol",
                        "id": 477,
                        "nodeType": "ImportDirective",
                        "scope": 615,
                        "sourceUnit": 231,
                        "src": "60:30:9",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/utils/Address.sol",
                        "file": "../../utils/Address.sol",
                        "id": 478,
                        "nodeType": "ImportDirective",
                        "scope": 615,
                        "sourceUnit": 645,
                        "src": "91:33:9",
                        "symbolAliases": [],
                        "unitAlias": ""
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "library",
                        "documentation": {
                            "id": 479,
                            "nodeType": "StructuredDocumentation",
                            "src": "126:641:9",
                            "text": " @title SafeErc20.sol\n @author Paul Razvan Berg\n @notice Wraps around Erc20 operations that throw on failure (when the token contract\n returns false). Tokens that return no value (and instead revert or throw\n on failure) are also supported, non-reverting calls are assumed to be successful.\n To use this library you can add a `using SafeErc20 for Erc20Interface;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n @dev Forked from OpenZeppelin\n https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v3.1.0/contracts/utils/Address.sol"
                        },
                        "fullyImplemented": true,
                        "id": 614,
                        "linearizedBaseContracts": [
                            614
                        ],
                        "name": "SafeErc20",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "id": 482,
                                "libraryName": {
                                    "id": 480,
                                    "name": "Address",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 644,
                                    "src": "798:7:9",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$644",
                                        "typeString": "library Address"
                                    }
                                },
                                "nodeType": "UsingForDirective",
                                "src": "792:26:9",
                                "typeName": {
                                    "id": 481,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "810:7:9",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                }
                            },
                            {
                                "body": {
                                    "id": 504,
                                    "nodeType": "Block",
                                    "src": "977:102:9",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 493,
                                                        "name": "token",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 485,
                                                        "src": "1006:5:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                            "typeString": "contract Erc20Interface"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "expression": {
                                                                    "expression": {
                                                                        "id": 496,
                                                                        "name": "token",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 485,
                                                                        "src": "1036:5:9",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                            "typeString": "contract Erc20Interface"
                                                                        }
                                                                    },
                                                                    "id": 497,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "transfer",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 189,
                                                                    "src": "1036:14:9",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                        "typeString": "function (address,uint256) external returns (bool)"
                                                                    }
                                                                },
                                                                "id": 498,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "1036:23:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                }
                                                            },
                                                            {
                                                                "id": 499,
                                                                "name": "to",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 487,
                                                                "src": "1061:2:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "id": 500,
                                                                "name": "value",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 489,
                                                                "src": "1065:5:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 494,
                                                                "name": "abi",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -1,
                                                                "src": "1013:3:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_abi",
                                                                    "typeString": "abi"
                                                                }
                                                            },
                                                            "id": 495,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "encodeWithSelector",
                                                            "nodeType": "MemberAccess",
                                                            "src": "1013:22:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                                                "typeString": "function (bytes4) pure returns (bytes memory)"
                                                            }
                                                        },
                                                        "id": 501,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1013:58:9",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                            "typeString": "contract Erc20Interface"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "id": 492,
                                                    "name": "callOptionalReturn",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 567,
                                                    "src": "987:18:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Erc20Interface_$230_$_t_bytes_memory_ptr_$returns$__$",
                                                        "typeString": "function (contract Erc20Interface,bytes memory)"
                                                    }
                                                },
                                                "id": 502,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "987:85:9",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 503,
                                            "nodeType": "ExpressionStatement",
                                            "src": "987:85:9"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 483,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "824:37:9",
                                    "text": " INTERNAL FUNCTIONS"
                                },
                                "id": 505,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "safeTransfer",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 490,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 485,
                                            "mutability": "mutable",
                                            "name": "token",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 505,
                                            "src": "898:20:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                "typeString": "contract Erc20Interface"
                                            },
                                            "typeName": {
                                                "id": 484,
                                                "name": "Erc20Interface",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 230,
                                                "src": "898:14:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                    "typeString": "contract Erc20Interface"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 487,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 505,
                                            "src": "928:10:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 486,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "928:7:9",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 489,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 505,
                                            "src": "948:13:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 488,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "948:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "888:79:9"
                                },
                                "returnParameters": {
                                    "id": 491,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "977:0:9"
                                },
                                "scope": 614,
                                "src": "867:212:9",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 529,
                                    "nodeType": "Block",
                                    "src": "1221:112:9",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 517,
                                                        "name": "token",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 507,
                                                        "src": "1250:5:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                            "typeString": "contract Erc20Interface"
                                                        }
                                                    },
                                                    {
                                                        "arguments": [
                                                            {
                                                                "expression": {
                                                                    "expression": {
                                                                        "id": 520,
                                                                        "name": "token",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 507,
                                                                        "src": "1280:5:9",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                            "typeString": "contract Erc20Interface"
                                                                        }
                                                                    },
                                                                    "id": 521,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "transferFrom",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 200,
                                                                    "src": "1280:18:9",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                                                    }
                                                                },
                                                                "id": 522,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "selector",
                                                                "nodeType": "MemberAccess",
                                                                "src": "1280:27:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                }
                                                            },
                                                            {
                                                                "id": 523,
                                                                "name": "from",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 509,
                                                                "src": "1309:4:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "id": 524,
                                                                "name": "to",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 511,
                                                                "src": "1315:2:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            {
                                                                "id": 525,
                                                                "name": "value",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 513,
                                                                "src": "1319:5:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_bytes4",
                                                                    "typeString": "bytes4"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "id": 518,
                                                                "name": "abi",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": -1,
                                                                "src": "1257:3:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_abi",
                                                                    "typeString": "abi"
                                                                }
                                                            },
                                                            "id": 519,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "memberName": "encodeWithSelector",
                                                            "nodeType": "MemberAccess",
                                                            "src": "1257:22:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                                                "typeString": "function (bytes4) pure returns (bytes memory)"
                                                            }
                                                        },
                                                        "id": 526,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1257:68:9",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                            "typeString": "contract Erc20Interface"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "id": 516,
                                                    "name": "callOptionalReturn",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 567,
                                                    "src": "1231:18:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_Erc20Interface_$230_$_t_bytes_memory_ptr_$returns$__$",
                                                        "typeString": "function (contract Erc20Interface,bytes memory)"
                                                    }
                                                },
                                                "id": 527,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1231:95:9",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 528,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1231:95:9"
                                        }
                                    ]
                                },
                                "id": 530,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "safeTransferFrom",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 514,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 507,
                                            "mutability": "mutable",
                                            "name": "token",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 530,
                                            "src": "1120:20:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                "typeString": "contract Erc20Interface"
                                            },
                                            "typeName": {
                                                "id": 506,
                                                "name": "Erc20Interface",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 230,
                                                "src": "1120:14:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                    "typeString": "contract Erc20Interface"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 509,
                                            "mutability": "mutable",
                                            "name": "from",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 530,
                                            "src": "1150:12:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 508,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1150:7:9",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 511,
                                            "mutability": "mutable",
                                            "name": "to",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 530,
                                            "src": "1172:10:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 510,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1172:7:9",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 513,
                                            "mutability": "mutable",
                                            "name": "value",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 530,
                                            "src": "1192:13:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 512,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1192:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1110:101:9"
                                },
                                "returnParameters": {
                                    "id": 515,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1221:0:9"
                                },
                                "scope": 614,
                                "src": "1085:248:9",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 566,
                                    "nodeType": "Block",
                                    "src": "1833:634:9",
                                    "statements": [
                                        {
                                            "assignments": [
                                                539
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 539,
                                                    "mutability": "mutable",
                                                    "name": "returndata",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 566,
                                                    "src": "2181:23:9",
                                                    "stateVariable": false,
                                                    "storageLocation": "memory",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                        "typeString": "bytes"
                                                    },
                                                    "typeName": {
                                                        "id": 538,
                                                        "name": "bytes",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2181:5:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_storage_ptr",
                                                            "typeString": "bytes"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 548,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 543,
                                                                "name": "token",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 533,
                                                                "src": "2237:5:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                    "typeString": "contract Erc20Interface"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                                    "typeString": "contract Erc20Interface"
                                                                }
                                                            ],
                                                            "id": 542,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "2229:7:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 541,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "2229:7:9",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 544,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2229:14:9",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 545,
                                                        "name": "data",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 535,
                                                        "src": "2245:4:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4552525f534146455f45524332305f4c4f575f4c4556454c5f43414c4c",
                                                        "id": 546,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2251:31:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_a4283169655eb950fa7d31a2f58320cd994a8f23a6cb6f4a29a5bfa3a8bbc16f",
                                                            "typeString": "literal_string \"ERR_SAFE_ERC20_LOW_LEVEL_CALL\""
                                                        },
                                                        "value": "ERR_SAFE_ERC20_LOW_LEVEL_CALL"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_a4283169655eb950fa7d31a2f58320cd994a8f23a6cb6f4a29a5bfa3a8bbc16f",
                                                            "typeString": "literal_string \"ERR_SAFE_ERC20_LOW_LEVEL_CALL\""
                                                        }
                                                    ],
                                                    "id": 540,
                                                    "name": "functionCallWithValue",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 613,
                                                    "src": "2207:21:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                                                    }
                                                },
                                                "id": 547,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2207:76:9",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "2181:102:9"
                                        },
                                        {
                                            "condition": {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 552,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 549,
                                                        "name": "returndata",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 539,
                                                        "src": "2297:10:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    },
                                                    "id": 550,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "length",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2297:17:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 551,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2317:1:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "2297:21:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 565,
                                            "nodeType": "IfStatement",
                                            "src": "2293:168:9",
                                            "trueBody": {
                                                "id": 564,
                                                "nodeType": "Block",
                                                "src": "2320:141:9",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 556,
                                                                            "name": "returndata",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 539,
                                                                            "src": "2396:10:9",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                                "typeString": "bytes memory"
                                                                            }
                                                                        },
                                                                        {
                                                                            "components": [
                                                                                {
                                                                                    "id": 558,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "ElementaryTypeNameExpression",
                                                                                    "src": "2409:4:9",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_type$_t_bool_$",
                                                                                        "typeString": "type(bool)"
                                                                                    },
                                                                                    "typeName": {
                                                                                        "id": 557,
                                                                                        "name": "bool",
                                                                                        "nodeType": "ElementaryTypeName",
                                                                                        "src": "2409:4:9",
                                                                                        "typeDescriptions": {}
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "id": 559,
                                                                            "isConstant": false,
                                                                            "isInlineArray": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "TupleExpression",
                                                                            "src": "2408:6:9",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_bool_$",
                                                                                "typeString": "type(bool)"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                                "typeString": "bytes memory"
                                                                            },
                                                                            {
                                                                                "typeIdentifier": "t_type$_t_bool_$",
                                                                                "typeString": "type(bool)"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "id": 554,
                                                                            "name": "abi",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": -1,
                                                                            "src": "2385:3:9",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_abi",
                                                                                "typeString": "abi"
                                                                            }
                                                                        },
                                                                        "id": 555,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "lValueRequested": false,
                                                                        "memberName": "decode",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "2385:10:9",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                                                            "typeString": "function () pure"
                                                                        }
                                                                    },
                                                                    "id": 560,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "2385:30:9",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                {
                                                                    "hexValue": "4552525f534146455f45524332305f45524332305f4f5045524154494f4e",
                                                                    "id": 561,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "2417:32:9",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_9c72ad246508b26effe443912f84707bbae30629df26bc31adee512809015edf",
                                                                        "typeString": "literal_string \"ERR_SAFE_ERC20_ERC20_OPERATION\""
                                                                    },
                                                                    "value": "ERR_SAFE_ERC20_ERC20_OPERATION"
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    {
                                                                        "typeIdentifier": "t_stringliteral_9c72ad246508b26effe443912f84707bbae30629df26bc31adee512809015edf",
                                                                        "typeString": "literal_string \"ERR_SAFE_ERC20_ERC20_OPERATION\""
                                                                    }
                                                                ],
                                                                "id": 553,
                                                                "name": "require",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                    -18,
                                                                    -18
                                                                ],
                                                                "referencedDeclaration": -18,
                                                                "src": "2377:7:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                                    "typeString": "function (bool,string memory) pure"
                                                                }
                                                            },
                                                            "id": 562,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "2377:73:9",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                            }
                                                        },
                                                        "id": 563,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2377:73:9"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 531,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "1381:370:9",
                                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it cannot be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
                                },
                                "id": 567,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "callOptionalReturn",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 536,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 533,
                                            "mutability": "mutable",
                                            "name": "token",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 567,
                                            "src": "1784:20:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                "typeString": "contract Erc20Interface"
                                            },
                                            "typeName": {
                                                "id": 532,
                                                "name": "Erc20Interface",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 230,
                                                "src": "1784:14:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Erc20Interface_$230",
                                                    "typeString": "contract Erc20Interface"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 535,
                                            "mutability": "mutable",
                                            "name": "data",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 567,
                                            "src": "1806:17:9",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes"
                                            },
                                            "typeName": {
                                                "id": 534,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1806:5:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1783:41:9"
                                },
                                "returnParameters": {
                                    "id": 537,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1833:0:9"
                                },
                                "scope": 614,
                                "src": "1756:711:9",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "private"
                            },
                            {
                                "body": {
                                    "id": 612,
                                    "nodeType": "Block",
                                    "src": "2628:815:9",
                                    "statements": [
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "expression": {
                                                                "id": 579,
                                                                "name": "target",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 569,
                                                                "src": "2646:6:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                }
                                                            },
                                                            "id": 580,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "isContract",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 643,
                                                            "src": "2646:17:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                                                                "typeString": "function (address) view returns (bool)"
                                                            }
                                                        },
                                                        "id": 581,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2646:19:9",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4552525f534146455f45524332305f43414c4c5f544f5f4e4f4e5f434f4e5452414354",
                                                        "id": 582,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2667:37:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_ad4858cb61e61d4b1ee047310ecdc893ab26c5be5619815770581f05ff1cf0d7",
                                                            "typeString": "literal_string \"ERR_SAFE_ERC20_CALL_TO_NON_CONTRACT\""
                                                        },
                                                        "value": "ERR_SAFE_ERC20_CALL_TO_NON_CONTRACT"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_ad4858cb61e61d4b1ee047310ecdc893ab26c5be5619815770581f05ff1cf0d7",
                                                            "typeString": "literal_string \"ERR_SAFE_ERC20_CALL_TO_NON_CONTRACT\""
                                                        }
                                                    ],
                                                    "id": 578,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        -18,
                                                        -18
                                                    ],
                                                    "referencedDeclaration": -18,
                                                    "src": "2638:7:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 583,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2638:67:9",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 584,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2638:67:9"
                                        },
                                        {
                                            "assignments": [
                                                586,
                                                588
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 586,
                                                    "mutability": "mutable",
                                                    "name": "success",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 612,
                                                    "src": "2779:12:9",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "typeName": {
                                                        "id": 585,
                                                        "name": "bool",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2779:4:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                },
                                                {
                                                    "constant": false,
                                                    "id": 588,
                                                    "mutability": "mutable",
                                                    "name": "returndata",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 612,
                                                    "src": "2793:23:9",
                                                    "stateVariable": false,
                                                    "storageLocation": "memory",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                        "typeString": "bytes"
                                                    },
                                                    "typeName": {
                                                        "id": 587,
                                                        "name": "bytes",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2793:5:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_storage_ptr",
                                                            "typeString": "bytes"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 593,
                                            "initialValue": {
                                                "arguments": [
                                                    {
                                                        "id": 591,
                                                        "name": "data",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 571,
                                                        "src": "2832:4:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes_memory_ptr",
                                                            "typeString": "bytes memory"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 589,
                                                        "name": "target",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 569,
                                                        "src": "2820:6:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "id": 590,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "call",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2820:11:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                                    }
                                                },
                                                "id": 592,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2820:17:9",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                                    "typeString": "tuple(bool,bytes memory)"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "2778:59:9"
                                        },
                                        {
                                            "condition": {
                                                "id": 594,
                                                "name": "success",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 586,
                                                "src": "2851:7:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": {
                                                "id": 610,
                                                "nodeType": "Block",
                                                "src": "2908:529:9",
                                                "statements": [
                                                    {
                                                        "condition": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 601,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "expression": {
                                                                    "id": 598,
                                                                    "name": "returndata",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 588,
                                                                    "src": "2995:10:9",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bytes_memory_ptr",
                                                                        "typeString": "bytes memory"
                                                                    }
                                                                },
                                                                "id": 599,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "length",
                                                                "nodeType": "MemberAccess",
                                                                "src": "2995:17:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": ">",
                                                            "rightExpression": {
                                                                "hexValue": "30",
                                                                "id": 600,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "3015:1:9",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0"
                                                            },
                                                            "src": "2995:21:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "falseBody": {
                                                            "id": 608,
                                                            "nodeType": "Block",
                                                            "src": "3374:53:9",
                                                            "statements": [
                                                                {
                                                                    "expression": {
                                                                        "arguments": [
                                                                            {
                                                                                "id": 605,
                                                                                "name": "errorMessage",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 573,
                                                                                "src": "3399:12:9",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                                    "typeString": "string memory"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                                    "typeString": "string memory"
                                                                                }
                                                                            ],
                                                                            "id": 604,
                                                                            "name": "revert",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [
                                                                                -19,
                                                                                -19
                                                                            ],
                                                                            "referencedDeclaration": -19,
                                                                            "src": "3392:6:9",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                                                "typeString": "function (string memory) pure"
                                                                            }
                                                                        },
                                                                        "id": 606,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "functionCall",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "3392:20:9",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_tuple$__$",
                                                                            "typeString": "tuple()"
                                                                        }
                                                                    },
                                                                    "id": 607,
                                                                    "nodeType": "ExpressionStatement",
                                                                    "src": "3392:20:9"
                                                                }
                                                            ]
                                                        },
                                                        "id": 609,
                                                        "nodeType": "IfStatement",
                                                        "src": "2991:436:9",
                                                        "trueBody": {
                                                            "id": 603,
                                                            "nodeType": "Block",
                                                            "src": "3018:350:9",
                                                            "statements": [
                                                                {
                                                                    "AST": {
                                                                        "nodeType": "YulBlock",
                                                                        "src": "3209:145:9",
                                                                        "statements": [
                                                                            {
                                                                                "nodeType": "YulVariableDeclaration",
                                                                                "src": "3231:40:9",
                                                                                "value": {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "name": "returndata",
                                                                                            "nodeType": "YulIdentifier",
                                                                                            "src": "3260:10:9"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "mload",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "3254:5:9"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "3254:17:9"
                                                                                },
                                                                                "variables": [
                                                                                    {
                                                                                        "name": "returndata_size",
                                                                                        "nodeType": "YulTypedName",
                                                                                        "src": "3235:15:9",
                                                                                        "type": ""
                                                                                    }
                                                                                ]
                                                                            },
                                                                            {
                                                                                "expression": {
                                                                                    "arguments": [
                                                                                        {
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "kind": "number",
                                                                                                    "nodeType": "YulLiteral",
                                                                                                    "src": "3303:2:9",
                                                                                                    "type": "",
                                                                                                    "value": "32"
                                                                                                },
                                                                                                {
                                                                                                    "name": "returndata",
                                                                                                    "nodeType": "YulIdentifier",
                                                                                                    "src": "3307:10:9"
                                                                                                }
                                                                                            ],
                                                                                            "functionName": {
                                                                                                "name": "add",
                                                                                                "nodeType": "YulIdentifier",
                                                                                                "src": "3299:3:9"
                                                                                            },
                                                                                            "nodeType": "YulFunctionCall",
                                                                                            "src": "3299:19:9"
                                                                                        },
                                                                                        {
                                                                                            "name": "returndata_size",
                                                                                            "nodeType": "YulIdentifier",
                                                                                            "src": "3320:15:9"
                                                                                        }
                                                                                    ],
                                                                                    "functionName": {
                                                                                        "name": "revert",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "3292:6:9"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "3292:44:9"
                                                                                },
                                                                                "nodeType": "YulExpressionStatement",
                                                                                "src": "3292:44:9"
                                                                            }
                                                                        ]
                                                                    },
                                                                    "evmVersion": "istanbul",
                                                                    "externalReferences": [
                                                                        {
                                                                            "declaration": 588,
                                                                            "isOffset": false,
                                                                            "isSlot": false,
                                                                            "src": "3260:10:9",
                                                                            "valueSize": 1
                                                                        },
                                                                        {
                                                                            "declaration": 588,
                                                                            "isOffset": false,
                                                                            "isSlot": false,
                                                                            "src": "3307:10:9",
                                                                            "valueSize": 1
                                                                        }
                                                                    ],
                                                                    "id": 602,
                                                                    "nodeType": "InlineAssembly",
                                                                    "src": "3200:154:9"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "id": 611,
                                            "nodeType": "IfStatement",
                                            "src": "2847:590:9",
                                            "trueBody": {
                                                "id": 597,
                                                "nodeType": "Block",
                                                "src": "2860:42:9",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "id": 595,
                                                            "name": "returndata",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 588,
                                                            "src": "2881:10:9",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        },
                                                        "functionReturnParameters": 577,
                                                        "id": 596,
                                                        "nodeType": "Return",
                                                        "src": "2874:17:9"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "id": 613,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "functionCallWithValue",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 574,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 569,
                                            "mutability": "mutable",
                                            "name": "target",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 613,
                                            "src": "2513:14:9",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 568,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2513:7:9",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 571,
                                            "mutability": "mutable",
                                            "name": "data",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 613,
                                            "src": "2537:17:9",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes"
                                            },
                                            "typeName": {
                                                "id": 570,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2537:5:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            },
                                            "visibility": "internal"
                                        },
                                        {
                                            "constant": false,
                                            "id": 573,
                                            "mutability": "mutable",
                                            "name": "errorMessage",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 613,
                                            "src": "2564:26:9",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 572,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2564:6:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2503:93:9"
                                },
                                "returnParameters": {
                                    "id": 577,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 576,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 613,
                                            "src": "2614:12:9",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes"
                                            },
                                            "typeName": {
                                                "id": 575,
                                                "name": "bytes",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2614:5:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_storage_ptr",
                                                    "typeString": "bytes"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "2613:14:9"
                                },
                                "scope": 614,
                                "src": "2473:970:9",
                                "stateMutability": "nonpayable",
                                "virtual": false,
                                "visibility": "private"
                            }
                        ],
                        "scope": 615,
                        "src": "768:2677:9"
                    }
                ],
                "src": "35:3411:9"
            },
            "id": 9
        },
        "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/utils/Address.sol": {
            "ast": {
                "absolutePath": "/Users/paulrberg/Workspace/Packages/@paulrberg/contracts/contracts/utils/Address.sol",
                "exportedSymbols": {
                    "Address": [
                        644
                    ]
                },
                "id": 645,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 616,
                        "literals": [
                            "solidity",
                            "^",
                            "0.7",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "35:23:10"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "library",
                        "documentation": {
                            "id": 617,
                            "nodeType": "StructuredDocumentation",
                            "src": "60:258:10",
                            "text": " @title Address\n @author Paul Razvan Berg\n @notice Collection of functions related to the address type.\n @dev Forked from OpenZeppelin\n https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-contracts/v3.1.0/contracts/utils/Address.sol"
                        },
                        "fullyImplemented": true,
                        "id": 644,
                        "linearizedBaseContracts": [
                            644
                        ],
                        "name": "Address",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "body": {
                                    "id": 642,
                                    "nodeType": "Block",
                                    "src": "977:568:10",
                                    "statements": [
                                        {
                                            "assignments": [
                                                626
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 626,
                                                    "mutability": "mutable",
                                                    "name": "codehash",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 642,
                                                    "src": "1230:16:10",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    },
                                                    "typeName": {
                                                        "id": 625,
                                                        "name": "bytes32",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1230:7:10",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 627,
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "1230:16:10"
                                        },
                                        {
                                            "assignments": [
                                                629
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 629,
                                                    "mutability": "mutable",
                                                    "name": "accountHash",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 642,
                                                    "src": "1256:19:10",
                                                    "stateVariable": false,
                                                    "storageLocation": "default",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    },
                                                    "typeName": {
                                                        "id": 628,
                                                        "name": "bytes32",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1256:7:10",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes32",
                                                            "typeString": "bytes32"
                                                        }
                                                    },
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 631,
                                            "initialValue": {
                                                "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                                                "id": 630,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1278:66:10",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                                                    "typeString": "int_const 8947...(69 digits omitted)...1552"
                                                },
                                                "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "1256:88:10"
                                        },
                                        {
                                            "AST": {
                                                "nodeType": "YulBlock",
                                                "src": "1422:56:10",
                                                "statements": [
                                                    {
                                                        "nodeType": "YulAssignment",
                                                        "src": "1436:32:10",
                                                        "value": {
                                                            "arguments": [
                                                                {
                                                                    "name": "account",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "1460:7:10"
                                                                }
                                                            ],
                                                            "functionName": {
                                                                "name": "extcodehash",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1448:11:10"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "1448:20:10"
                                                        },
                                                        "variableNames": [
                                                            {
                                                                "name": "codehash",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "1436:8:10"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            },
                                            "evmVersion": "istanbul",
                                            "externalReferences": [
                                                {
                                                    "declaration": 620,
                                                    "isOffset": false,
                                                    "isSlot": false,
                                                    "src": "1460:7:10",
                                                    "valueSize": 1
                                                },
                                                {
                                                    "declaration": 626,
                                                    "isOffset": false,
                                                    "isSlot": false,
                                                    "src": "1436:8:10",
                                                    "valueSize": 1
                                                }
                                            ],
                                            "id": 632,
                                            "nodeType": "InlineAssembly",
                                            "src": "1413:65:10"
                                        },
                                        {
                                            "expression": {
                                                "components": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        "id": 639,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_bytes32",
                                                                "typeString": "bytes32"
                                                            },
                                                            "id": 635,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 633,
                                                                "name": "codehash",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 626,
                                                                "src": "1495:8:10",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "!=",
                                                            "rightExpression": {
                                                                "id": 634,
                                                                "name": "accountHash",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 629,
                                                                "src": "1507:11:10",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                }
                                                            },
                                                            "src": "1495:23:10",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "&&",
                                                        "rightExpression": {
                                                            "commonType": {
                                                                "typeIdentifier": "t_bytes32",
                                                                "typeString": "bytes32"
                                                            },
                                                            "id": 638,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 636,
                                                                "name": "codehash",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 626,
                                                                "src": "1522:8:10",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bytes32",
                                                                    "typeString": "bytes32"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "!=",
                                                            "rightExpression": {
                                                                "hexValue": "307830",
                                                                "id": 637,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "1534:3:10",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0x0"
                                                            },
                                                            "src": "1522:15:10",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "src": "1495:42:10",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "id": 640,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "1494:44:10",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "functionReturnParameters": 624,
                                            "id": 641,
                                            "nodeType": "Return",
                                            "src": "1487:51:10"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 618,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "341:565:10",
                                    "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
                                },
                                "id": 643,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "isContract",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 621,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 620,
                                            "mutability": "mutable",
                                            "name": "account",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 643,
                                            "src": "931:15:10",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 619,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "931:7:10",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "930:17:10"
                                },
                                "returnParameters": {
                                    "id": 624,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 623,
                                            "mutability": "mutable",
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 643,
                                            "src": "971:4:10",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 622,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "971:4:10",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "970:6:10"
                                },
                                "scope": 644,
                                "src": "911:634:10",
                                "stateMutability": "view",
                                "virtual": false,
                                "visibility": "internal"
                            }
                        ],
                        "scope": 645,
                        "src": "319:1228:10"
                    }
                ],
                "src": "35:1513:10"
            },
            "id": 10
        }
    }
}